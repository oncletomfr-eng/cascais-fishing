'use client';

import React, { ReactNode, useEffect } from 'react';
import { ErrorBoundary } from '@/components/error-boundaries/ErrorBoundary';

interface ErrorProviderProps {
  children: ReactNode;
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
const setupGlobalErrorHandlers = () => {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö promise rejections
  const handleUnhandledRejection = (event: PromiseRejectionEvent) => {
    console.error('üö® Unhandled Promise Rejection:', event.reason);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ
    const errorReport = {
      id: Math.random().toString(36).substring(2, 15),
      error: {
        name: 'UnhandledPromiseRejection',
        message: event.reason?.message || String(event.reason),
        stack: event.reason?.stack,
      },
      errorInfo: {
        componentStack: 'N/A (Promise Rejection)',
      },
      timestamp: new Date().toISOString(),
      userAgent: navigator.userAgent,
      url: window.location.href,
      level: 'critical' as const,
      boundaryName: 'Global Promise Handler',
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ API
    fetch('/api/error-reports', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(errorReport),
    }).catch(reportError => {
      console.error('Failed to report unhandled rejection:', reportError);
    });

    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
    event.preventDefault();
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ JavaScript –æ—à–∏–±–æ–∫
  const handleError = (event: ErrorEvent) => {
    console.error('üö® Global Error:', event.error);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ
    const errorReport = {
      id: Math.random().toString(36).substring(2, 15),
      error: {
        name: event.error?.name || 'GlobalError',
        message: event.message || 'Unknown error',
        stack: event.error?.stack,
      },
      errorInfo: {
        componentStack: `N/A (Global Error at ${event.filename}:${event.lineno}:${event.colno})`,
      },
      timestamp: new Date().toISOString(),
      userAgent: navigator.userAgent,
      url: window.location.href,
      level: 'critical' as const,
      boundaryName: 'Global Error Handler',
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ API
    fetch('/api/error-reports', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(errorReport),
    }).catch(reportError => {
      console.error('Failed to report global error:', reportError);
    });
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Resource Loading (CSS, JS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
  const handleResourceError = (event: Event) => {
    const target = event.target as HTMLElement;
    if (target && (target.tagName === 'IMG' || target.tagName === 'SCRIPT' || target.tagName === 'LINK')) {
      console.warn('üö® Resource Load Error:', target);
      
      const errorReport = {
        id: Math.random().toString(36).substring(2, 15),
        error: {
          name: 'ResourceLoadError',
          message: `Failed to load ${target.tagName}: ${(target as any).src || (target as any).href}`,
          stack: undefined,
        },
        errorInfo: {
          componentStack: `Resource: ${target.outerHTML}`,
        },
        timestamp: new Date().toISOString(),
        userAgent: navigator.userAgent,
        url: window.location.href,
        level: 'component' as const,
        boundaryName: 'Resource Loader',
      };

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ API (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤)
      if (target.tagName === 'SCRIPT') {
        fetch('/api/error-reports', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(errorReport),
        }).catch(() => {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è resource errors
        });
      }
    }
  };

  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  if (typeof window !== 'undefined') {
    window.addEventListener('unhandledrejection', handleUnhandledRejection);
    window.addEventListener('error', handleError);
    window.addEventListener('error', handleResourceError, true); // Capture phase –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤
    
    // Cleanup —Ñ—É–Ω–∫—Ü–∏—è
    return () => {
      window.removeEventListener('unhandledrejection', handleUnhandledRejection);
      window.removeEventListener('error', handleError);
      window.removeEventListener('error', handleResourceError, true);
    };
  }

  return () => {};
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è —Å–∞–º–æ–≥–æ ErrorProvider
const handleProviderError = (error: Error, errorInfo: React.ErrorInfo) => {
  console.error('üö® Critical Error in ErrorProvider:', error);
  
  // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç
  const errorReport = {
    id: Math.random().toString(36).substring(2, 15),
    error: {
      name: error.name,
      message: error.message,
      stack: error.stack,
    },
    errorInfo: {
      componentStack: errorInfo.componentStack,
    },
    timestamp: new Date().toISOString(),
    userAgent: typeof window !== 'undefined' ? navigator.userAgent : 'Unknown',
    url: typeof window !== 'undefined' ? window.location.href : 'Unknown',
    level: 'critical' as const,
    boundaryName: 'ErrorProvider',
  };

  // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç
  if (typeof window !== 'undefined') {
    fetch('/api/error-reports', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(errorReport),
    }).catch(() => {
      // –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å - –∏—Å–ø–æ–ª—å–∑—É–µ–º console
      console.error('Failed to report critical ErrorProvider error');
    });
  }
};

// Fallback UI –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ ErrorProvider
const CriticalErrorFallback = () => (
  <div className="min-h-screen flex items-center justify-center bg-red-50 p-4">
    <div className="text-center max-w-md">
      <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
        <span className="text-red-600 text-2xl">‚ö†Ô∏è</span>
      </div>
      <h1 className="text-xl font-bold text-red-800 mb-2">
        –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã
      </h1>
      <p className="text-red-700 mb-4">
        –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Å–µ—Ä—å–µ–∑–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫. 
        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.
      </p>
      <button
        onClick={() => window.location.reload()}
        className="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition-colors"
      >
        –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
      </button>
    </div>
  </div>
);

export function ErrorProvider({ children }: ErrorProviderProps) {
  useEffect(() => {
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
    const cleanup = setupGlobalErrorHandlers();
    
    // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã –æ—à–∏–±–æ–∫
    console.log('üõ°Ô∏è Error handling system initialized');
    
    return cleanup;
  }, []);

  return (
    <ErrorBoundary
      fallback={<CriticalErrorFallback />}
      name="ErrorProvider"
      level="critical"
      onError={handleProviderError}
    >
      {children}
    </ErrorBoundary>
  );
}

export default ErrorProvider;
