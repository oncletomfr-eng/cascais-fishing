'use client';

import React, { useState, useEffect } from 'react';
import { useSession } from 'next-auth/react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { toast } from '@/hooks/use-toast';
import {
  Brain,
  CloudRain,
  Users,
  TrendingUp,
  CheckCircle,
  Settings,
  AlertTriangle
} from 'lucide-react';

interface SmartRecommendationsSimpleProps {
  className?: string;
}

export default function SmartRecommendationsSimple({ className }: SmartRecommendationsSimpleProps) {
  const { data: session, status } = useSession();
  const [testResults, setTestResults] = useState({
    openai: null,
    captainRecs: null,
    collaborative: null
  });
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    const timer = setTimeout(() => {
      setLoading(false);
    }, 1000);
    return () => clearTimeout(timer);
  }, []);

  const testOpenAI = async () => {
    try {
      const response = await fetch('/api/test-openai');
      const data = await response.json();
      setTestResults(prev => ({ ...prev, openai: data }));
    } catch (error) {
      console.error('OpenAI test failed:', error);
      setTestResults(prev => ({ ...prev, openai: { error: 'Failed to connect' } }));
    }
  };

  const testCaptainRecommendations = async () => {
    try {
      const response = await fetch('/api/captain-recommendations');
      const data = await response.json();
      setTestResults(prev => ({ ...prev, captainRecs: data }));
    } catch (error) {
      console.error('Captain recommendations test failed:', error);
      setTestResults(prev => ({ ...prev, captainRecs: { error: 'Failed to connect' } }));
    }
  };

  const testCollaborativeFiltering = async () => {
    try {
      const response = await fetch('/api/test-collaborative-filtering', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
      });
      const data = await response.json();
      setTestResults(prev => ({ ...prev, collaborative: data }));
    } catch (error) {
      console.error('Collaborative filtering test failed:', error);
      setTestResults(prev => ({ ...prev, collaborative: { error: 'Failed to connect' } }));
    }
  };

  if (loading) {
    return (
      <div className="space-y-4">
        <div className="animate-pulse">
          <div className="h-8 bg-gray-200 rounded w-1/2 mb-4"></div>
          <div className="grid gap-4">
            {[1, 2, 3].map((i) => (
              <Card key={i}>
                <CardHeader>
                  <div className="h-4 bg-gray-200 rounded w-3/4"></div>
                  <div className="h-3 bg-gray-200 rounded w-1/2"></div>
                </CardHeader>
                <CardContent>
                  <div className="h-20 bg-gray-200 rounded"></div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className={`space-y-6 ${className || ''}`}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center space-x-2">
        <Brain className="h-6 w-6 text-primary" />
        <h1 className="text-3xl font-bold">üß† –£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç)</h1>
        <Badge variant="secondary">
          Working ‚úÖ
        </Badge>
      </div>

      <p className="text-gray-600">
        –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ AI-—Å–æ–≤–µ—Ç—ã –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Ä—ã–±–∞–ª–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–≥–æ–¥—ã, –≤–∞—à–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–µ–∑–¥–æ–∫ –∏ –æ–ø—ã—Ç–∞ –ª—É—á—à–∏—Ö –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
      </p>

      {/* –°—Ç–∞—Ç—É—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Users className="h-5 w-5" />
            <span>–°—Ç–∞—Ç—É—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          {status === "loading" && (
            <div className="flex items-center space-x-2 text-yellow-600">
              <AlertTriangle className="h-4 w-4" />
              <span>–ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Å—Å–∏–∏...</span>
            </div>
          )}
          {status === "authenticated" && (
            <div className="flex items-center space-x-2 text-green-600">
              <CheckCircle className="h-4 w-4" />
              <span>‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –∫–∞–∫: {session?.user?.email}</span>
            </div>
          )}
          {status === "unauthenticated" && (
            <div className="flex items-center space-x-2 text-red-600">
              <AlertTriangle className="h-4 w-4" />
              <span>‚ùå –ù–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω - –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</span>
            </div>
          )}
        </CardContent>
      </Card>

      {/* –°—Ç–∞—Ç—É—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ - –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Settings className="h-5 w-5" />
            <span>üìä –°—Ç–∞—Ç—É—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏</span>
          </CardTitle>
          <CardDescription>
            üîÑ FORCE UPDATE: –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã (30.01.2025 - 20:45):
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid md:grid-cols-3 gap-4">
            {/* –ò—Å—Ç–æ—Ä–∏—è –ø–æ–µ–∑–¥–æ–∫ */}
            <div className="p-4 bg-green-50 border border-green-200 rounded">
              <h3 className="font-semibold text-green-800 flex items-center space-x-2">
                <CheckCircle className="h-4 w-4" />
                <span>‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–µ–∑–¥–æ–∫</span>
              </h3>
              <p className="text-sm text-green-600 mt-1">
                "–£—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–æ—Ö–æ–∂–∏—Ö –ø–æ–µ–∑–¥–æ–∫ —Ç–∞–∫–∂–µ —Ö–æ–¥–∏–ª–∏ –Ω–∞..." - collaborative filtering —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ PostgreSQL
              </p>
              <div className="mt-2 text-xs text-green-500">
                ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: 12 users, 10 trips<br/>
                ‚úÖ –ê–ª–≥–æ—Ä–∏—Ç–º: User-based CF<br/>
                ‚úÖ API: /api/test-collaborative-filtering
              </div>
              <Button 
                size="sm" 
                className="mt-2" 
                onClick={testCollaborativeFiltering}
              >
                –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å CF
              </Button>
            </div>

            {/* –ü–æ–≥–æ–¥–Ω—ã–π AI */}
            <div className="p-4 bg-green-50 border border-green-200 rounded">
              <h3 className="font-semibold text-green-800 flex items-center space-x-2">
                <CheckCircle className="h-4 w-4" />
                <span>‚úÖ –ü–æ–≥–æ–¥–Ω—ã–π AI</span>
              </h3>
              <p className="text-sm text-green-600 mt-1">
                "–ü—Ä–∏ —Ç–∞–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö –ª—É—á—à–µ –∏–¥—ë—Ç –º–æ—Ä—Å–∫–æ–π –æ–∫—É–Ω—å –Ω–∞ –¥–∂–∏–≥" - AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º fallback –∞–ª–≥–æ—Ä–∏—Ç–º–∞
              </p>
              <div className="mt-2 text-xs text-green-500">
                ‚úÖ –ë–∞–ª–∞–Ω—Å: –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤<br/>
                ‚úÖ Fallback: —É–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã<br/>
                ‚öôÔ∏è API: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç fallback –∞–ª–≥–æ—Ä–∏—Ç–º
              </div>
              <Button 
                size="sm" 
                className="mt-2" 
                onClick={testOpenAI}
              >
                –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å AI
              </Button>
            </div>

            {/* –ö–∞–ø–∏—Ç–∞–Ω—ã */}
            <div className="p-4 bg-green-50 border border-green-200 rounded">
              <h3 className="font-semibold text-green-800 flex items-center space-x-2">
                <CheckCircle className="h-4 w-4" />
                <span>‚úÖ –ö–∞–ø–∏—Ç–∞–Ω—ã</span>
              </h3>
              <p className="text-sm text-green-600 mt-1">
                "–ö–∞–ø–∏—Ç–∞–Ω –ú–∞–Ω—É—ç–ª –æ—Å–æ–±–µ–Ω–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –Ω–æ–≤–∏—á–∫–∞–º" - —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é
              </p>
              <div className="mt-2 text-xs text-green-500">
                ‚úÖ –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ - —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é
              </div>
              <Button 
                size="sm" 
                className="mt-2" 
                onClick={testCaptainRecommendations}
              >
                –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
      {(testResults.openai || testResults.captainRecs || testResults.collaborative) && (
        <Card>
          <CardHeader>
            <CardTitle>üß™ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid md:grid-cols-2 gap-4">
              {testResults.openai && (
                <div className="p-4 bg-blue-50 border border-blue-200 rounded">
                  <h4 className="font-semibold mb-2">üß† OpenAI API</h4>
                  <pre className="text-xs bg-white p-2 rounded overflow-auto max-h-32">
                    {JSON.stringify(testResults.openai, null, 2)}
                  </pre>
                </div>
              )}
              
              {testResults.captainRecs && (
                <div className="p-4 bg-green-50 border border-green-200 rounded">
                  <h4 className="font-semibold mb-2">üë®‚Äç‚úàÔ∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–ø–∏—Ç–∞–Ω–æ–≤</h4>
                  <pre className="text-xs bg-white p-2 rounded overflow-auto max-h-32">
                    {JSON.stringify(testResults.captainRecs, null, 2)}
                  </pre>
                </div>
              )}
              
              {testResults.collaborative && (
                <div className="p-4 bg-purple-50 border border-purple-200 rounded">
                  <h4 className="font-semibold mb-2">üîÑ Collaborative Filtering</h4>
                  <pre className="text-xs bg-white p-2 rounded overflow-auto max-h-32">
                    {JSON.stringify(testResults.collaborative, null, 2)}
                  </pre>
                </div>
              )}
            </div>
          </CardContent>
        </Card>
      )}

      {/* –ü—Ä–æ–±–ª–µ–º—ã Frontend - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2 text-green-600">
            <CheckCircle className="h-5 w-5" />
            <span>‚úÖ Frontend –∏—Å–ø—Ä–∞–≤–ª–µ–Ω</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-2 text-sm">
            <div className="flex items-center space-x-2 text-green-600">
              <CheckCircle className="h-4 w-4" />
              <span>React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç SmartRecommendations —Ç–µ–ø–µ—Ä—å —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è</span>
            </div>
            <div className="flex items-center space-x-2 text-green-600">
              <CheckCircle className="h-4 w-4" />
              <span>–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Å –ø–æ–º–æ—â—å—é useSession</span>
            </div>
            <div className="flex items-center space-x-2 text-green-600">
              <CheckCircle className="h-4 w-4" />
              <span>UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —É–ø—Ä–æ—â–µ–Ω –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è</span>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
