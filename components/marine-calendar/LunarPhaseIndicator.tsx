'use client';

import React from 'react';
import { cn } from '@/lib/utils';
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';

interface LunarPhaseIndicatorProps {
  phase: string;
  illumination: number;
  size?: 'sm' | 'md' | 'lg';
  showLabel?: boolean;
  className?: string;
}

export function LunarPhaseIndicator({ 
  phase, 
  illumination, 
  size = 'md', 
  showLabel = false, 
  className 
}: LunarPhaseIndicatorProps) {
  const sizeClasses = {
    sm: 'w-6 h-6',
    md: 'w-10 h-10',
    lg: 'w-16 h-16'
  };

  const textSizes = {
    sm: 'text-xs',
    md: 'text-sm',
    lg: 'text-base'
  };

  const getMoonSymbol = (phaseType: string): string => {
    const symbols: Record<string, string> = {
      NEW_MOON: 'üåë',
      WAXING_CRESCENT: 'üåí',
      FIRST_QUARTER: 'üåì',
      WAXING_GIBBOUS: 'üåî',
      FULL_MOON: 'üåï',
      WANING_GIBBOUS: 'üåñ',
      LAST_QUARTER: 'üåó',
      WANING_CRESCENT: 'üåò'
    };
    return symbols[phaseType] || 'üåë';
  };

  const getPhaseName = (phaseType: string): string => {
    const names: Record<string, string> = {
      NEW_MOON: '–ù–æ–≤–æ–ª—É–Ω–∏–µ',
      WAXING_CRESCENT: '–†–∞—Å—Ç—É—â–∏–π –º–µ—Å—è—Ü',
      FIRST_QUARTER: '–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å',
      WAXING_GIBBOUS: '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞',
      FULL_MOON: '–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ',
      WANING_GIBBOUS: '–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞',
      LAST_QUARTER: '–ü–æ—Å–ª–µ–¥–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å',
      WANING_CRESCENT: '–£–±—ã–≤–∞—é—â–∏–π –º–µ—Å—è—Ü'
    };
    return names[phaseType] || phaseType;
  };

  const getPhaseAdvice = (phaseType: string): string => {
    const advice: Record<string, string> = {
      NEW_MOON: '–û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–æ—á–Ω–æ–π —Ä—ã–±–∞–ª–∫–∏. –†—ã–±–∞ –æ—Å–æ–±–µ–Ω–Ω–æ –∞–∫—Ç–∏–≤–Ω–∞ –∏–∑-–∑–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –æ—Å–≤–µ—â–µ–Ω–∏—è.',
      WAXING_CRESCENT: '–•–æ—Ä–æ—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Ä—ã–±–∞–ª–∫–∏. –†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞ —Å—Ç–∏–º—É–ª–∏—Ä—É–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä—ã–±—ã.',
      FIRST_QUARTER: '–û—á–µ–Ω—å –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–µ –≤—Ä–µ–º—è. –£–º–µ—Ä–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –¥–æ–±—ã—á—É.',
      WAXING_GIBBOUS: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä—ã–±—ã –ø–æ–≤—ã—à–∞–µ—Ç—Å—è. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª–Ω–æ–ª—É–Ω–∏—è.',
      FULL_MOON: '–ü–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ä—ã–±—ã –∏ –ø–ª–∞–Ω–∫—Ç–æ–Ω.',
      WANING_GIBBOUS: '–•–æ—Ä–æ—à–∏–µ —É—Å–ª–æ–≤–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–ª—É–Ω–∏—è.',
      LAST_QUARTER: '–°—Ç–∞–±–∏–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä—ã–±—ã. –•–æ—Ä–æ—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö —Ä—ã–±–æ–ª–æ–≤–æ–≤.',
      WANING_CRESCENT: '–°–ø–æ–∫–æ–π–Ω—ã–π –ø–µ—Ä–∏–æ–¥. –¢—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª–µ–µ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–π –ø–æ–¥—Ö–æ–¥.'
    };
    return advice[phaseType] || '–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è —Ä—ã–±–∞–ª–∫–∏.';
  };

  const getFishingRating = (phaseType: string): number => {
    const ratings: Record<string, number> = {
      NEW_MOON: 9,
      WAXING_CRESCENT: 6,
      FIRST_QUARTER: 8,
      WAXING_GIBBOUS: 7,
      FULL_MOON: 10,
      WANING_GIBBOUS: 7,
      LAST_QUARTER: 8,
      WANING_CRESCENT: 5
    };
    return ratings[phaseType] || 5;
  };

  const rating = getFishingRating(phase);
  const ratingColor = rating >= 8 ? 'text-green-600' : rating >= 6 ? 'text-yellow-600' : 'text-gray-600';

  const MoonIcon = () => (
    <div className={cn(
      sizeClasses[size],
      'flex items-center justify-center rounded-full bg-gradient-to-br from-slate-100 to-slate-300',
      'border shadow-sm relative overflow-hidden',
      className
    )}>
      {/* –õ—É–Ω–Ω–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å */}
      <div className="absolute inset-0 bg-gradient-to-br from-gray-200 via-gray-100 to-gray-300 rounded-full" />
      
      {/* –û—Å–≤–µ—â–µ–Ω–Ω–∞—è —á–∞—Å—Ç—å */}
      <div 
        className="absolute inset-0 bg-gradient-to-br from-yellow-100 via-yellow-50 to-white rounded-full transition-all duration-500"
        style={{
          clipPath: `inset(0 ${100 - illumination}% 0 0)`
        }}
      />
      
      {/* –°–∏–º–≤–æ–ª —Ñ–∞–∑—ã */}
      <span className={cn('relative z-10', textSizes[size])}>
        {getMoonSymbol(phase)}
      </span>
    </div>
  );

  return (
    <TooltipProvider>
      <Tooltip>
        <TooltipTrigger asChild>
          <div className="flex flex-col items-center space-y-1">
            <MoonIcon />
            {showLabel && (
              <div className="text-center">
                <p className={cn('font-medium', textSizes[size])}>
                  {getPhaseName(phase)}
                </p>
                <div className="flex items-center space-x-1 mt-1">
                  <span className={cn('text-xs', ratingColor)}>
                    ‚òÖ {rating}/10
                  </span>
                  <span className="text-xs text-gray-500">
                    {Math.round(illumination)}%
                  </span>
                </div>
              </div>
            )}
          </div>
        </TooltipTrigger>
        <TooltipContent side="bottom" className="max-w-xs">
          <div className="space-y-2">
            <div className="font-medium">
              {getPhaseName(phase)} ({Math.round(illumination)}% –æ—Å–≤–µ—â–µ–Ω–∞)
            </div>
            <div className="text-sm text-gray-600">
              {getPhaseAdvice(phase)}
            </div>
            <div className="flex items-center justify-between text-sm">
              <span>–†–µ–π—Ç–∏–Ω–≥ –¥–ª—è —Ä—ã–±–∞–ª–∫–∏:</span>
              <span className={cn('font-medium', ratingColor)}>
                ‚òÖ {rating}/10
              </span>
            </div>
          </div>
        </TooltipContent>
      </Tooltip>
    </TooltipProvider>
  );
}

export default LunarPhaseIndicator;
