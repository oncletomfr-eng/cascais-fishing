'use client';

import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { 
  Star, 
  Award, 
  Users, 
  Shield, 
  Heart,
  CheckCircle,
  AlertCircle,
  TrendingUp,
  Fish
} from 'lucide-react';

interface SocialRatings {
  mentorRating: number;
  teamworkRating: number; 
  reliabilityRating: number;
  respectRating: number;
  totalReviews: number;
}

interface ReputationSummary {
  overallRating: number;
  strongPoints: string[];
  improvementAreas: string[];
  recommendationLevel: 'HIGHLY_RECOMMENDED' | 'RECOMMENDED' | 'NEUTRAL' | 'CAUTION';
  trustScore: number;
}

interface FisherProfile {
  id: string;
  userId: string;
  experienceLevel: string;
  completedTrips: number;
  totalFishCaught: number;
  level: number;
  experiencePoints: number;
}

interface ReputationCardProps {
  profile: FisherProfile;
  socialRatings: SocialRatings;
  reputation: ReputationSummary;
}

// üé® –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞ —Å –∑–≤–µ–∑–¥–∞–º–∏
const RatingStars: React.FC<{ rating: number; label: string; icon: React.ReactNode }> = ({ 
  rating, 
  label, 
  icon 
}) => {
  const percentage = (rating / 10) * 100;
  
  return (
    <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
      <div className="flex items-center gap-2">
        {icon}
        <span className="font-medium text-sm">{label}</span>
      </div>
      <div className="flex items-center gap-2">
        <Progress value={percentage} className="w-20 h-2" />
        <span className="text-sm font-bold min-w-[2rem]">{rating.toFixed(1)}</span>
      </div>
    </div>
  );
};

// üèÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –±–µ–π–¥–∂–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
const RecommendationBadge: React.FC<{ level: string }> = ({ level }) => {
  const config = {
    HIGHLY_RECOMMENDED: { 
      color: 'bg-green-100 text-green-800', 
      icon: <CheckCircle className="w-4 h-4" />,
      text: '–í—ã—Å–æ–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è'
    },
    RECOMMENDED: { 
      color: 'bg-blue-100 text-blue-800', 
      icon: <Star className="w-4 h-4" />,
      text: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è'
    },
    NEUTRAL: { 
      color: 'bg-gray-100 text-gray-800', 
      icon: <Users className="w-4 h-4" />,
      text: '–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ'
    },
    CAUTION: { 
      color: 'bg-yellow-100 text-yellow-800', 
      icon: <AlertCircle className="w-4 h-4" />,
      text: '–û—Å—Ç–æ—Ä–æ–∂–Ω–æ'
    },
  };

  const { color, icon, text } = config[level as keyof typeof config] || config.NEUTRAL;

  return (
    <Badge className={`${color} flex items-center gap-1 px-3 py-1`}>
      {icon}
      <span>{text}</span>
    </Badge>
  );
};

// üìä –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
export const ReputationCard: React.FC<ReputationCardProps> = ({
  profile,
  socialRatings,
  reputation,
}) => {
  return (
    <Card className="w-full max-w-2xl">
      <CardHeader className="pb-4">
        <div className="flex items-center justify-between">
          <CardTitle className="flex items-center gap-2">
            <Award className="w-5 h-5 text-orange-600" />
            –°–∏—Å—Ç–µ–º–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ —Ä—ã–±–æ–ª–æ–≤–∞
          </CardTitle>
          <RecommendationBadge level={reputation.recommendationLevel} />
        </div>
      </CardHeader>

      <CardContent className="space-y-6">
        {/* üåü –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ */}
        <div className="flex items-center justify-between p-4 bg-blue-50 rounded-xl">
          <div>
            <div className="text-2xl font-bold text-blue-900">
              {reputation.overallRating.toFixed(1)}/10
            </div>
            <div className="text-sm text-blue-700">–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥</div>
          </div>
          <div className="text-right">
            <div className="text-lg font-semibold text-blue-900">
              {reputation.trustScore}/100
            </div>
            <div className="text-sm text-blue-700">–°—á–µ—Ç –¥–æ–≤–µ—Ä–∏—è</div>
          </div>
        </div>

        {/* üìà –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏ */}
        <div className="space-y-3">
          <h3 className="font-semibold flex items-center gap-2">
            <TrendingUp className="w-4 h-4" />
            –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏
          </h3>
          
          <RatingStars 
            rating={socialRatings.mentorRating}
            label="–ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ"
            icon={<Award className="w-4 h-4 text-orange-500" />}
          />
          
          <RatingStars 
            rating={socialRatings.teamworkRating}
            label="–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞"
            icon={<Users className="w-4 h-4 text-blue-500" />}
          />
          
          <RatingStars 
            rating={socialRatings.reliabilityRating}
            label="–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å"
            icon={<Shield className="w-4 h-4 text-green-500" />}
          />
          
          <RatingStars 
            rating={socialRatings.respectRating}
            label="–°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª"
            icon={<Heart className="w-4 h-4 text-red-500" />}
          />
        </div>

        {/* üí™ –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã */}
        {reputation.strongPoints.length > 0 && (
          <div className="space-y-2">
            <h3 className="font-semibold flex items-center gap-2 text-green-700">
              <CheckCircle className="w-4 h-4" />
              –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
            </h3>
            <div className="flex flex-wrap gap-2">
              {reputation.strongPoints.map((point, index) => (
                <Badge key={index} className="bg-green-100 text-green-800">
                  {point}
                </Badge>
              ))}
            </div>
          </div>
        )}

        {/* ‚ö†Ô∏è –û–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è */}
        {reputation.improvementAreas.length > 0 && (
          <div className="space-y-2">
            <h3 className="font-semibold flex items-center gap-2 text-amber-700">
              <AlertCircle className="w-4 h-4" />
              –û–±–ª–∞—Å—Ç–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è
            </h3>
            <div className="flex flex-wrap gap-2">
              {reputation.improvementAreas.map((area, index) => (
                <Badge key={index} className="bg-amber-100 text-amber-800">
                  {area}
                </Badge>
              ))}
            </div>
          </div>
        )}

        {/* üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø—ã—Ç–∞ */}
        <div className="grid grid-cols-2 gap-4 pt-4 border-t">
          <div className="text-center">
            <div className="text-2xl font-bold text-blue-600">{profile.completedTrips}</div>
            <div className="text-sm text-gray-600">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫</div>
          </div>
          <div className="text-center">
            <div className="text-2xl font-bold text-green-600">{profile.totalFishCaught}</div>
            <div className="text-sm text-gray-600">–ü–æ–π–º–∞–Ω–æ —Ä—ã–±—ã</div>
          </div>
          <div className="text-center">
            <div className="text-2xl font-bold text-orange-600">{profile.level}</div>
            <div className="text-sm text-gray-600">–£—Ä–æ–≤–µ–Ω—å</div>
          </div>
          <div className="text-center">
            <div className="text-2xl font-bold text-purple-600">{socialRatings.totalReviews}</div>
            <div className="text-sm text-gray-600">–û—Ç–∑—ã–≤–æ–≤</div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

export default ReputationCard;
