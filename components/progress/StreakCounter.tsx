'use client'

import React, { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Card, CardContent } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Flame, Zap, Calendar, Trophy, Target } from 'lucide-react'
import { cn } from '@/lib/utils'

interface StreakData {
  current: number
  best: number
  lastActivity: Date | null
  type: 'daily' | 'weekly' | 'monthly'
}

interface StreakCounterProps {
  /** –î–∞–Ω–Ω—ã–µ –æ —Å–µ—Ä–∏–∏ */
  streakData: StreakData
  /** –†–∞–∑–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ */
  size?: 'sm' | 'md' | 'lg'
  /** –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ–≥–Ω–µ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã */
  showFireEffects?: boolean
  /** CSS –∫–ª–∞—Å—Å—ã */
  className?: string
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
const SIZES = {
  sm: {
    container: 'p-3',
    flame: 'w-6 h-6',
    counter: 'text-2xl',
    label: 'text-xs',
    badge: 'text-xs px-2 py-0.5'
  },
  md: {
    container: 'p-4',
    flame: 'w-8 h-8',
    counter: 'text-3xl',
    label: 'text-sm',
    badge: 'text-sm px-3 py-1'
  },
  lg: {
    container: 'p-6',
    flame: 'w-10 h-10',
    counter: 'text-4xl',
    label: 'text-base',
    badge: 'text-base px-4 py-1.5'
  }
}

// –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –æ–≥–Ω—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–µ—Ä–∏–∏
const getFireIntensity = (streak: number) => {
  if (streak === 0) return { color: 'text-gray-400', intensity: 0, title: '–ù–µ—Ç —Å–µ—Ä–∏–∏' }
  if (streak < 7) return { color: 'text-orange-500', intensity: 1, title: '–•–æ—Ä–æ—à–æ!' }
  if (streak < 30) return { color: 'text-red-500', intensity: 2, title: '–ì–æ—Ä—è—á–æ!' }
  if (streak < 100) return { color: 'text-red-600', intensity: 3, title: '–í –æ–≥–Ω–µ!' }
  return { color: 'text-red-700', intensity: 4, title: '–õ–µ–≥–µ–Ω–¥–∞!' }
}

// –ü–æ–ª—É—á–∏—Ç—å —Ç–∏–ø —Å–µ—Ä–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
const getStreakTypeLabel = (type: StreakData['type']) => {
  switch (type) {
    case 'daily': return '–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–µ—Ä–∏—è'
    case 'weekly': return '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å–µ—Ä–∏—è'  
    case 'monthly': return '–ï–∂–µ–º–µ—Å—è—á–Ω–∞—è —Å–µ—Ä–∏—è'
  }
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–≥–Ω–µ–Ω–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
function FireEffect({ intensity, size }: { intensity: number, size: string }) {
  if (intensity === 0) return null

  const flames = Array.from({ length: intensity }, (_, i) => (
    <motion.div
      key={i}
      className={cn("absolute", size)}
      initial={{ scale: 0, rotate: 0 }}
      animate={{ 
        scale: [0.8, 1.2, 0.8],
        rotate: [0, 10, -10, 0],
        opacity: [0.7, 1, 0.7]
      }}
      transition={{
        duration: 0.8 + Math.random() * 0.4,
        repeat: Infinity,
        delay: i * 0.2
      }}
      style={{
        left: `${-10 + i * 8}px`,
        top: `${-5 + Math.random() * 10}px`
      }}
    >
      <Flame className={cn(size, getFireIntensity(intensity * 10).color)} />
    </motion.div>
  ))

  return <div className="absolute inset-0">{flames}</div>
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä—É–±–µ–∂–∞
function StreakProgress({ current, target }: { current: number, target: number }) {
  const progress = Math.min((current / target) * 100, 100)
  
  return (
    <div className="w-full bg-gray-200 rounded-full h-2">
      <motion.div
        className="bg-gradient-to-r from-orange-500 to-red-600 h-2 rounded-full"
        initial={{ width: 0 }}
        animate={{ width: `${progress}%` }}
        transition={{ duration: 1.5, ease: "easeOut" }}
      />
    </div>
  )
}

export function StreakCounter({
  streakData,
  size = 'md',
  showFireEffects = true,
  className
}: StreakCounterProps) {
  const sizeConfig = SIZES[size]
  const fireData = getFireIntensity(streakData.current)
  const typeLabel = getStreakTypeLabel(streakData.type)
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ä—É–±–µ–∂
  const nextMilestone = streakData.current < 7 ? 7 : 
                      streakData.current < 30 ? 30 : 
                      streakData.current < 100 ? 100 : 365

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ —Å–µ—Ä–∏—è (–Ω–µ –±–æ–ª–µ–µ —Å—É—Ç–æ–∫ –Ω–∞–∑–∞–¥ –¥–ª—è daily)
  const isActive = streakData.lastActivity 
    ? (new Date().getTime() - streakData.lastActivity.getTime()) < 24 * 60 * 60 * 1000 
    : false

  return (
    <Card className={cn("relative overflow-hidden", className)}>
      <CardContent className={sizeConfig.container}>
        <div className="text-center space-y-3">
          {/* –ò–∫–æ–Ω–∫–∞ —Å –æ–≥–Ω–µ–Ω–Ω—ã–º —ç—Ñ—Ñ–µ–∫—Ç–æ–º */}
          <div className="relative inline-flex items-center justify-center">
            <div className="relative">
              <motion.div
                animate={{ 
                  scale: fireData.intensity > 0 ? [1, 1.05, 1] : 1,
                }}
                transition={{ 
                  duration: 2, 
                  repeat: fireData.intensity > 0 ? Infinity : 0 
                }}
              >
                <Flame className={cn(sizeConfig.flame, fireData.color)} />
              </motion.div>
              
              {/* –û–≥–Ω–µ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã */}
              {showFireEffects && fireData.intensity > 0 && (
                <FireEffect intensity={fireData.intensity} size={sizeConfig.flame} />
              )}
            </div>

            {/* –ë–µ–π–¥–∂ —Å —Ä–µ–∫–æ—Ä–¥–æ–º */}
            {streakData.best > streakData.current && (
              <motion.div
                initial={{ scale: 0 }}
                animate={{ scale: 1 }}
                transition={{ delay: 0.5 }}
                className="absolute -top-2 -right-2"
              >
                <Badge variant="secondary" className={sizeConfig.badge}>
                  <Trophy className="w-3 h-3 mr-1" />
                  {streakData.best}
                </Badge>
              </motion.div>
            )}
          </div>

          {/* –°—á–µ—Ç—á–∏–∫ */}
          <div>
            <motion.div
              key={streakData.current}
              initial={{ scale: 0.5, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              transition={{ type: "spring", stiffness: 200 }}
              className={cn(sizeConfig.counter, "font-bold text-gray-900")}
            >
              {streakData.current}
            </motion.div>
            <div className={cn(sizeConfig.label, "text-gray-600")}>
              {typeLabel}
            </div>
          </div>

          {/* –°—Ç–∞—Ç—É—Å */}
          <motion.div
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.3 }}
          >
            <Badge 
              variant={isActive ? "default" : "secondary"}
              className={cn(
                sizeConfig.badge,
                isActive ? fireData.color.replace('text-', 'bg-').replace('-500', '-100 text-red-700') : ""
              )}
            >
              {fireData.title}
            </Badge>
          </motion.div>

          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä—É–±–µ–∂–∞ */}
          {streakData.current > 0 && streakData.current < nextMilestone && (
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 0.5 }}
              className="space-y-2"
            >
              <div className="flex items-center justify-between text-xs text-gray-500">
                <span>–î–æ {nextMilestone} –¥–Ω–µ–π</span>
                <span>{nextMilestone - streakData.current} –æ—Å—Ç–∞–ª–æ—Å—å</span>
              </div>
              <StreakProgress current={streakData.current} target={nextMilestone} />
            </motion.div>
          )}

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="flex items-center justify-center gap-4 text-xs text-gray-500">
            {streakData.lastActivity && (
              <div className="flex items-center gap-1">
                <Calendar className="w-3 h-3" />
                <span>
                  {streakData.lastActivity.toLocaleDateString('ru')}
                </span>
              </div>
            )}
            {streakData.best > 0 && (
              <div className="flex items-center gap-1">
                <Target className="w-3 h-3" />
                <span>–†–µ–∫–æ—Ä–¥: {streakData.best}</span>
              </div>
            )}
          </div>

          {/* –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
          {streakData.current === 0 && (
            <motion.p
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 0.7 }}
              className="text-xs text-gray-500 italic"
            >
              –ù–∞—á–Ω–∏—Ç–µ —Å–µ—Ä–∏—é —Å–µ–≥–æ–¥–Ω—è! üéØ
            </motion.p>
          )}
        </div>
      </CardContent>

      {/* –§–æ–Ω–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –≤—ã—Å–æ–∫–∏—Ö —Å–µ—Ä–∏–π */}
      {fireData.intensity >= 3 && showFireEffects && (
        <motion.div
          className="absolute inset-0 bg-gradient-to-br from-red-500/5 to-orange-500/5 pointer-events-none"
          animate={{ opacity: [0.3, 0.6, 0.3] }}
          transition={{ duration: 3, repeat: Infinity }}
        />
      )}
    </Card>
  )
}
