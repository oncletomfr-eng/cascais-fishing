const prisma = require('../lib/prisma').default;

async function seedTestData() {
  try {
    console.log('üå± –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    // –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø–æ–≤—ã–µ –ø–æ–µ–∑–¥–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    const futureTrips = [
      {
        date: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000), // —á–µ—Ä–µ–∑ 3 –¥–Ω—è
        timeSlot: 'MORNING_9AM',
        maxParticipants: 8,
        minRequired: 4,
        pricePerPerson: 95,
        description: '–ú–æ—Ä—Å–∫–∞—è —Ä—ã–±–∞–ª–∫–∞ –Ω–∞ —Ç—É–Ω—Ü–∞ –∏ –¥–æ—Ä–∞–¥–æ —É –±–µ—Ä–µ–≥–æ–≤ –ö–∞—à–∫–∞–π—à–∞',
        meetingPoint: 'Cascais Marina',
        status: 'FORMING'
      },
      {
        date: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000), // —á–µ—Ä–µ–∑ 5 –¥–Ω–µ–π
        timeSlot: 'AFTERNOON_2PM',
        maxParticipants: 8,
        minRequired: 4,
        pricePerPerson: 95,
        description: '–î–Ω–µ–≤–Ω–∞—è —Ä—ã–±–∞–ª–∫–∞ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –≥–∏–¥–æ–º',
        meetingPoint: 'Cascais Marina',
        status: 'FORMING'
      },
      {
        date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é
        timeSlot: 'MORNING_9AM',
        maxParticipants: 8,
        minRequired: 4,
        pricePerPerson: 95,
        description: '–£—Ç—Ä–µ–Ω–Ω—è—è —Ä—ã–±–∞–ª–∫–∞ –Ω–∞ —Å–∫—É–º–±—Ä–∏—é –∏ —Å–∞—Ä–¥–∏–Ω—ã',
        meetingPoint: 'Cascais Marina',
        status: 'FORMING'
      },
      {
        date: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000), // —á–µ—Ä–µ–∑ 10 –¥–Ω–µ–π
        timeSlot: 'AFTERNOON_2PM',
        maxParticipants: 8,
        minRequired: 4,
        pricePerPerson: 95,
        description: '–†—ã–±–∞–ª–∫–∞ –Ω–∞ –±–æ–ª—å—à–∏—Ö –≥–ª—É–±–∏–Ω–∞—Ö',
        meetingPoint: 'Cascais Marina',
        status: 'FORMING'
      },
      {
        date: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000), // —á–µ—Ä–µ–∑ 2 –Ω–µ–¥–µ–ª–∏
        timeSlot: 'MORNING_9AM',
        maxParticipants: 8,
        minRequired: 4,
        pricePerPerson: 95,
        description: '–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–µ–∑–¥–∫–∞ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤',
        meetingPoint: 'Cascais Marina',
        status: 'FORMING'
      }
    ];

    let createdCount = 0;
    
    for (const tripData of futureTrips) {
      try {
        const existingTrip = await prisma.groupTrip.findFirst({
          where: {
            date: tripData.date,
            timeSlot: tripData.timeSlot
          }
        });
        
        if (!existingTrip) {
          await prisma.groupTrip.create({
            data: tripData
          });
          createdCount++;
          console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–µ–∑–¥–∫–∞: ${tripData.date.toISOString().split('T')[0]} ${tripData.timeSlot}`);
        } else {
          console.log(`‚è≠Ô∏è  –ü–æ–µ–∑–¥–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${tripData.date.toISOString().split('T')[0]} ${tripData.timeSlot}`);
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–µ–∑–¥–∫–∏:`, error.message);
      }
    }
    
    console.log(`\nüéâ –°–æ–∑–¥–∞–Ω–æ ${createdCount} –Ω–æ–≤—ã—Ö –≥—Ä—É–ø–ø–æ–≤—ã—Ö –ø–æ–µ–∑–¥–æ–∫`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalTrips = await prisma.groupTrip.count({
      where: {
        date: {
          gte: new Date()
        }
      }
    });
    
    console.log(`üìä –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ: ${totalTrips}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedTestData();
