'use client'

import React, { useState, useEffect } from 'react'
import { motion } from 'framer-motion'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Badge } from '@/components/ui/badge'
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
import { 
  TrendingUp, Zap, Target, Trophy, Users, 
  Calendar, Flame, Award, Star, Gift
} from 'lucide-react'

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
import {
  CircularProgress,
  LevelProgress,
  ExperienceTracker,
  StreakCounter,
  MilestoneCelebration,
  ProgressComparison,
  ChallengeTracker,
  type Milestone,
  type UserProgress,
  type Challenge
} from '@/components/progress'

import { toast } from 'sonner'

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const MOCK_EXPERIENCE_GAINS = [
  {
    id: '1',
    amount: 250,
    source: '–ü–æ–π–º–∞–ª —Ç—É–Ω—Ü–∞',
    timestamp: new Date(Date.now() - 1000 * 60 * 30), // 30 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥
    type: 'trip' as const
  },
  {
    id: '2', 
    amount: 100,
    source: '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ "–ú–∞—Å—Ç–µ—Ä —Ç—Ä–æ–ª–ª–∏–Ω–≥–∞"',
    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2), // 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
    type: 'achievement' as const
  },
  {
    id: '3',
    amount: 50,
    source: '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 6), // 6 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥
    type: 'milestone' as const
  },
  {
    id: '4',
    amount: 75,
    source: '–ë–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 24), // –≤—á–µ—Ä–∞
    type: 'bonus' as const
  }
]

const MOCK_FRIENDS: UserProgress[] = [
  {
    id: '1',
    name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤',
    avatar: '/avatars/alex.jpg',
    level: 28,
    experiencePoints: 27850,
    streak: 12,
    achievements: 45,
    position: 1,
    change: 'up'
  },
  {
    id: '2',
    name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞', 
    avatar: '/avatars/maria.jpg',
    level: 22,
    experiencePoints: 21750,
    streak: 8,
    achievements: 38,
    position: 2,
    change: 'same'
  },
  {
    id: '3',
    name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
    avatar: '/avatars/dmitry.jpg',
    level: 19,
    experiencePoints: 18200,
    streak: 5,
    achievements: 29,
    position: 3,
    change: 'down'
  },
  {
    id: '4',
    name: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
    avatar: '/avatars/anna.jpg',
    level: 15,
    experiencePoints: 14500,
    streak: 15,
    achievements: 22,
    position: 4,
    change: 'up'
  }
]

const MOCK_CURRENT_USER: UserProgress = {
  id: 'current',
  name: '–í—ã',
  level: 25,
  experiencePoints: 24350,
  streak: 18,
  achievements: 42,
  position: 2,
  change: 'up',
  isCurrentUser: true
}

const MOCK_CHALLENGES: Challenge[] = [
  {
    id: '1',
    title: '–ü–æ–π–º–∞—Ç—å 3 —Ä—ã–±—ã',
    description: '–ü–æ–π–º–∞–π—Ç–µ –ª—é–±—ã—Ö 3 —Ä—ã–±—ã –∏—Å–ø–æ–ª—å–∑—É—è –ª—é–±—É—é —Ç–µ—Ö–Ω–∏–∫—É',
    type: 'daily',
    category: 'fishing',
    progress: 2,
    maxProgress: 3,
    reward: { type: 'xp', amount: 100, description: '100 –æ—á–∫–æ–≤ –æ–ø—ã—Ç–∞' },
    deadline: new Date(Date.now() + 1000 * 60 * 60 * 8), // —á–µ—Ä–µ–∑ 8 —á–∞—Å–æ–≤
    isCompleted: false,
    isActive: true,
    difficulty: 'easy'
  },
  {
    id: '2',
    title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞',
    description: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–≥–∞ –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–Ω—É—é —Ä—ã–±–∞–ª–∫—É',
    type: 'weekly',
    category: 'social',
    progress: 0,
    maxProgress: 1,
    reward: { type: 'xp', amount: 300, description: '300 –æ—á–∫–æ–≤ –æ–ø—ã—Ç–∞' },
    deadline: new Date(Date.now() + 1000 * 60 * 60 * 24 * 3), // —á–µ—Ä–µ–∑ 3 –¥–Ω—è
    isCompleted: false,
    isActive: true,
    difficulty: 'medium'
  },
  {
    id: '3',
    title: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å 2 –Ω–æ–≤—ã–µ –ª–æ–∫–∞—Ü–∏–∏',
    description: '–ü–æ—Å–µ—Ç–∏—Ç–µ 2 –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è —Ä—ã–±–∞–ª–∫–∏',
    type: 'weekly',
    category: 'exploration',
    progress: 1,
    maxProgress: 2,
    reward: { type: 'badge', amount: 1, description: '–ë–µ–π–¥–∂ "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å"' },
    deadline: new Date(Date.now() + 1000 * 60 * 60 * 24 * 5), // —á–µ—Ä–µ–∑ 5 –¥–Ω–µ–π
    isCompleted: false,
    isActive: true,
    difficulty: 'hard'
  },
  {
    id: '4',
    title: '–ü–æ–ª—É—á–∏—Ç—å 5 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
    description: '–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –ª—é–±—ã–µ 5 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
    type: 'weekly',
    category: 'achievement',
    progress: 5,
    maxProgress: 5,
    reward: { type: 'xp', amount: 500, description: '500 –æ—á–∫–æ–≤ –æ–ø—ã—Ç–∞' },
    deadline: new Date(Date.now() + 1000 * 60 * 60 * 24 * 2), // —á–µ—Ä–µ–∑ 2 –¥–Ω—è
    isCompleted: false,
    isActive: true,
    difficulty: 'hard'
  }
]

const SAMPLE_MILESTONES: Milestone[] = [
  {
    id: '1',
    type: 'level',
    title: '–£—Ä–æ–≤–µ–Ω—å 25!',
    description: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ 25-–≥–æ —É—Ä–æ–≤–Ω—è –∏ —Å—Ç–∞–ª–∏ –æ–ø—ã—Ç–Ω—ã–º —Ä—ã–±–æ–ª–æ–≤–æ–º!',
    value: 25,
    reward: {
      type: 'xp',
      value: 1000,
      description: '1000 –±–æ–Ω—É—Å–Ω—ã—Ö –æ—á–∫–æ–≤ –æ–ø—ã—Ç–∞'
    },
    rarity: 'rare'
  },
  {
    id: '2',
    type: 'streak',
    title: '–°–µ—Ä–∏—è –∏–∑ 30 –¥–Ω–µ–π!',
    description: '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –í—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É–∂–µ 30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥!',
    value: 30,
    reward: {
      type: 'badge',
      value: '–ú–∞—Å—Ç–µ—Ä –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–∞',
      description: '–û—Å–æ–±—ã–π –±–µ–π–¥–∂ –∑–∞ –≤—ã–¥–∞—é—â–µ–µ—Å—è –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ'
    },
    rarity: 'epic'
  },
  {
    id: '3',
    type: 'special',
    title: '–õ–µ–≥–µ–Ω–¥–∞ —Ä—ã–±–∞–ª–∫–∏!',
    description: '–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ —Å—Ç–∞—Ç—É—Å–∞ –ª–µ–≥–µ–Ω–¥—ã —Ä—ã–±–æ–ª–æ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞!',
    value: 100,
    reward: {
      type: 'title',
      value: '–õ–µ–≥–µ–Ω–¥–∞ –º–æ—Ä—è',
      description: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π —Ç–∏—Ç—É–ª –ª–µ–≥–µ–Ω–¥—ã'
    },
    rarity: 'legendary'
  }
]

export default function TestProgressTrackingPage() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const [currentLevel, setCurrentLevel] = useState(25)
  const [currentXP, setCurrentXP] = useState(24350)
  const [currentStreak, setCurrentStreak] = useState(18)
  const [showMilestone, setShowMilestone] = useState(false)
  const [selectedMilestone, setSelectedMilestone] = useState<Milestone>(SAMPLE_MILESTONES[0])

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const addExperience = (amount: number) => {
    setCurrentXP(prev => {
      const newXP = prev + amount
      const newLevel = Math.floor(newXP / 1000) + 1
      
      if (newLevel > currentLevel) {
        setCurrentLevel(newLevel)
        toast.success(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –î–æ—Å—Ç–∏–≥–Ω—É—Ç ${newLevel} —É—Ä–æ–≤–µ–Ω—å!`)
      }
      
      return newXP
    })
    toast.success(`+${amount} XP –ø–æ–ª—É—á–µ–Ω–æ!`)
  }

  const incrementStreak = () => {
    setCurrentStreak(prev => prev + 1)
    toast.success('üî• –°–µ—Ä–∏—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∞!')
  }

  const showMilestoneDemo = (milestone: Milestone) => {
    setSelectedMilestone(milestone)
    setShowMilestone(true)
  }

  const handleChallengeComplete = (challengeId: string) => {
    const challenge = MOCK_CHALLENGES.find(c => c.id === challengeId)
    if (challenge) {
      toast.success(`‚úÖ –ó–∞–¥–∞–Ω–∏–µ "${challenge.title}" –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! +${challenge.reward.amount} ${challenge.reward.type.toUpperCase()}`)
      addExperience(challenge.reward.amount)
    }
  }

  return (
    <main className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4 sm:p-6 lg:p-8">
      <div className="container mx-auto max-w-7xl space-y-8">
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="text-center space-y-4"
        >
          <div className="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full mb-4">
            <TrendingUp className="w-8 h-8 text-white" />
          </div>
          <h1 className="text-4xl font-bold text-gray-900">
            üéØ –°–∏—Å—Ç–µ–º–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Ä–æ–≤–Ω–µ–π, –æ–ø—ã—Ç–∞, —Å–µ—Ä–∏–π –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
          </p>
        </motion.div>

        {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.2 }}
          className="grid grid-cols-1 md:grid-cols-4 gap-4"
        >
          <Card>
            <CardContent className="p-4 text-center">
              <Trophy className="w-8 h-8 text-yellow-500 mx-auto mb-2" />
              <div className="text-2xl font-bold text-gray-900">{currentLevel}</div>
              <div className="text-sm text-gray-600">–£—Ä–æ–≤–µ–Ω—å</div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="p-4 text-center">
              <Zap className="w-8 h-8 text-blue-500 mx-auto mb-2" />
              <div className="text-2xl font-bold text-gray-900">{currentXP.toLocaleString()}</div>
              <div className="text-sm text-gray-600">–û–ø—ã—Ç</div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="p-4 text-center">
              <Flame className="w-8 h-8 text-red-500 mx-auto mb-2" />
              <div className="text-2xl font-bold text-gray-900">{currentStreak}</div>
              <div className="text-sm text-gray-600">–°–µ—Ä–∏—è –¥–Ω–µ–π</div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="p-4 text-center">
              <Award className="w-8 h-8 text-purple-500 mx-auto mb-2" />
              <div className="text-2xl font-bold text-gray-900">42</div>
              <div className="text-sm text-gray-600">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</div>
            </CardContent>
          </Card>
        </motion.div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.3 }}
          className="flex flex-wrap justify-center gap-3"
        >
          <Button onClick={() => addExperience(100)} className="gap-2">
            <Zap className="w-4 h-4" />
            +100 XP
          </Button>
          <Button onClick={() => addExperience(500)} variant="outline" className="gap-2">
            <Star className="w-4 h-4" />
            +500 XP
          </Button>
          <Button onClick={incrementStreak} variant="outline" className="gap-2">
            <Flame className="w-4 h-4" />
            +1 –î–µ–Ω—å —Å–µ—Ä–∏–∏
          </Button>
          <Button onClick={() => showMilestoneDemo(SAMPLE_MILESTONES[0])} variant="secondary" className="gap-2">
            <Trophy className="w-4 h-4" />
            –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ö—É
          </Button>
        </motion.div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å —Ç–∞–±–∞–º–∏ */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.4 }}
        >
          <Tabs defaultValue="overview" className="space-y-6">
            <TabsList className="grid w-full max-w-4xl mx-auto grid-cols-6">
              <TabsTrigger value="overview" className="gap-1">
                <Trophy className="w-4 h-4" />
                –û–±–∑–æ—Ä
              </TabsTrigger>
              <TabsTrigger value="level" className="gap-1">
                <TrendingUp className="w-4 h-4" />
                –£—Ä–æ–≤–µ–Ω—å
              </TabsTrigger>
              <TabsTrigger value="experience" className="gap-1">
                <Zap className="w-4 h-4" />
                –û–ø—ã—Ç
              </TabsTrigger>
              <TabsTrigger value="streaks" className="gap-1">
                <Flame className="w-4 h-4" />
                –°–µ—Ä–∏–∏
              </TabsTrigger>
              <TabsTrigger value="social" className="gap-1">
                <Users className="w-4 h-4" />
                –î—Ä—É–∑—å—è
              </TabsTrigger>
              <TabsTrigger value="challenges" className="gap-1">
                <Target className="w-4 h-4" />
                –ó–∞–¥–∞–Ω–∏—è
              </TabsTrigger>
            </TabsList>

            {/* –û–±–∑–æ—Ä */}
            <TabsContent value="overview" className="space-y-6">
              <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                <div className="space-y-6">
                  <LevelProgress
                    level={currentLevel}
                    experiencePoints={currentXP}
                    size="lg"
                    showDetails={true}
                    animated={true}
                  />
                </div>
                <div className="space-y-6">
                  <StreakCounter
                    streakData={{
                      current: currentStreak,
                      best: 25,
                      lastActivity: new Date(),
                      type: 'daily'
                    }}
                    size="md"
                    showFireEffects={true}
                  />
                </div>
                <div className="space-y-6">
                  <ExperienceTracker
                    experiencePoints={currentXP}
                    recentGains={MOCK_EXPERIENCE_GAINS}
                    showStats={true}
                    animated={true}
                  />
                </div>
              </div>
            </TabsContent>

            {/* –£—Ä–æ–≤–µ–Ω—å */}
            <TabsContent value="level" className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <Card>
                  <CardHeader>
                    <CardTitle>–ú–∞–ª—ã–π —Ä–∞–∑–º–µ—Ä</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <LevelProgress
                      level={currentLevel}
                      experiencePoints={currentXP}
                      size="sm"
                      showDetails={true}
                      animated={true}
                    />
                  </CardContent>
                </Card>
                
                <Card>
                  <CardHeader>
                    <CardTitle>–°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <LevelProgress
                      level={currentLevel}
                      experiencePoints={currentXP}
                      size="md"
                      showDetails={true}
                      animated={true}
                    />
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>–ë–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <LevelProgress
                      level={currentLevel}
                      experiencePoints={currentXP}
                      size="lg"
                      showDetails={true}
                      animated={true}
                    />
                  </CardContent>
                </Card>
              </div>

              {/* –ü—Ä–∏–º–µ—Ä—ã –∫—Ä—É–≥–æ–≤—ã—Ö –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–≤ */}
              <Card>
                <CardHeader>
                  <CardTitle>–ö—Ä—É–≥–æ–≤—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã</CardTitle>
                  <CardDescription>
                    –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫—Ä—É–≥–æ–≤–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
                    <div className="text-center space-y-2">
                      <CircularProgress progress={75} showPercentage={true} />
                      <p className="text-sm text-gray-600">–° –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏</p>
                    </div>
                    <div className="text-center space-y-2">
                      <CircularProgress progress={60} color="#10b981" customText="60/100" />
                      <p className="text-sm text-gray-600">–ö–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç</p>
                    </div>
                    <div className="text-center space-y-2">
                      <CircularProgress progress={90} size={80} strokeWidth={6} color="#f59e0b" />
                      <p className="text-sm text-gray-600">–ú–∞–ª—ã–π —Ä–∞–∑–º–µ—Ä</p>
                    </div>
                    <div className="text-center space-y-2">
                      <CircularProgress progress={45} animated={false} showPercentage={true} />
                      <p className="text-sm text-gray-600">–ë–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏</p>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            {/* –û–ø—ã—Ç */}
            <TabsContent value="experience" className="space-y-6">
              <ExperienceTracker
                experiencePoints={currentXP}
                recentGains={MOCK_EXPERIENCE_GAINS}
                showStats={true}
                animated={true}
              />
            </TabsContent>

            {/* –°–µ—Ä–∏–∏ */}
            <TabsContent value="streaks" className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <StreakCounter
                  streakData={{
                    current: currentStreak,
                    best: 25,
                    lastActivity: new Date(),
                    type: 'daily'
                  }}
                  size="sm"
                  showFireEffects={true}
                />
                
                <StreakCounter
                  streakData={{
                    current: 4,
                    best: 8,
                    lastActivity: new Date(),
                    type: 'weekly'
                  }}
                  size="md"
                  showFireEffects={true}
                />

                <StreakCounter
                  streakData={{
                    current: 0,
                    best: 3,
                    lastActivity: null,
                    type: 'monthly'
                  }}
                  size="md"
                  showFireEffects={true}
                />
              </div>

              {/* –î–µ–º–æ –ø—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏—è –≤–µ—Ö */}
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Gift className="w-5 h-5 text-purple-600" />
                    –ü—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏–µ –≤–µ—Ö
                  </CardTitle>
                  <CardDescription>
                    –ü—Ä–∏–º–µ—Ä—ã –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    {SAMPLE_MILESTONES.map((milestone) => (
                      <Button
                        key={milestone.id}
                        variant="outline"
                        onClick={() => showMilestoneDemo(milestone)}
                        className="h-auto p-4 text-left"
                      >
                        <div className="space-y-1">
                          <div className="font-semibold">{milestone.title}</div>
                          <div className="text-sm text-gray-600">{milestone.rarity}</div>
                          <Badge className="text-xs">{milestone.type}</Badge>
                        </div>
                      </Button>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            {/* –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ */}
            <TabsContent value="social" className="space-y-6">
              <ProgressComparison
                currentUser={MOCK_CURRENT_USER}
                friends={MOCK_FRIENDS}
                comparisonType="level"
              />
            </TabsContent>

            {/* –ó–∞–¥–∞–Ω–∏—è */}
            <TabsContent value="challenges" className="space-y-6">
              <ChallengeTracker
                challenges={MOCK_CHALLENGES}
                onChallengeComplete={handleChallengeComplete}
                onChallengeSelect={(challenge) => {
                  toast.info(`–í—ã–±—Ä–∞–Ω–æ –∑–∞–¥–∞–Ω–∏–µ: ${challenge.title}`)
                }}
              />
            </TabsContent>
          </Tabs>
        </motion.div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏—è –≤–µ—Ö */}
      <MilestoneCelebration
        milestone={selectedMilestone}
        show={showMilestone}
        onClose={() => setShowMilestone(false)}
        autoClose={0} // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ –¥–ª—è –¥–µ–º–æ
      />
    </main>
  )
}
