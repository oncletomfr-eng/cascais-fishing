/**
 * –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ Stream Chat –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ API –∫–ª—é—á–∏ –∏–∑ .env.local
 */

'use client';

import React from 'react';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';
import { StreamChat } from 'stream-chat';

export default function TestStreamChatRealPage() {
  const [streamStatus, setStreamStatus] = React.useState<'checking' | 'connected' | 'error'>('checking');
  const [connectionDetails, setConnectionDetails] = React.useState<string>('');
  const [apiKeyStatus, setApiKeyStatus] = React.useState<'checking' | 'valid' | 'invalid'>('checking');

  React.useEffect(() => {
    const testStreamChat = async () => {
      try {
        // –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
        const apiKey = process.env.NEXT_PUBLIC_STREAM_CHAT_API_KEY;
        
        console.log('üîë API Key from env:', apiKey);
        
        if (!apiKey || apiKey === 'demo-key' || apiKey === 'demo-key-please-configure') {
          setApiKeyStatus('invalid');
          setConnectionDetails('API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç demo –∑–Ω–∞—á–µ–Ω–∏–µ');
          setStreamStatus('error');
          return;
        }
        
        setApiKeyStatus('valid');
        setConnectionDetails(`API Key: ${apiKey.substring(0, 8)}...`);
        
        // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Stream Chat
        const client = StreamChat.getInstance(apiKey);
        
        console.log('‚úÖ Stream Chat client created successfully');
        
        // –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        const testUser = {
          id: 'test-user-' + Date.now(),
          name: 'Test User',
        };
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!)
        // –í production —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –¥–µ–ª–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        const response = await fetch('/api/chat/token', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ userId: testUser.id }),
        });
        
        if (response.ok) {
          const tokenData = await response.json();
          console.log('‚úÖ Token received from API:', tokenData.isDemo ? 'demo' : 'real');
          
          if (!tokenData.isDemo) {
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
            await client.connectUser(testUser, tokenData.token);
            console.log('‚úÖ Successfully connected to Stream Chat!');
            
            setStreamStatus('connected');
            setConnectionDetails(`–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! User: ${testUser.id}`);
            
            // –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
            await client.disconnectUser();
            console.log('‚úÖ Disconnected from Stream Chat');
          } else {
            setStreamStatus('error');
            setConnectionDetails('–ü–æ–ª—É—á–µ–Ω demo —Ç–æ–∫–µ–Ω –≤–º–µ—Å—Ç–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ');
          }
        } else {
          // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–ø—Ä–æ–±—É–µ–º demo —Ä–µ–∂–∏–º
          console.log('‚ö†Ô∏è API token unavailable, testing demo mode');
          setStreamStatus('error');
          setConnectionDetails('API —Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. Stream Chat –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã, –Ω–æ –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
        }
        
      } catch (error) {
        console.error('‚ùå Stream Chat test failed:', error);
        setStreamStatus('error');
        setConnectionDetails(`–û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : 'Unknown error'}`);
      }
    };
    
    setTimeout(testStreamChat, 1000);
  }, []);

  return (
    <div className="min-h-screen bg-gray-50 p-4">
      <div className="max-w-4xl mx-auto space-y-6">
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center space-x-2">
              <span className="text-2xl">üåä</span>
              <span>–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ Stream Chat –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</span>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div className="flex items-center space-x-2">
                <strong>API –∫–ª—é—á:</strong>
                {apiKeyStatus === 'checking' && (
                  <span className="px-2 py-1 bg-yellow-100 text-yellow-800 rounded">–ü—Ä–æ–≤–µ—Ä–∫–∞...</span>
                )}
                {apiKeyStatus === 'valid' && (
                  <span className="px-2 py-1 bg-green-100 text-green-800 rounded">‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω</span>
                )}
                {apiKeyStatus === 'invalid' && (
                  <span className="px-2 py-1 bg-red-100 text-red-800 rounded">‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω</span>
                )}
              </div>
              <div className="flex items-center space-x-2">
                <strong>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:</strong>
                {streamStatus === 'checking' && (
                  <span className="px-2 py-1 bg-yellow-100 text-yellow-800 rounded">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...</span>
                )}
                {streamStatus === 'connected' && (
                  <span className="px-2 py-1 bg-green-100 text-green-800 rounded">‚úÖ –£—Å–ø–µ—à–Ω–æ</span>
                )}
                {streamStatus === 'error' && (
                  <span className="px-2 py-1 bg-red-100 text-red-800 rounded">‚ùå –û—à–∏–±–∫–∞</span>
                )}
              </div>
            </div>
          </CardContent>
        </Card>

        {/* –î–µ—Ç–∞–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
        <Card>
          <CardHeader>
            <CardTitle>üîç –î–µ—Ç–∞–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="p-4 bg-gray-100 rounded-lg">
              <h4 className="font-medium mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</h4>
              <p className="text-sm text-gray-700">{connectionDetails || '–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...'}</p>
            </div>
            
            {streamStatus === 'connected' && (
              <div className="p-4 bg-green-50 rounded-lg">
                <h4 className="font-medium text-green-900 mb-2">üéâ Stream Chat —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!</h4>
                <ul className="text-sm text-green-700 space-y-1">
                  <li>‚úÖ API –∫–ª—é—á–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ</li>
                  <li>‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Stream Chat —Ä–∞–±–æ—Ç–∞–µ—Ç</li>
                  <li>‚úÖ –¢–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç</li>
                  <li>‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</li>
                </ul>
              </div>
            )}
            
            {streamStatus === 'error' && (
              <div className="p-4 bg-yellow-50 rounded-lg">
                <h4 className="font-medium text-yellow-900 mb-2">‚ö†Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ</h4>
                <ul className="text-sm text-yellow-700 space-y-1">
                  <li>üîë Stream Chat API –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ .env.local</li>
                  <li>üîê –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</li>
                  <li>üé£ –°–∏—Å—Ç–µ–º–∞ —á–∞—Ç–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
                  <li>üìù –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ API endpoints —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã</li>
                </ul>
              </div>
            )}
          </CardContent>
        </Card>

        {/* –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è */}
        <Card>
          <CardHeader>
            <CardTitle>üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 gap-4">
              <div className="p-3 border rounded-lg">
                <div className="flex justify-between items-center">
                  <span className="font-medium">NEXT_PUBLIC_STREAM_CHAT_API_KEY</span>
                  <span className={`px-2 py-1 rounded text-xs ${
                    apiKeyStatus === 'valid' 
                      ? 'bg-green-100 text-green-700' 
                      : 'bg-red-100 text-red-700'
                  }`}>
                    {apiKeyStatus === 'valid' ? '‚úÖ Set' : '‚ùå Missing/Invalid'}
                  </span>
                </div>
                <p className="text-sm text-gray-600 mt-1">
                  {apiKeyStatus === 'valid' 
                    ? `${process.env.NEXT_PUBLIC_STREAM_CHAT_API_KEY?.substring(0, 8)}...` 
                    : '–ù–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç demo –∑–Ω–∞—á–µ–Ω–∏–µ'}
                </p>
              </div>
              
              <div className="p-3 border rounded-lg">
                <div className="flex justify-between items-center">
                  <span className="font-medium">STREAM_CHAT_API_SECRET</span>
                  <span className="px-2 py-1 bg-blue-100 text-blue-700 rounded text-xs">
                    üîí Server Only
                  </span>
                </div>
                <p className="text-sm text-gray-600 mt-1">
                  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤
                </p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ */}
        <Card>
          <CardHeader>
            <CardTitle>üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</CardTitle>
          </CardHeader>
          <CardContent className="space-y-3">
            <div className="flex items-center space-x-3 p-3 bg-blue-50 rounded-lg">
              <span className="text-blue-600">1Ô∏è‚É£</span>
              <div>
                <p className="font-medium">–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ Google</p>
                <p className="text-sm text-gray-600">–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É</p>
              </div>
            </div>
            
            <div className="flex items-center space-x-3 p-3 bg-blue-50 rounded-lg">
              <span className="text-blue-600">2Ô∏è‚É£</span>
              <div>
                <p className="font-medium">–û—Ç–∫—Ä–æ–π—Ç–µ –¥–µ—Ç–∞–ª–∏ –ø–æ–µ–∑–¥–∫–∏</p>
                <p className="text-sm text-gray-600">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø–æ–≤—É—é –ø–æ–µ–∑–¥–∫—É –∏ –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –∏ —á–∞—Ç"</p>
              </div>
            </div>
            
            <div className="flex items-center space-x-3 p-3 bg-green-50 rounded-lg">
              <span className="text-green-600">3Ô∏è‚É£</span>
              <div>
                <p className="font-medium">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π —á–∞—Ç!</p>
                <p className="text-sm text-gray-600">Stream Chat —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
