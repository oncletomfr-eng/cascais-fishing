generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model EventSkillCriteria {
  id              String             @id @default(cuid())
  tripId          String
  criteriaType    SkillCriteriaType
  minimumValue    Int?
  requiredSkills  FishingTechnique[] @default([])
  requiredSpecies FishSpecies[]      @default([])
  description     String?
  isRequired      Boolean            @default(true)
  weight          Int                @default(1)
  createdAt       DateTime           @default(now())
  trip            GroupTrip          @relation(fields: [tripId], references: [id], onDelete: Cascade)

  @@map("event_skill_criteria")
}

model Achievement {
  id                String            @id @default(cuid())
  type              AchievementType   @unique
  name              String
  description       String
  icon              String
  category          BadgeCategory
  rarity            AchievementRarity @default(COMMON)
  maxProgress       Int               @default(1) // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  progressStep      Int               @default(1) // –®–∞–≥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
  lockedVisible     Boolean           @default(true) // –í–∏–¥–∏–º–æ –ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
  lockedDescVisible Boolean           @default(false) // –í–∏–¥–∏–º–æ –ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ
  isActive          Boolean           @default(true)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  
  // –°–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ UserAchievement
  userAchievements UserAchievement[]

  @@map("achievements")
}

model UserAchievement {
  id            String    @id @default(cuid())
  userId        String
  achievementId String
  progress      Int       @default(0) // –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
  unlocked      Boolean   @default(false) // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ª–∏
  unlockedAt    DateTime? // –ö–æ–≥–¥–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // –°–≤—è–∑–∏
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  achievement Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)

  @@unique([userId, achievementId])
  @@map("user_achievements")
}

model FisherBadge {
  id            String            @id @default(cuid())
  profileId     String
  name          String
  description   String?
  icon          String
  category      BadgeCategory     @default(ACHIEVEMENT)
  rarity        AchievementRarity @default(COMMON)
  requiredValue Int?
  earnedAt      DateTime          @default(now())
  fisherProfile FisherProfile     @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@map("fisher_badges")
}

model FisherProfile {
  id                    String             @id @default(cuid())
  userId                String             @unique
  experienceLevel       FishingExperience  @default(BEGINNER)
  specialties           FishingSpecialty[]
  bio                   String?
  rating                Decimal            @default(5.0) @db.Decimal(2, 1)
  completedTrips        Int                @default(0)
  createdTrips          Int                @default(0) // –°–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
  reliability           Decimal            @default(100.0) @db.Decimal(5, 2)
  totalReviews          Int                @default(0)
  positiveReviews       Int                @default(0) // –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
  level                 Int                @default(1) // –£—Ä–æ–≤–µ–Ω—å —Ä—ã–±–æ–ª–æ–≤–∞
  experiencePoints      Int                @default(0) // –û—á–∫–∏ –æ–ø—ã—Ç–∞
  activeDays            Int                @default(0) // –ê–∫—Ç–∏–≤–Ω—ã–µ –¥–Ω–∏
  activeDaysConsecutive Int                @default(0) // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–Ω–∏
  totalFishCaught       Int                @default(0) // –í—Å–µ–≥–æ –ø–æ–π–º–∞–Ω–æ —Ä—ã–±—ã (–∫–≥)
  uniqueSpecies         String[]           @default([]) // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–∏–¥—ã —Ä—ã–±
  favoriteLocation      String? // –õ—é–±–∏–º–æ–µ –º–µ—Å—Ç–æ
  isActive              Boolean            @default(true)
  lastActiveAt          DateTime           @default(now())
  country               String?
  city                  String?
  latitude              Decimal?           @db.Decimal(10, 8) // –î–ª—è –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  longitude             Decimal?           @db.Decimal(11, 8)
  secretCode            String? // –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞
  
  // üéØ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
  // Experience - –¥–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø—ã—Ç–∞
  experienceStats Json? // ExperienceStats: biggestCatch, techniques, seasonal activity
  
  // Social - —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏
  mentorRating      Decimal @default(5.0) @db.Decimal(2, 1) // –ö–∞–∫ —É—á–∏—Ç –Ω–æ–≤–∏—á–∫–æ–≤
  teamworkRating    Decimal @default(5.0) @db.Decimal(2, 1) // –†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ
  reliabilityRating Decimal @default(5.0) @db.Decimal(2, 1) // –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å
  respectRating     Decimal @default(5.0) @db.Decimal(2, 1) // –°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª
  reviewBreakdown   Json? // –î–µ—Ç–∞–ª—å–Ω–∞—è —Ä–∞–∑–±–∏–≤–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ –æ—Ü–µ–Ω–∫–∞–º
  
  // Certificates & Achievements - —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  certificates       Json? // Certificate[]: –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
  fishingPreferences Json? // FishingPreferences: –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Ä—ã–±–æ–ª–æ–≤–∞
  
  // Catch Records - –∑–∞–ø–∏—Å–∏ —É–ª–æ–≤–æ–≤
  totalWeightCaught   Decimal  @default(0.0) @db.Decimal(10, 2) // –û–±—â–∏–π –≤–µ—Å —É–ª–æ–≤–∞ (–∫–≥)
  averageTripDuration Decimal? @db.Decimal(5, 2) // –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏ (—á–∞—Å—ã)
  successRate         Decimal  @default(0.0) @db.Decimal(5, 2) // –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫
  catchRecords        Json? // CatchRecord[]: –∑–Ω–∞—á–∏–º—ã–µ —É–ª–æ–≤—ã
  
  // Technique Skills - –Ω–∞–≤—ã–∫–∏ —Ç–µ—Ö–Ω–∏–∫
  techniqueSkills Json? // TechniqueSkill[]: –æ–ø—ã—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–µ—Ö–Ω–∏–∫–∞–º–∏
  
  // Seasonal & Location Data  
  seasonalActivity  Json? // –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —Å–µ–∑–æ–Ω–∞–º
  favoriteLocations String[] @default([]) // –õ—é–±–∏–º—ã–µ –º–µ—Å—Ç–∞ —Ä—ã–±–∞–ª–∫–∏
  fishingZones      String[] @default([]) // –ó–æ–Ω—ã –≥–¥–µ —Ä—ã–±–∞—á–∏–ª

  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  badges    FisherBadge[]
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("fisher_profiles")
}

model GroupBooking {
  id              String        @id @default(cuid())
  tripId          String
  participants    Int           @default(1)
  totalPrice      Decimal       @db.Decimal(10, 2)
  contactName     String
  contactPhone    String
  contactEmail    String?
  status          BookingStatus @default(PENDING)
  paymentStatus   String        @default("pending")
  specialRequests String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  userId          String?
  trip            GroupTrip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
  user            User?         @relation(fields: [userId], references: [id])

  @@index([tripId])
  @@index([userId])
  @@map("group_bookings")
}

model GroupTrip {
  id                   String                  @id @default(cuid())
  date                 DateTime
  timeSlot             TimeSlot
  maxParticipants      Int                     @default(8)
  minRequired          Int                     @default(6)
  pricePerPerson       Decimal                 @default(95.00) @db.Decimal(10, 2)
  status               GroupTripStatus         @default(FORMING)
  description          String?
  meetingPoint         String?
  specialNotes         String?
  createdAt            DateTime                @default(now())
  updatedAt            DateTime                @updatedAt
  captainId            String?
  approvalMode         ParticipantApprovalMode @default(MANUAL)
  departureLocation    String?
  difficultyRating     Int                     @default(3)
  equipment            EquipmentType           @default(PROVIDED)
  estimatedFishCatch   Int?
  eventType            FishingEventType        @default(COMMERCIAL)
  fishingTechniques    FishingTechnique[]      @default([])
  fishingZones         String[]                @default([])
  maxGroupSize         Int?
  minimumWeatherScore  Int                     @default(6)
  recommendedFor       String[]                @default([])
  skillLevel           SkillLevelRequired      @default(ANY)
  socialMode           SocialEventMode         @default(COLLABORATIVE)
  targetSpecies        FishSpecies[]           @default([])
  weatherDependency    Boolean                 @default(true)
  skillCriteria        EventSkillCriteria[]
  bookings             GroupBooking[]
  captain              User?                   @relation(fields: [captainId], references: [id])
  participantApprovals ParticipantApproval[]
  reviews              Review[]
  payments             Payment[]
  
  // –£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  recommendations SmartRecommendation[] // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —ç—Ç–æ–π –ø–æ–µ–∑–¥–∫–∏
  similarityAsTrip1 TripSimilarity[] @relation("Trip1Similarities") // –°—Ö–æ–¥—Å—Ç–≤–∞ –≥–¥–µ —ç—Ç–∞ –ø–æ–µ–∑–¥–∫–∞ –ø–µ—Ä–≤–∞—è
  similarityAsTrip2 TripSimilarity[] @relation("Trip2Similarities") // –°—Ö–æ–¥—Å—Ç–≤–∞ –≥–¥–µ —ç—Ç–∞ –ø–æ–µ–∑–¥–∫–∞ –≤—Ç–æ—Ä–∞—è

  @@map("group_trips")
}

model ParticipantApproval {
  id             String         @id @default(cuid())
  tripId         String
  participantId  String
  message        String?
  status         ApprovalStatus @default(PENDING)
  approvedBy     String?
  rejectedReason String?
  processedAt    DateTime?
  appliedAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  participant    User           @relation(fields: [participantId], references: [id], onDelete: Cascade)
  trip           GroupTrip      @relation(fields: [tripId], references: [id], onDelete: Cascade)

  @@unique([tripId, participantId])
  @@map("participant_approvals")
}

model PrivateBooking {
  id              String        @id @default(cuid())
  date            DateTime
  timeSlot        TimeSlot
  participants    Int           @default(1)
  contactName     String
  contactPhone    String
  contactEmail    String?
  totalPrice      Decimal       @default(400.00) @db.Decimal(10, 2)
  status          BookingStatus @default(PENDING)
  specialRequests String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@map("private_bookings")
}

model Review {
  id         String    @id @default(cuid())
  tripId     String
  fromUserId String
  toUserId   String
  rating     Int
  comment    String?
  verified   Boolean   @default(false)
  helpful    Int       @default(0)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  fromUser   User      @relation("UserFromReviews", fields: [fromUserId], references: [id], onDelete: Cascade)
  toUser     User      @relation("UserToReviews", fields: [toUserId], references: [id], onDelete: Cascade)
  trip       GroupTrip @relation(fields: [tripId], references: [id], onDelete: Cascade)

  @@unique([tripId, fromUserId, toUserId])
  @@map("reviews")
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model SystemSetting {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@map("system_settings")
}

model User {
  id                   String                @id @default(cuid())
  name                 String?
  email                String                @unique
  emailVerified        DateTime?
  image                String?
  role                 UserRole              @default(PARTICIPANT)
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  accounts             Account[]
  fisherProfile        FisherProfile?
  groupBookings        GroupBooking[]
  captainedTrips       GroupTrip[]
  participantApprovals ParticipantApproval[]
  reviewsFrom          Review[]              @relation("UserFromReviews")
  reviewsTo            Review[]              @relation("UserToReviews")
  sessions             Session[]
  achievements         UserAchievement[] // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  
  // –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è
  subscriptions     Subscription[]
  payments          Payment[]
  courseEnrollments CourseEnrollment[]
  advertisements    Advertisement[]
  
  // –ú–æ—Ä—Å–∫–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
  catchRecords CatchRecord[] // –ó–∞–ø–∏—Å–∏ –æ–± —É–ª–æ–≤–∞—Ö

  // –¶–∏—Ñ—Ä–æ–≤–æ–π –¥–Ω–µ–≤–Ω–∏–∫ —Ä—ã–±–æ–ª–æ–≤–∞
  diaryEntries FishingDiaryEntry[] // –ó–∞–ø–∏—Å–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞

  // –£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  recommendationsReceived SmartRecommendation[] @relation("UserRecommendations") // –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  recommendationsFromCaptain SmartRecommendation[] @relation("CaptainRecommendations") // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–∫ –∫–∞–ø–∏—Ç–∞–Ω
  recommendationInteractions RecommendationInteraction[] // –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
  captainRecommendations CaptainRecommendation[] @relation("CaptainRecommendationsAuthored") // –ê–≤—Ç–æ—Ä—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–ø–∏—Ç–∞–Ω–∞
  captainRecommendationVotes CaptainRecommendationVote[] // –ì–æ–ª–æ—Å–∞ –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–ø–∏—Ç–∞–Ω–æ–≤

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_tokens")
}

enum ApprovalStatus {
  PENDING
  APPROVED
  REJECTED
}

enum BadgeCategory {
  ACHIEVEMENT
  MILESTONE
  SPECIAL
  SEASONAL
  FISH_SPECIES // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ –≤–∏–¥–∞–º —Ä—ã–±
  TECHNIQUE // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ —Ç–µ—Ö–Ω–∏–∫–∞–º
  SOCIAL // –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  GEOGRAPHY // –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum BookingType {
  PRIVATE
  GROUP
}

enum EquipmentType {
  PROVIDED
  BRING_OWN
  RENTAL_AVAILABLE
  PARTIALLY_PROVIDED
}

enum FishSpecies {
  SEABASS
  DORADO
  SEABREAM
  MACKEREL
  SARDINE
  TUNA
  ALBACORE
  BONITO
  SWORDFISH
  MAHI_MAHI
  BLUE_MARLIN
  WHITE_MARLIN
  SAILFISH
  GROUPER
  RED_SNAPPER
  JOHN_DORY
  SOLE
  TURBOT
  AMBERJACK
  CONGER_EEL
  OCTOPUS
  CUTTLEFISH
  MIXED_SPECIES
}

enum FishingEventType {
  COMMERCIAL
  COMMUNITY
  TOURNAMENT
  LEARNING
}

enum FishingExperience {
  BEGINNER
  INTERMEDIATE
  EXPERT
}

enum FishingSpecialty {
  DEEP_SEA
  SHORE
  FLY_FISHING
  SPORT_FISHING
}

enum FishingTechnique {
  TROLLING
  JIGGING
  BOTTOM_FISHING
  FLY_FISHING
  SPINNING
  SURFCASTING
  DRIFTING
  POPPING
  LIVE_BAIT
  DEEP_DROP
}

enum GroupTripStatus {
  FORMING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum ParticipantApprovalMode {
  AUTO
  MANUAL
  SKILL_BASED
  HYBRID
}

enum SkillCriteriaType {
  MINIMUM_EXPERIENCE
  COMPLETED_TRIPS
  SPECIES_EXPERIENCE
  TECHNIQUE_SKILL
  CERTIFICATION
  EQUIPMENT_OWNERSHIP
  RATING_THRESHOLD
  LANGUAGE_REQUIREMENT
}

enum SkillLevelRequired {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
  ANY
}

enum SocialEventMode {
  COMPETITIVE
  COLLABORATIVE
  EDUCATIONAL
  RECREATIONAL
  FAMILY
}

enum TimeSlot {
  MORNING_9AM
  AFTERNOON_2PM
}

enum UserRole {
  PARTICIPANT
  CAPTAIN
  ADMIN
}

enum AchievementRarity {
  COMMON // –û–±—ã—á–Ω–æ–µ (–ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å)
  UNCOMMON // –ù–µ–æ–±—ã—á–Ω–æ–µ
  RARE // –†–µ–¥–∫–æ–µ
  EPIC // –≠–ø–∏—á–µ—Å–∫–æ–µ
  LEGENDARY // –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ
  MYTHIC // –ú–∏—Ñ–∏—á–µ—Å–∫–æ–µ (—Å–∞–º–æ–µ —Ä–µ–¥–∫–æ–µ)
}

enum AchievementType {
  // –í–∏–¥—ã —Ä—ã–±
  TUNA_MASTER // –ú–∞—Å—Ç–µ—Ä —Ç—É–Ω—Ü–∞ (–ø–æ–π–º–∞–ª 10+ —Ç—É–Ω—Ü–æ–≤)
  DORADO_HUNTER // –û—Ö–æ—Ç–Ω–∏–∫ –Ω–∞ –¥–æ—Ä–∞–¥–æ (–ø–æ–π–º–∞–ª 5+ –¥–æ—Ä–∞–¥–æ)
  SEABASS_EXPERT // –≠–∫—Å–ø–µ—Ä—Ç –º–æ—Ä—Å–∫–æ–≥–æ –æ–∫—É–Ω—è
  MARLIN_LEGEND // –õ–µ–≥–µ–Ω–¥–∞ –º–∞—Ä–ª–∏–Ω–∞
  SPECIES_COLLECTOR // –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä –≤–∏–¥–æ–≤ (–ø–æ–π–º–∞–ª 5+ —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–æ–≤)
  
  // –¢–µ—Ö–Ω–∏–∫–∏
  TROLLING_EXPERT // –¢—Ä–æ–ª–ª–∏–Ω–≥-—ç–∫—Å–ø–µ—Ä—Ç (10+ –ø–æ–µ–∑–¥–æ–∫ —Å —Ç—Ä–æ–ª–ª–∏–Ω–≥–æ–º)
  JIGGING_MASTER // –î–∂–∏–≥-–º–∞—Å—Ç–µ—Ä
  BOTTOM_FISHING_PRO // –ü—Ä–æ—Ñ–∏ –¥–æ–Ω–Ω–æ–π –ª–æ–≤–ª–∏
  FLY_FISHING_ARTIST // –•—É–¥–æ–∂–Ω–∏–∫ –Ω–∞—Ö–ª—ã—Å—Ç–∞
  TECHNIQUE_VERSATILE // –£–Ω–∏–≤–µ—Ä—Å–∞–ª —Ç–µ—Ö–Ω–∏–∫ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª 4+ —Ç–µ—Ö–Ω–∏–∫–∏)
  
  // –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ
  NEWBIE_MENTOR // –ù–∞—Å—Ç–∞–≤–Ω–∏–∫ –Ω–æ–≤–∏—á–∫–æ–≤ (–ø–æ–º–æ–≥ 5+ –Ω–æ–≤–∏—á–∫–∞–º)
  GROUP_ORGANIZER // –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –≥—Ä—É–ø–ø (—Å–æ–∑–¥–∞–ª 10+ —Å–æ–±—ã—Ç–∏–π)
  COMMUNITY_BUILDER // –°—Ç—Ä–æ–∏—Ç–µ–ª—å —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
  REVIEW_MASTER // –ú–∞—Å—Ç–µ—Ä –æ—Ç–∑—ã–≤–æ–≤ (–æ—Å—Ç–∞–≤–∏–ª 20+ –æ—Ç–∑—ã–≤–æ–≤)
  RELIABLE_FISHER // –ù–∞–¥–µ–∂–Ω—ã–π —Ä—ã–±–æ–ª–æ–≤ (100% –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å)
  
  // –ì–µ–æ–≥—Ä–∞—Ñ–∏—è
  REEF_EXPLORER // –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å —Ä–∏—Ñ–æ–≤
  DEEP_SEA_ADVENTURER // –ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç
  COASTAL_SPECIALIST // –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø—Ä–∏–±—Ä–µ–∂–Ω–æ–π –ª–æ–≤–ª–∏
  WORLD_TRAVELER // –ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ (—Ä—ã–±–∞—á–∏–ª –≤ 3+ –º–µ—Å—Ç–∞—Ö)
  LOCAL_EXPERT // –ú–µ—Å—Ç–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç (50+ –ø–æ–µ–∑–¥–æ–∫ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ)
}

// ============================================================================
// –ú–û–ù–ï–¢–ò–ó–ê–¶–ò–Ø –ò –ë–ò–ó–ù–ï–°-–õ–û–ì–ò–ö–ê
// ============================================================================

// –ü–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–æ–≤ (Premium ‚Ç¨50/–º–µ—Å—è—Ü)
model Subscription {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Stripe –¥–∞–Ω–Ω—ã–µ
  stripeCustomerId     String? @unique
  stripeSubscriptionId String? @unique
  stripePriceId        String?
  
  // –ü–æ–¥–ø–∏—Å–∫–∞
  tier   SubscriptionTier   @default(FREE)
  status SubscriptionStatus @default(INACTIVE)
  
  // –î–∞—Ç—ã
  currentPeriodStart DateTime?
  currentPeriodEnd   DateTime?
  cancelAtPeriodEnd  Boolean   @default(false)
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // –°–≤—è–∑–∏
  payments Payment[]
  
  @@map("subscriptions")
}

enum SubscriptionTier {
  FREE
  CAPTAIN_PREMIUM // ‚Ç¨50/–º–µ—Å—è—Ü —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏
}

enum SubscriptionStatus {
  INACTIVE
  ACTIVE
  PAST_DUE
  CANCELED
  UNPAID
}

// –ü–ª–∞—Ç–µ–∂–∏ –∏ –∫–æ–º–∏—Å—Å–∏–∏
model Payment {
  id String @id @default(cuid())
  
  // –°–≤—è–∑–∏
  userId String?
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  subscriptionId String?
  subscription   Subscription? @relation(fields: [subscriptionId], references: [id], onDelete: SetNull)
  
  tripId String?
  trip   GroupTrip? @relation(fields: [tripId], references: [id], onDelete: SetNull)
  
  // Stripe –¥–∞–Ω–Ω—ã–µ
  stripePaymentId String? @unique
  stripeInvoiceId String? @unique
  
  // –ü–ª–∞—Ç–µ–∂
  type     PaymentType
  amount   Int // –í —Ü–µ–Ω—Ç–∞—Ö
  currency String        @default("EUR")
  status   PaymentStatus @default(PENDING)
  
  // –ö–æ–º–∏—Å—Å–∏–∏ (–¥–ª—è —Ç—É—Ä–æ–≤)
  commissionAmount Int? // –ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –≤ —Ü–µ–Ω—Ç–∞—Ö
  commissionRate   Float? // –ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏ (15-20%)
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  description String?
  metadata    Json?
  
  // –î–∞—Ç—ã
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  paidAt    DateTime?
  
  @@map("payments")
}

enum PaymentType {
  SUBSCRIPTION // –ü–æ–¥–ø–∏—Å–∫–∞ –∫–∞–ø–∏—Ç–∞–Ω–∞
  TOUR_BOOKING // –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–∞
  COURSE_PURCHASE // –ü–æ–∫—É–ø–∫–∞ –∫—É—Ä—Å–∞
  ADVERTISING // –†–µ–∫–ª–∞–º–∞ –≤ –ª–µ–Ω—Ç–µ
}

enum PaymentStatus {
  PENDING
  SUCCEEDED
  FAILED
  CANCELED
  REFUNDED
}

// –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã –æ–Ω–ª–∞–π–Ω
model Course {
  id String @id @default(cuid())
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ
  title       String
  description String?
  category    CourseCategory
  
  // –¶–µ–Ω–∞
  price         Int // –í —Ü–µ–Ω—Ç–∞—Ö
  stripePriceId String? @unique
  
  // –ö–æ–Ω—Ç–µ–Ω—Ç
  content    Json? // –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∫—É—Ä—Å–∞
  duration   Int? // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –º–∏–Ω—É—Ç–∞—Ö
  difficulty CourseDifficulty @default(BEGINNER)
  
  // –°—Ç–∞—Ç—É—Å
  published Boolean @default(false)
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // –°–≤—è–∑–∏
  enrollments CourseEnrollment[]
  
  @@map("courses")
}

enum CourseCategory {
  BASIC_FISHING // –û—Å–Ω–æ–≤—ã —Ä—ã–±–∞–ª–∫–∏
  ADVANCED_TECHNIQUES // –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏  
  CAPTAIN_LICENSE // –õ–∏—Ü–µ–Ω–∑–∏—è –∫–∞–ø–∏—Ç–∞–Ω–∞
  SAFETY // –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
  EQUIPMENT // –°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
}

enum CourseDifficulty {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
}

// –ó–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å—ã
model CourseEnrollment {
  id String @id @default(cuid())
  
  // –°–≤—è–∑–∏
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
  
  // –ü—Ä–æ–≥—Ä–µ—Å—Å
  status   EnrollmentStatus @default(ENROLLED)
  progress Float            @default(0) // 0-100%
  score    Float? // –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
  
  // –î–∞—Ç—ã
  enrolledAt  DateTime  @default(now())
  startedAt   DateTime?
  completedAt DateTime?
  
  // –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
  certificateIssued Boolean @default(false)
  certificateUrl    String?
  
  @@unique([userId, courseId])
  @@map("course_enrollments")
}

enum EnrollmentStatus {
  ENROLLED
  IN_PROGRESS
  COMPLETED
  DROPPED
}

// –†–µ–∫–ª–∞–º–∞ –≤ –ª–µ–Ω—Ç–µ —Å–æ–±—ã—Ç–∏–π
model Advertisement {
  id String @id @default(cuid())
  
  // –†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—å
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // –ö–æ–Ω—Ç–µ–Ω—Ç —Ä–µ–∫–ª–∞–º—ã
  title       String
  description String?
  imageUrl    String?
  targetUrl   String?
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞–∑–∞
  type     AdType     @default(EQUIPMENT_PROMOTION)
  priority AdPriority @default(NORMAL)
  
  // –¢–∞—Ä–≥–µ—Ç–∏–Ω–≥
  targetAudience Json? // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥–∞
  locations      String[] // –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ–±–ª–∞—Å—Ç–∏
  
  // –ë—é–¥–∂–µ—Ç –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  budget       Int // –í —Ü–µ–Ω—Ç–∞—Ö
  costPerClick Int? // –¶–µ–Ω–∞ –∑–∞ –∫–ª–∏–∫ –≤ —Ü–µ–Ω—Ç–∞—Ö
  impressions  Int  @default(0)
  clicks       Int  @default(0)
  conversions  Int  @default(0)
  
  // –°—Ç–∞—Ç—É—Å –∏ –¥–∞—Ç—ã
  status    AdStatus  @default(DRAFT)
  startDate DateTime?
  endDate   DateTime?
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("advertisements")
}

enum AdType {
  EQUIPMENT_PROMOTION // –†–µ–∫–ª–∞–º–∞ —Å–Ω–∞—Å—Ç–µ–π/–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
  FEATURED_LISTING // –í—ã–¥–µ–ª–µ–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
  SPONSOR_MESSAGE // –°–ø–æ–Ω—Å–æ—Ä—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
}

enum AdPriority {
  LOW
  NORMAL
  HIGH
  PREMIUM
}

enum AdStatus {
  DRAFT
  PENDING_REVIEW
  ACTIVE
  PAUSED
  COMPLETED
  REJECTED
}

// ============================================================================
// –ú–û–†–°–ö–û–ô –ö–ê–õ–ï–ù–î–ê–†–¨ –ò –ê–°–¢–†–û–ù–û–ú–ò–ß–ï–°–ö–ò–ï –î–ê–ù–ù–´–ï
// ============================================================================

// –õ—É–Ω–Ω—ã–µ —Ñ–∞–∑—ã –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä—ã–±–∞–ª–∫—É
model LunarPhase {
  id               String         @id @default(cuid())
  date             DateTime // –î–∞—Ç–∞ —Ñ–∞–∑—ã
  type             LunarPhaseType
  angle            Float // –£–≥–æ–ª —Ñ–∞–∑—ã (0-360¬∞)
  illumination     Float // –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏ (0-100)
  distanceKm       Float // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –õ—É–Ω—ã –≤ –∫–º
  apparentDiameter Float // –í–∏–¥–∏–º—ã–π –¥–∏–∞–º–µ—Ç—Ä –≤ –≥—Ä–∞–¥—É—Å–∞—Ö
  
  // –ö–∏—Ç–∞–π—Å–∫–∏–π –ª—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
  chineseLunarData Json? // ChineseLunarDay –¥–∞–Ω–Ω—ã–µ
  
  // –í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä—ã–±–∞–ª–∫—É
  fishingInfluence Json? // LunarInfluence –¥–∞–Ω–Ω—ã–µ
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // –°–≤—è–∑–∏
  fishingConditions FishingConditions[]
  catchRecords      CatchRecord[]
  
  @@unique([date])
  @@map("lunar_phases")
}

enum LunarPhaseType {
  NEW_MOON
  WAXING_CRESCENT
  FIRST_QUARTER
  WAXING_GIBBOUS
  FULL_MOON
  WANING_GIBBOUS
  LAST_QUARTER
  WANING_CRESCENT
}

// –ü—Ä–æ–≥–Ω–æ–∑ —Ä—ã–±–∞–ª–∫–∏ –Ω–∞ –¥–µ–Ω—å
model FishingConditions {
  id       String   @id @default(cuid())
  date     DateTime // –î–∞—Ç–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞
  location Json // FishingLocation –¥–∞–Ω–Ω—ã–µ
  
  // –û–±—â–∏–µ —É—Å–ª–æ–≤–∏—è
  overallRating Int // –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–ª—ë–≤–∞ (1-10)
  lunarPhaseId  String
  lunarPhase    LunarPhase @relation(fields: [lunarPhaseId], references: [id])
  
  // –í–ª–∏—è–Ω–∏—è
  tidalInfluence Json? // TidalInfluence –¥–∞–Ω–Ω—ã–µ
  weatherImpact  Json? // –í–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ –∫–ª—ë–≤
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  bestHours       Json? // TimeWindow[] –ª—É—á—à–∏–µ —á–∞—Å—ã
  recommendations String[] // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  
  // –í–∏–¥—ã —Ä—ã–±
  speciesInfluence Json? // SpeciesFishingInfluence[] –¥–∞–Ω–Ω—ã–µ
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([date, location])
  @@map("fishing_conditions")
}

// –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –æ–± —É–ª–æ–≤–∞—Ö
model CatchRecord {
  id String @id @default(cuid())
  
  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  date     DateTime // –î–∞—Ç–∞ —É–ª–æ–≤–∞
  location Json // FishingLocation –¥–∞–Ω–Ω—ã–µ
  anglerId String? // –†—ã–±–æ–ª–æ–≤ (–º–æ–∂–µ—Ç –±—ã—Ç—å null –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
  angler   User?    @relation(fields: [anglerId], references: [id])
  
  // –õ—É–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
  lunarPhaseId String
  lunarPhase   LunarPhase @relation(fields: [lunarPhaseId], references: [id])
  
  // –£–ª–æ–≤
  catches     Json // CatchDetails[] –ø–æ–π–º–∞–Ω–Ω—ã–µ —Ä—ã–±—ã
  totalWeight Float // –û–±—â–∏–π –≤–µ—Å —É–ª–æ–≤–∞ –≤ –∫–≥
  totalCount  Int // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—ã–±—ã
  
  // –£—Å–ª–æ–≤–∏—è
  weatherData Json? // WeatherConditions –¥–∞–Ω–Ω—ã–µ
  tackleUsed  Json? // TackleUsed[] –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Å–Ω–∞—Å—Ç–∏
  techniques  FishingTechnique[] // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
  duration Int? // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä—ã–±–∞–ª–∫–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö
  success  Boolean @default(true) // –£—Å–ø–µ—à–Ω–∞—è –ª–∏ —Ä—ã–±–∞–ª–∫–∞
  notes    String? // –ó–∞–º–µ—Ç–∫–∏
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö
  verified   Boolean         @default(false) // –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  dataSource CatchDataSource @default(USER_REPORT) // –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
  confidence Float           @default(1.0) // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö (0-1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([date])
  @@index([lunarPhaseId])
  @@index([anglerId])
  @@map("catch_records")
}

enum CatchDataSource {
  USER_REPORT // –û—Ç—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  CAPTAIN_LOG // –ñ—É—Ä–Ω–∞–ª –∫–∞–ø–∏—Ç–∞–Ω–∞  
  AUTOMATED // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (—Å–µ–Ω—Å–æ—Ä—ã)
  HISTORICAL // –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∞—Ä—Ö–∏–≤—ã
  RESEARCH // –ù–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
}

// –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–æ–≤ —Ä—ã–± (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ enum)
model FishSpeciesDetail {
  id      String      @id @default(cuid())
  species FishSpecies @unique // –°–≤—è–∑—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º enum
  
  // –ù–∞–∑–≤–∞–Ω–∏—è
  nameRu         String
  nameEn         String
  scientificName String
  
  // –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
  seasonality      Json // SeasonalAvailability –¥–∞–Ω–Ω—ã–µ
  migrationPattern Json? // MigrationPattern –¥–∞–Ω–Ω—ã–µ
  depthPreferences Json // DepthRange –¥–∞–Ω–Ω—ã–µ
  temperatureRange Json // TemperatureRange –¥–∞–Ω–Ω—ã–µ
  
  // –†—ã–±–∞–ª–∫–∞
  preferredTechniques FishingTechnique[]
  bestLunarPhases     LunarPhaseType[]
  difficulty          Int                @default(5) // –°–ª–æ–∂–Ω–æ—Å—Ç—å –ª–æ–≤–ª–∏ (1-10)
  
  // –ë–∏–æ–ª–æ–≥–∏—è
  averageSize    Json? // –†–∞–∑–º–µ—Ä—ã {min, max, average} –≤ —Å–º
  averageWeight  Json? // –í–µ—Å {min, max, average} –≤ –∫–≥
  spawningPeriod Json? // –ü–µ—Ä–∏–æ–¥ –Ω–µ—Ä–µ—Å—Ç–∞
  feedingHabits  Json? // –ü–∏—Ç–∞–Ω–∏–µ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
  
  // –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å
  marketValue Float? // –†—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–≥
  gameValue   Int? // –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å (1-10)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("fish_species_details")
}

// –ú–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
model MigrationEvent {
  id      String      @id @default(cuid())
  species FishSpecies // –í–∏–¥ —Ä—ã–±—ã
  
  // –°–æ–±—ã—Ç–∏–µ
  eventType   MigrationEventType
  date        DateTime // –î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è
  probability Float // –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è (0-1)
  
  // –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏
  location  Json // –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
  direction String? // –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏
  depth     Float? // –ì–ª—É–±–∏–Ω–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è
  
  // –£—Å–ª–æ–≤–∏—è
  waterTemperature Float? // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã
  currentStrength  Float? // –°–∏–ª–∞ —Ç–µ—á–µ–Ω–∏—è
  
  // –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
  dataSource String // –ò—Å—Ç–æ—á–Ω–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  confidence Float  @default(0.8) // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ–≥–Ω–æ–∑–µ

  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([species])
  @@index([date])
  @@map("migration_events")
}

enum MigrationEventType {
  ARRIVAL // –ü—Ä–∏–±—ã—Ç–∏–µ –≤ —Ä–µ–≥–∏–æ–Ω
  PEAK // –ü–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  DEPARTURE // –û—Ç–±—ã—Ç–∏–µ –∏–∑ —Ä–µ–≥–∏–æ–Ω–∞
}

// –õ—É—á—à–∏–µ –º–µ—Å—Ç–∞ –¥–ª—è —Ä—ã–±–∞–ª–∫–∏
model FishingHotspot {
  id String @id @default(cuid())
  
  // –õ–æ–∫–∞—Ü–∏—è
  name              String
  latitude          Decimal @db.Decimal(10, 8)
  longitude         Decimal @db.Decimal(11, 8)
  depth             Float? // –°—Ä–µ–¥–Ω—è—è –≥–ª—É–±–∏–Ω–∞
  distanceFromShore Float? // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –±–µ—Ä–µ–≥–∞ –≤ –∫–º
  
  // –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
  bottomType    String? // –¢–∏–ø –¥–Ω–∞
  structureType String? // –¢–∏–ø —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (—Ä–∏—Ñ, –∑–∞—Ç–æ–Ω—É–≤—à–∏–π –∫–æ—Ä–∞–±–ª—å –∏ —Ç.–¥.)
  targetSpecies FishSpecies[] // –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥—ã —Ä—ã–±
  
  // –£—Å–ª–æ–≤–∏—è
  bestSeasons     Json? // –õ—É—á—à–∏–µ —Å–µ–∑–æ–Ω—ã
  bestTides       Json? // –õ—É—á—à–∏–µ –ø—Ä–∏–ª–∏–≤—ã
  bestWeather     Json? // –õ—É—á—à–∏–µ –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
  bestLunarPhases LunarPhaseType[] // –õ—É—á—à–∏–µ –ª—É–Ω–Ω—ã–µ —Ñ–∞–∑—ã
  
  // –†–µ–π—Ç–∏–Ω–≥
  rating        Float @default(5.0) // –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ (1-10)
  difficulty    Int   @default(5) // –°–ª–æ–∂–Ω–æ—Å—Ç—å (1-10)
  accessibility Int   @default(5) // –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å (1-10)
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  totalVisits  Int   @default(0)
  successRate  Float @default(0.5) // –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã—Ö —Ä—ã–±–∞–ª–æ–∫
  averageCatch Float @default(0.0) // –°—Ä–µ–¥–Ω–∏–π —É–ª–æ–≤ –≤ –∫–≥
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
  description String?
  tips        String[] // –°–æ–≤–µ—Ç—ã –¥–ª—è —Ä—ã–±–∞–ª–∫–∏
  hazards     String[] // –û–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–∏—è
  
  // –î–∞–Ω–Ω—ã–µ
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([latitude, longitude])
  @@map("fishing_hotspots")
}

// –ü—Ä–∏–ª–∏–≤—ã –∏ –æ—Ç–ª–∏–≤—ã
model TidalData {
  id String @id @default(cuid())
  
  // –í—Ä–µ–º—è –∏ –º–µ—Å—Ç–æ
  datetime DateTime // –í—Ä–µ–º—è –ø—Ä–∏–ª–∏–≤–∞/–æ—Ç–ª–∏–≤–∞
  location Json // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
  
  // –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–ª–∏–≤–µ
  type     TideType // –ü—Ä–∏–ª–∏–≤ –∏–ª–∏ –æ—Ç–ª–∏–≤
  height   Float // –í—ã—Å–æ—Ç–∞ –≤ –º–µ—Ç—Ä–∞—Ö
  strength Int // –°–∏–ª–∞ (1-10)
  
  // –í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä—ã–±–∞–ª–∫—É
  fishingImpact FishingImpact // –í–ª–∏—è–Ω–∏–µ –Ω–∞ –∫–ª—ë–≤
  bestSpecies   FishSpecies[] // –í–∏–¥—ã, –Ω–∞–∏–±–æ–ª–µ–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –≤ —ç—Ç–æ –≤—Ä–µ–º—è
  
  createdAt DateTime @default(now())
  
  @@index([datetime])
  @@index([location])
  @@map("tidal_data")
}

enum TideType {
  HIGH_TIDE // –ü—Ä–∏–ª–∏–≤
  LOW_TIDE // –û—Ç–ª–∏–≤
}

enum FishingImpact {
  VERY_NEGATIVE
  NEGATIVE
  NEUTRAL
  POSITIVE
  VERY_POSITIVE
}

// –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ª—É–Ω–Ω—ã–º —Ñ–∞–∑–∞–º
model LunarFishingStats {
  id String @id @default(cuid())
  
  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
  lunarPhase LunarPhaseType
  species    FishSpecies
  location   Json // –†–µ–≥–∏–æ–Ω/–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
  season     Int // –°–µ–∑–æ–Ω (1-4)
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  totalObservations Int // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π
  averageSuccess    Float // –°—Ä–µ–¥–Ω—è—è —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
  averageCatch      Float // –°—Ä–µ–¥–Ω–∏–π —É–ª–æ–≤ –≤ –∫–≥
  bestHours         Json? // –õ—É—á—à–∏–µ —á–∞—Å—ã –¥–Ω—è
  
  // –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è
  correlationStrength Float // –°–∏–ª–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å –ª—É–Ω–Ω–æ–π —Ñ–∞–∑–æ–π (-1 to 1)
  confidence          Float // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
  lastCalculated DateTime // –ö–æ–≥–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–ª–æ—Å—å
  dataPoints     Int // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([lunarPhase, species, location, season])
  @@map("lunar_fishing_stats")
}

// ==== –¶–ò–§–†–û–í–û–ô –î–ù–ï–í–ù–ò–ö –†–´–ë–û–õ–û–í–ê ====

// –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–ø–∏—Å—å –¥–Ω–µ–≤–Ω–∏–∫–∞ —Ä—ã–±–æ–ª–æ–≤–∞
model FishingDiaryEntry {
  id String @id @default(cuid())

  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  userId      String
  title       String // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–ø–∏—Å–∏
  description String? // –û–ø–∏—Å–∞–Ω–∏–µ —Ä—ã–±–∞–ª–∫–∏
  date        DateTime // –î–∞—Ç–∞ —Ä—ã–±–∞–ª–∫–∏

  // –õ–æ–∫–∞—Ü–∏—è —Å GPS
  locationName String? // –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞
  latitude     Float? // GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
  longitude    Float?
  accuracy     Float? // –¢–æ—á–Ω–æ—Å—Ç—å GPS (–≤ –º–µ—Ç—Ä–∞—Ö)

  // –î–µ—Ç–∞–ª–∏ —Ä—ã–±–∞–ª–∫–∏  
  weather       Json? // –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
  temperature   Float? // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã/–≤–æ–∑–¥—É—Ö–∞
  windSpeed     Float? // –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞
  windDirection WindDirection? // –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞

  // –£–ª–æ–≤
  fishCaught  DiaryFishCatch[] // –ü–æ–π–º–∞–Ω–Ω–∞—è —Ä—ã–±–∞
  totalWeight Float? // –û–±—â–∏–π –≤–µ—Å —É–ª–æ–≤–∞
  totalCount  Int              @default(0) // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—ã–±—ã

  // –°–Ω–∞—Å—Ç–∏ –∏ –ø—Ä–∏–º–∞–Ω–∫–∏
  rodType   String? // –¢–∏–ø —É–¥–∏–ª–∏—â–∞
  reelType  String? // –¢–∏–ø –∫–∞—Ç—É—à–∫–∏
  lineType  String? // –¢–∏–ø –ª–µ—Å–∫–∏
  baitUsed  String[] @default([]) // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–∞–Ω–∫–∏
  lureColor String? // –¶–≤–µ—Ç –ø—Ä–∏–º–∞–Ω–∫–∏

  // –ú–µ–¥–∏–∞
  media DiaryMedia[] // –§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ

  // –ú–µ—Ç–∫–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  tags      String[] @default([]) // –¢–µ–≥–∏
  isPrivate Boolean  @default(false) // –ü—Ä–∏–≤–∞—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å
  rating    Int? // –õ–∏—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ (1-5)

  // –°–≤—è–∑–∏
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, date])
  @@index([latitude, longitude])
  @@map("fishing_diary_entries")
}

// –ü–æ–π–º–∞–Ω–Ω–∞—è —Ä—ã–±–∞ –≤ –∑–∞–ø–∏—Å–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞
model DiaryFishCatch {
  id      String @id @default(cuid())
  entryId String

  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä—ã–±–µ
  species  FishSpecies // –í–∏–¥ —Ä—ã–±—ã
  weight   Float? // –í–µ—Å –≤ –∫–≥
  length   Float? // –î–ª–∏–Ω–∞ –≤ —Å–º
  quantity Int         @default(1) // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ

  // –î–µ—Ç–∞–ª–∏ –ø–æ–∏–º–∫–∏
  timeOfCatch DateTime? // –¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–∏–º–∫–∏
  depth       Float? // –ì–ª—É–±–∏–Ω–∞ –ª–æ–≤–ª–∏
  method      FishingTechnique? // –°–ø–æ—Å–æ–± –ª–æ–≤–ª–∏
  baitUsed    String? // –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –ø—Ä–∏–º–∞–Ω–∫–∞

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
  wasReleased Boolean @default(false) // –ë—ã–ª–∞ –ª–∏ –æ—Ç–ø—É—â–µ–Ω–∞
  notes       String? // –ó–∞–º–µ—Ç–∫–∏ –æ –ø–æ–∏–º–∫–µ

  // –°–≤—è–∑–∏
  entry FishingDiaryEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([entryId])
  @@index([species])
  @@map("diary_fish_catches")
}

// –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã –¥–Ω–µ–≤–Ω–∏–∫–∞ (—Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ)
model DiaryMedia {
  id      String @id @default(cuid())
  entryId String

  // –§–∞–π–ª
  fileName  String // –ò–º—è —Ñ–∞–π–ª–∞
  fileUrl   String // URL —Ñ–∞–π–ª–∞
  fileSize  Int? // –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö
  mimeType  String // MIME —Ç–∏–ø —Ñ–∞–π–ª–∞
  mediaType DiaryMediaType // –¢–∏–ø –º–µ–¥–∏–∞

  // EXIF –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (–∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ç–æ)
  exifData     Json? // –í—Å–µ EXIF –¥–∞–Ω–Ω—ã–µ
  gpsLatitude  Float? // GPS –∏–∑ EXIF
  gpsLongitude Float? // GPS –∏–∑ EXIF
  captureTime  DateTime? // –í—Ä–µ–º—è —Å—ä–µ–º–∫–∏ –∏–∑ EXIF
  cameraModel  String? // –ú–æ–¥–µ–ª—å –∫–∞–º–µ—Ä—ã
  lensModel    String? // –ú–æ–¥–µ–ª—å –æ–±—ä–µ–∫—Ç–∏–≤–∞

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  title       String? // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–¥–∏–∞
  description String? // –û–ø–∏—Å–∞–Ω–∏–µ
  isPublic    Boolean @default(true) // –ü—É–±–ª–∏—á–Ω–æ–µ –ª–∏ —Ñ–æ—Ç–æ

  // –°–≤—è–∑–∏
  entry FishingDiaryEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([entryId])
  @@index([mediaType])
  @@map("diary_media")
}

// ==== –£–ú–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ====

// –û—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–º–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
model SmartRecommendation {
  id String @id @default(cuid())

  // –¢–∏–ø —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  type RecommendationType // –¢–∏–ø: –∏—Å—Ç–æ—Ä–∏—è, –ø–æ–≥–æ–¥–∞, —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è

  // –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è
  targetUserId String? // –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  targetUserRole UserRole[] @default([]) // –ò–ª–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã —Ä–æ–ª–µ–π
  skillLevel SkillLevelRequired[] @default([]) // –£—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–æ–≤

  // –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  title String // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  description String // –û–ø–∏—Å–∞–Ω–∏–µ
  aiGeneratedText String? // –¢–µ–∫—Å—Ç, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI
  
  // –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  triggerContext Json? // –ö–æ–Ω—Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
  weatherConditions Json? // –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
  
  // –°–≤—è–∑–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
  recommendedTripId String? // ID —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–π –ø–æ–µ–∑–¥–∫–∏
  recommendedTrip GroupTrip? @relation(fields: [recommendedTripId], references: [id], onDelete: Cascade)
  
  recommendedSpecies FishSpecies[] @default([]) // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –≤–∏–¥—ã —Ä—ã–±
  recommendedTechniques FishingTechnique[] @default([]) // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏
  recommendedLocation Json? // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç–∞
  
  // –ö–∞–ø–∏—Ç–∞–Ω, –¥–∞–≤—à–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é (–¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö)
  fromCaptainId String?
  fromCaptain User? @relation("CaptainRecommendations", fields: [fromCaptainId], references: [id], onDelete: SetNull)

  // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
  priority Int @default(5) // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç (1-10)
  relevanceScore Float @default(0.5) // –û—Ü–µ–Ω–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ AI (0-1)
  confidenceScore Float @default(0.5) // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (0-1)

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  impressions Int @default(0) // –ü–æ–∫–∞–∑—ã
  clicks Int @default(0) // –ö–ª–∏–∫–∏
  conversions Int @default(0) // –ö–æ–Ω–≤–µ—Ä—Å–∏–∏ (–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
  
  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
  validFrom DateTime @default(now()) // –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ —Å
  validUntil DateTime? // –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –¥–æ
  
  // –°—Ç–∞—Ç—É—Å –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  isActive Boolean @default(true)
  metadata Json? // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  
  // –°–≤—è–∑–∏
  targetUser User? @relation("UserRecommendations", fields: [targetUserId], references: [id], onDelete: Cascade)
  interactions RecommendationInteraction[] // –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([type])
  @@index([targetUserId])
  @@index([isActive, validFrom, validUntil])
  @@map("smart_recommendations")
}

// –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
model RecommendationInteraction {
  id String @id @default(cuid())
  
  userId String
  recommendationId String
  
  // –¢–∏–ø –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
  interactionType RecommendationInteractionType
  
  // –ö–æ–Ω—Ç–µ–∫—Å—Ç
  sessionId String? // ID —Å–µ—Å—Å–∏–∏
  deviceType String? // –¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  userAgent String? // User agent
  
  // –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
  result Json? // –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–µ–∑–¥–∫–∞)
  satisfaction Int? // –û—Ü–µ–Ω–∫–∞ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ (1-5)
  feedback String? // –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
  
  // –°–≤—è–∑–∏
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  recommendation SmartRecommendation @relation(fields: [recommendationId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([recommendationId])
  @@index([interactionType])
  @@map("recommendation_interactions")
}

// –ü–æ–≥–æ–¥–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç AI
model WeatherRecommendation {
  id String @id @default(cuid())
  
  // –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
  weatherConditions Json // –î–µ—Ç–∞–ª—å–Ω—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  windSpeed Float? // –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞
  windDirection WindDirection?
  temperature Float? // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
  pressure Float? // –î–∞–≤–ª–µ–Ω–∏–µ
  humidity Float? // –í–ª–∞–∂–Ω–æ—Å—Ç—å
  cloudCover Float? // –û–±–ª–∞—á–Ω–æ—Å—Ç—å (0-1)
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  recommendedSpecies FishSpecies[] // –ö–∞–∫–∞—è —Ä—ã–±–∞ –ª—É—á—à–µ –∫–ª—é–µ—Ç
  recommendedTechniques FishingTechnique[] // –ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
  recommendedTimeOfDay Json? // –õ—É—á—à–µ–µ –≤—Ä–µ–º—è –¥–Ω—è [start_hour, end_hour]
  recommendedDepth Float? // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –≥–ª—É–±–∏–Ω–∞
  
  // AI –∞–Ω–∞–ª–∏–∑
  aiAnalysis String // –ê–Ω–∞–ª–∏–∑ –æ—Ç OpenAI
  aiReasoning String? // –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏
  confidenceLevel Float @default(0.5) // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å AI (0-1)
  
  // –õ–æ–∫–∞—Ü–∏—è
  location Json? // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
  regionId String? // ID —Ä–µ–≥–∏–æ–Ω–∞
  
  // –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å
  validFor DateTime // –î–æ –∫–∞–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  usageCount Int @default(0) // –°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å
  successRate Float @default(0.0) // –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã—Ö –∏—Å—Ö–æ–¥–æ–≤
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([validFor])
  @@index([location])
  @@map("weather_recommendations")
}

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
model CaptainRecommendation {
  id String @id @default(cuid())
  
  captainId String
  
  // –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  title String
  content String // –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  category CaptainRecommendationCategory
  
  // –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è
  targetSkillLevel SkillLevelRequired[] @default([])
  targetSpecies FishSpecies[] @default([]) // –î–ª—è –∫–∞–∫–∏—Ö –≤–∏–¥–æ–≤ —Ä—ã–±
  targetTechniques FishingTechnique[] @default([]) // –î–ª—è –∫–∞–∫–∏—Ö —Ç–µ—Ö–Ω–∏–∫
  
  // –ö–æ–Ω—Ç–µ–∫—Å—Ç
  seasonalContext Int[] @default([]) // –ú–µ—Å—è—Ü—ã (1-12)
  weatherContext Json? // –ü—Ä–∏ –∫–∞–∫–∏—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö
  locationContext Json? // –î–ª—è –∫–∞–∫–∏—Ö –º–µ—Å—Ç
  
  // –°–≤—è–∑–∞–Ω–Ω—ã–µ –ø–æ–µ–∑–¥–∫–∏
  relatedTripIds String[] @default([]) // ID —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫
  
  // –ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞
  isVerified Boolean @default(false) // –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π
  endorsements Int @default(0) // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–æ–±—Ä–µ–Ω–∏–π
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  views Int @default(0)
  helpfulVotes Int @default(0) // –ì–æ–ª–æ—Å–∞ "–ø–æ–ª–µ–∑–Ω–æ"
  notHelpfulVotes Int @default(0) // –ì–æ–ª–æ—Å–∞ "–Ω–µ –ø–æ–ª–µ–∑–Ω–æ"
  
  // –°—Ç–∞—Ç—É—Å
  isActive Boolean @default(true)
  moderationStatus ModerationStatus @default(PENDING)
  
  // –°–≤—è–∑–∏
  captain User @relation("CaptainRecommendationsAuthored", fields: [captainId], references: [id], onDelete: Cascade)
  votes CaptainRecommendationVote[] // –ì–æ–ª–æ—Å–∞ –∑–∞ —ç—Ç—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([captainId])
  @@index([category])
  @@index([isActive, moderationStatus])
  @@map("captain_recommendations")
}

// –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
model CaptainRecommendationVote {
  id String @id @default(cuid())
  
  userId String
  recommendationId String
  
  isHelpful Boolean // true = helpful, false = not helpful
  
  // –°–≤—è–∑–∏
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  recommendation CaptainRecommendation @relation(fields: [recommendationId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([userId, recommendationId])
  @@index([recommendationId])
  @@map("captain_recommendation_votes")
}

// –ü–æ—Ö–æ–∂–µ—Å—Ç—å –ø–æ–µ–∑–¥–æ–∫ –¥–ª—è collaborative filtering
model TripSimilarity {
  id String @id @default(cuid())
  
  tripId1 String
  tripId2 String
  
  // –ú–µ—Ç—Ä–∏–∫–∏ –ø–æ—Ö–æ–∂–µ—Å—Ç–∏
  overallSimilarity Float // –û–±—â–∞—è –ø–æ—Ö–æ–∂–µ—Å—Ç—å (0-1)
  
  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ—Ö–æ–∂–µ—Å—Ç–∏
  speciesSimilarity Float @default(0) // –ü–æ –≤–∏–¥–∞–º —Ä—ã–±
  techniqueSimilarity Float @default(0) // –ü–æ —Ç–µ—Ö–Ω–∏–∫–∞–º
  locationSimilarity Float @default(0) // –ü–æ –º–µ—Å—Ç–∞–º
  skillSimilarity Float @default(0) // –ü–æ —É—Ä–æ–≤–Ω—é –Ω–∞–≤—ã–∫–æ–≤
  seasonSimilarity Float @default(0) // –ü–æ —Å–µ–∑–æ–Ω—É/–≤—Ä–µ–º–µ–Ω–∏
  participantSimilarity Float @default(0) // –ü–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç–∞
  calculatedAt DateTime @default(now()) // –ö–æ–≥–¥–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ
  calculationMethod String // –ú–µ—Ç–æ–¥ —Ä–∞—Å—á–µ—Ç–∞
  isStale Boolean @default(false) // –£—Å—Ç–∞—Ä–µ–ª –ª–∏ —Ä–∞—Å—á–µ—Ç
  
  // –°–≤—è–∑–∏
  trip1 GroupTrip @relation("Trip1Similarities", fields: [tripId1], references: [id], onDelete: Cascade)
  trip2 GroupTrip @relation("Trip2Similarities", fields: [tripId2], references: [id], onDelete: Cascade)
  
  @@unique([tripId1, tripId2])
  @@index([overallSimilarity])
  @@index([calculatedAt])
  @@map("trip_similarities")
}

// ==== –ù–û–í–´–ï ENUMS ====

enum WindDirection {
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  CALM

  @@map("wind_direction")
}

enum DiaryMediaType {
  PHOTO
  VIDEO
  AUDIO

  @@map("diary_media_type")
}

enum RecommendationType {
  HISTORY_BASED // –ù–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ—Ö–æ–∂–∏—Ö –ø–æ–µ–∑–¥–æ–∫
  WEATHER_AI // –ü–æ–≥–æ–¥–Ω—ã–µ AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  SOCIAL_CAPTAIN // –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
  COLLABORATIVE // –ö–æ–ª–ª–∞–±–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
  CONTENT_BASED // –ù–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  HYBRID // –ì–∏–±—Ä–∏–¥–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  
  @@map("recommendation_type")
}

enum RecommendationInteractionType {
  VIEW // –ü—Ä–æ—Å–º–æ—Ç—Ä
  CLICK // –ö–ª–∏–∫ –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  LIKE // –õ–∞–π–∫
  DISLIKE // –î–∏–∑–ª–∞–π–∫
  SHARE // –ü–æ–¥–µ–ª–∏–ª—Å—è
  BOOK // –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—É—é –ø–æ–µ–∑–¥–∫—É
  DISMISS // –û—Ç–∫–ª–æ–Ω–∏–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
  REPORT // –ü–æ–∂–∞–ª–æ–≤–∞–ª—Å—è –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
  
  @@map("recommendation_interaction_type")
}

enum CaptainRecommendationCategory {
  TECHNIQUE_ADVICE // –°–æ–≤–µ—Ç—ã –ø–æ —Ç–µ—Ö–Ω–∏–∫–∞–º
  SPECIES_TARGETING // –°–æ–≤–µ—Ç—ã –ø–æ –≤–∏–¥–∞–º —Ä—ã–±
  LOCATION_TIPS // –°–æ–≤–µ—Ç—ã –ø–æ –º–µ—Å—Ç–∞–º
  EQUIPMENT_RECOMMENDATION // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
  WEATHER_STRATEGY // –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –ø–æ–≥–æ–¥—ã
  SAFETY_ADVICE // –°–æ–≤–µ—Ç—ã –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  BEGINNER_GUIDE // –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤
  SEASONAL_TIPS // –°–µ–∑–æ–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
  
  @@map("captain_recommendation_category")
}

enum ModerationStatus {
  PENDING // –û–∂–∏–¥–∞–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏
  APPROVED // –û–¥–æ–±—Ä–µ–Ω–æ
  REJECTED // –û—Ç–∫–ª–æ–Ω–µ–Ω–æ
  FLAGGED // –ü–æ–º–µ—á–µ–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  
  @@map("moderation_status")
}
