generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model EventSkillCriteria {
  id              String             @id @default(cuid())
  tripId          String
  criteriaType    SkillCriteriaType
  minimumValue    Int?
  requiredSkills  FishingTechnique[] @default([])
  requiredSpecies FishSpecies[]      @default([])
  description     String?
  isRequired      Boolean            @default(true)
  weight          Int                @default(1)
  createdAt       DateTime           @default(now())
  trip            GroupTrip          @relation(fields: [tripId], references: [id], onDelete: Cascade)

  @@map("event_skill_criteria")
}

model Achievement {
  id                String            @id @default(cuid())
  type              AchievementType   @unique
  name              String
  description       String
  icon              String
  category          BadgeCategory
  rarity            AchievementRarity @default(COMMON)
  maxProgress       Int               @default(1) // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  progressStep      Int               @default(1) // –®–∞–≥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
  lockedVisible     Boolean           @default(true) // –í–∏–¥–∏–º–æ –ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
  lockedDescVisible Boolean           @default(false) // –í–∏–¥–∏–º–æ –ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ
  isActive          Boolean           @default(true)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  
  // –°–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ UserAchievement
  userAchievements UserAchievement[]

  @@map("achievements")
}

model UserAchievement {
  id            String    @id @default(cuid())
  userId        String
  achievementId String
  progress      Int       @default(0) // –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
  unlocked      Boolean   @default(false) // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ª–∏
  unlockedAt    DateTime? // –ö–æ–≥–¥–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // –°–≤—è–∑–∏
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  achievement Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)

  @@unique([userId, achievementId])
  @@map("user_achievements")
}

model FisherBadge {
  id            String            @id @default(cuid())
  profileId     String
  name          String
  description   String?
  icon          String
  category      BadgeCategory     @default(ACHIEVEMENT)
  rarity        AchievementRarity @default(COMMON)
  requiredValue Int?
  earnedAt      DateTime          @default(now())
  fisherProfile FisherProfile     @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@map("fisher_badges")
}

model FisherProfile {
  id                    String             @id @default(cuid())
  userId                String             @unique
  experienceLevel       FishingExperience  @default(BEGINNER)
  specialties           FishingSpecialty[]
  bio                   String?
  rating                Decimal            @default(5.0) @db.Decimal(2, 1)
  completedTrips        Int                @default(0)
  createdTrips          Int                @default(0) // –°–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
  reliability           Decimal            @default(100.0) @db.Decimal(5, 2)
  totalReviews          Int                @default(0)
  positiveReviews       Int                @default(0) // –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
  level                 Int                @default(1) // –£—Ä–æ–≤–µ–Ω—å —Ä—ã–±–æ–ª–æ–≤–∞
  experiencePoints      Int                @default(0) // –û—á–∫–∏ –æ–ø—ã—Ç–∞
  activeDays            Int                @default(0) // –ê–∫—Ç–∏–≤–Ω—ã–µ –¥–Ω–∏
  activeDaysConsecutive Int                @default(0) // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–Ω–∏
  totalFishCaught       Int                @default(0) // –í—Å–µ–≥–æ –ø–æ–π–º–∞–Ω–æ —Ä—ã–±—ã (–∫–≥)
  uniqueSpecies         String[]           @default([]) // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–∏–¥—ã —Ä—ã–±
  favoriteLocation      String? // –õ—é–±–∏–º–æ–µ –º–µ—Å—Ç–æ
  isActive              Boolean            @default(true)
  lastActiveAt          DateTime           @default(now())
  country               String?
  city                  String?
  latitude              Decimal?           @db.Decimal(10, 8) // –î–ª—è –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  longitude             Decimal?           @db.Decimal(11, 8)
  secretCode            String? // –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞
  
  // üéØ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
  // Experience - –¥–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø—ã—Ç–∞
  experienceStats Json? // ExperienceStats: biggestCatch, techniques, seasonal activity
  
  // Social - —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏
  mentorRating      Decimal @default(5.0) @db.Decimal(2, 1) // –ö–∞–∫ —É—á–∏—Ç –Ω–æ–≤–∏—á–∫–æ–≤
  teamworkRating    Decimal @default(5.0) @db.Decimal(2, 1) // –†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ
  reliabilityRating Decimal @default(5.0) @db.Decimal(2, 1) // –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å
  respectRating     Decimal @default(5.0) @db.Decimal(2, 1) // –°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª
  reviewBreakdown   Json? // –î–µ—Ç–∞–ª—å–Ω–∞—è —Ä–∞–∑–±–∏–≤–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ –æ—Ü–µ–Ω–∫–∞–º
  
  // Certificates & Achievements - —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  certificates       Json? // Certificate[]: –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
  fishingPreferences Json? // FishingPreferences: –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Ä—ã–±–æ–ª–æ–≤–∞
  
  // Catch Records - –∑–∞–ø–∏—Å–∏ —É–ª–æ–≤–æ–≤
  totalWeightCaught   Decimal  @default(0.0) @db.Decimal(10, 2) // –û–±—â–∏–π –≤–µ—Å —É–ª–æ–≤–∞ (–∫–≥)
  averageTripDuration Decimal? @db.Decimal(5, 2) // –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏ (—á–∞—Å—ã)
  successRate         Decimal  @default(0.0) @db.Decimal(5, 2) // –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫
  catchRecords        Json? // CatchRecord[]: –∑–Ω–∞—á–∏–º—ã–µ —É–ª–æ–≤—ã
  
  // Technique Skills - –Ω–∞–≤—ã–∫–∏ —Ç–µ—Ö–Ω–∏–∫
  techniqueSkills Json? // TechniqueSkill[]: –æ–ø—ã—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–µ—Ö–Ω–∏–∫–∞–º–∏
  
  // Seasonal & Location Data  
  seasonalActivity  Json? // –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —Å–µ–∑–æ–Ω–∞–º
  favoriteLocations String[] @default([]) // –õ—é–±–∏–º—ã–µ –º–µ—Å—Ç–∞ —Ä—ã–±–∞–ª–∫–∏
  fishingZones      String[] @default([]) // –ó–æ–Ω—ã –≥–¥–µ —Ä—ã–±–∞—á–∏–ª

  // Privacy Controls for Rankings
  leaderboardVisibility    LeaderboardVisibility @default(PUBLIC) // –í–∏–¥–∏–º–æ—Å—Ç—å –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞—Ö
  profileVisibility        ProfileVisibility     @default(PUBLIC) // –í–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è
  showInCompetitions      Boolean               @default(true)   // –£—á–∞—Å—Ç–∏–µ –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö
  showRankingHistory      Boolean               @default(true)   // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–Ω–≥–æ–≤
  allowAchievementSharing Boolean               @default(true)   // –†–∞–∑—Ä–µ—à–∏—Ç—å –¥–µ–ª–∏—Ç—å—Å—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏
  anonymousMode           Boolean               @default(false)  // –ê–Ω–æ–Ω–∏–º–Ω—ã–π —Ä–µ–∂–∏–º
  visibleToFriendsOnly    Boolean               @default(false)  // –í–∏–¥–∏–º–æ—Å—Ç—å —Ç–æ–ª—å–∫–æ –¥—Ä—É–∑—å—è–º
  competitionOptOuts      String[]              @default([])     // –ò—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π –ø–æ ID

  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  badges    FisherBadge[]
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("fisher_profiles")
}

model GroupBooking {
  id              String        @id @default(cuid())
  tripId          String
  participants    Int           @default(1)
  totalPrice      Decimal       @db.Decimal(10, 2)
  contactName     String
  contactPhone    String
  contactEmail    String?
  status          BookingStatus @default(PENDING)
  paymentStatus   String        @default("pending")
  specialRequests String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  userId          String?
  trip            GroupTrip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
  user            User?         @relation(fields: [userId], references: [id])

  @@index([tripId])
  @@index([userId])
  @@map("group_bookings")
}

model GroupTrip {
  id                   String                  @id @default(cuid())
  date                 DateTime
  timeSlot             TimeSlot
  maxParticipants      Int                     @default(8)
  minRequired          Int                     @default(6)
  pricePerPerson       Decimal                 @default(95.00) @db.Decimal(10, 2)
  status               GroupTripStatus         @default(FORMING)
  description          String?
  meetingPoint         String?
  specialNotes         String?
  createdAt            DateTime                @default(now())
  updatedAt            DateTime                @updatedAt
  captainId            String?
  approvalMode         ParticipantApprovalMode @default(MANUAL)
  departureLocation    String?
  difficultyRating     Int                     @default(3)
  equipment            EquipmentType           @default(PROVIDED)
  estimatedFishCatch   Int?
  eventType            FishingEventType        @default(COMMERCIAL)
  fishingTechniques    FishingTechnique[]      @default([])
  fishingZones         String[]                @default([])
  maxGroupSize         Int?
  minimumWeatherScore  Int                     @default(6)
  recommendedFor       String[]                @default([])
  skillLevel           SkillLevelRequired      @default(ANY)
  socialMode           SocialEventMode         @default(COLLABORATIVE)
  targetSpecies        FishSpecies[]           @default([])
  weatherDependency    Boolean                 @default(true)
  skillCriteria        EventSkillCriteria[]
  bookings             GroupBooking[]
  captain              User?                   @relation(fields: [captainId], references: [id])
  participantApprovals ParticipantApproval[]
  reviews              Review[]
  payments             Payment[]
  
  // –£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  recommendations SmartRecommendation[] // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —ç—Ç–æ–π –ø–æ–µ–∑–¥–∫–∏
  similarityAsTrip1 TripSimilarity[] @relation("Trip1Similarities") // –°—Ö–æ–¥—Å—Ç–≤–∞ –≥–¥–µ —ç—Ç–∞ –ø–æ–µ–∑–¥–∫–∞ –ø–µ—Ä–≤–∞—è
  similarityAsTrip2 TripSimilarity[] @relation("Trip2Similarities") // –°—Ö–æ–¥—Å—Ç–≤–∞ –≥–¥–µ —ç—Ç–∞ –ø–æ–µ–∑–¥–∫–∞ –≤—Ç–æ—Ä–∞—è

  @@map("group_trips")
}

model ParticipantApproval {
  id             String         @id @default(cuid())
  tripId         String
  participantId  String
  message        String?
  status         ApprovalStatus @default(PENDING)
  approvedBy     String?
  rejectedReason String?
  processedAt    DateTime?
  appliedAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  participant    User           @relation(fields: [participantId], references: [id], onDelete: Cascade)
  trip           GroupTrip      @relation(fields: [tripId], references: [id], onDelete: Cascade)

  @@unique([tripId, participantId])
  @@map("participant_approvals")
}

model PrivateBooking {
  id              String        @id @default(cuid())
  date            DateTime
  timeSlot        TimeSlot
  participants    Int           @default(1)
  contactName     String
  contactPhone    String
  contactEmail    String?
  totalPrice      Decimal       @default(400.00) @db.Decimal(10, 2)
  status          BookingStatus @default(PENDING)
  specialRequests String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@map("private_bookings")
}

model Review {
  id         String    @id @default(cuid())
  tripId     String
  fromUserId String
  toUserId   String
  rating     Int
  comment    String?
  verified   Boolean   @default(false)
  helpful    Int       @default(0)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  fromUser   User      @relation("UserFromReviews", fields: [fromUserId], references: [id], onDelete: Cascade)
  toUser     User      @relation("UserToReviews", fields: [toUserId], references: [id], onDelete: Cascade)
  trip       GroupTrip @relation(fields: [tripId], references: [id], onDelete: Cascade)

  @@unique([tripId, fromUserId, toUserId])
  @@map("reviews")
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model SystemSetting {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@map("system_settings")
}

model User {
  id                   String                @id @default(cuid())
  name                 String?
  email                String                @unique
  emailVerified        DateTime?
  image                String?
  password             String?               // For credentials provider
  role                 UserRole              @default(PARTICIPANT)
  
  // Stripe integration
  stripeCustomerId     String?               @unique // Stripe Customer ID
  
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  accounts             Account[]
  fisherProfile        FisherProfile?
  groupBookings        GroupBooking[]
  captainedTrips       GroupTrip[]
  participantApprovals ParticipantApproval[]
  reviewsFrom          Review[]              @relation("UserFromReviews")
  reviewsTo            Review[]              @relation("UserToReviews")
  sessions             Session[]
  achievements         UserAchievement[] // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  
  // –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è
  subscriptions     Subscription[]
  payments          Payment[]
  paymentMethods    PaymentMethod[]    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø–ª–∞—Ç–µ–∂–∞
  courseEnrollments CourseEnrollment[]
  advertisements    Advertisement[]
  
  // –ú–æ—Ä—Å–∫–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
  catchRecords CatchRecord[] // –ó–∞–ø–∏—Å–∏ –æ–± —É–ª–æ–≤–∞—Ö

  // –¶–∏—Ñ—Ä–æ–≤–æ–π –¥–Ω–µ–≤–Ω–∏–∫ —Ä—ã–±–æ–ª–æ–≤–∞
  diaryEntries FishingDiaryEntry[] // –ó–∞–ø–∏—Å–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞

  // –£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  recommendationsReceived SmartRecommendation[] @relation("UserRecommendations") // –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  recommendationsFromCaptain SmartRecommendation[] @relation("CaptainRecommendations") // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–∫ –∫–∞–ø–∏—Ç–∞–Ω
  recommendationInteractions RecommendationInteraction[] // –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
  captainRecommendations CaptainRecommendation[] @relation("CaptainRecommendationsAuthored") // –ê–≤—Ç–æ—Ä—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–ø–∏—Ç–∞–Ω–∞
  captainRecommendationVotes CaptainRecommendationVote[] // –ì–æ–ª–æ—Å–∞ –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
  
  // –°–∏—Å—Ç–µ–º–∞ –≤—ã–ø–ª–∞—Ç
  payouts Payout[] @relation("CaptainPayouts") // –í—ã–ø–ª–∞—Ç—ã –∫–∞–ø–∏—Ç–∞–Ω—É
  payoutSchedule PayoutSchedule? @relation("CaptainPayoutSchedule") // –ì—Ä–∞—Ñ–∏–∫ –≤—ã–ø–ª–∞—Ç –∫–∞–ø–∏—Ç–∞–Ω–∞
  
  // –ù–∞–ª–æ–≥–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å
  taxDocuments TaxDocument[] @relation("CaptainTaxDocuments") // –ù–∞–ª–æ–≥–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∫–∞–ø–∏—Ç–∞–Ω–∞
  
  // Competition system
  createdCompetitions Competition[] @relation("CompetitionCreator") // –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è  
  competitionParticipations CompetitionParticipant[] @relation("CompetitionParticipants") // –£—á–∞—Å—Ç–∏–µ –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö
  competitionRankings CompetitionRanking[] @relation("CompetitionRankings") // –†–µ–π—Ç–∏–Ω–≥–∏ –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö
  
  // Seasonal competition system
  createdSeasons Season[] @relation("SeasonCreator") // –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–µ–∑–æ–Ω—ã
  seasonParticipations SeasonParticipant[] @relation("SeasonParticipants") // –£—á–∞—Å—Ç–∏–µ –≤ —Å–µ–∑–æ–Ω–Ω—ã—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö
  archivedSeasons SeasonArchive[] @relation("SeasonArchivers") // –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ–∑–æ–Ω—ã
  createdCompetitionEvents CompetitionEvent[] @relation("CompetitionEventCreator") // –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π
  createdSeasonAnnouncements SeasonAnnouncement[] @relation("SeasonAnnouncementCreator") // –°–æ–∑–¥–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–µ–∑–æ–Ω–æ–≤

  // Reward distribution system
  rewardDistributions RewardDistribution[] // –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã
  rewardInventory RewardInventory[] // –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –Ω–∞–≥—Ä–∞–¥
  wonRewardEvents RewardEvent[] @relation("RewardEventWinner") // –°–æ–±—ã—Ç–∏—è –≥–¥–µ –±—ã–ª –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_tokens")
}

enum ApprovalStatus {
  PENDING
  APPROVED
  REJECTED
}

enum BadgeCategory {
  ACHIEVEMENT
  MILESTONE
  SPECIAL
  SEASONAL
  FISH_SPECIES // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ –≤–∏–¥–∞–º —Ä—ã–±
  TECHNIQUE // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ —Ç–µ—Ö–Ω–∏–∫–∞–º
  SOCIAL // –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  GEOGRAPHY // –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
}

enum CompetitionCategory {
  MONTHLY_CHAMPIONS
  BIGGEST_CATCH
  MOST_ACTIVE
  BEST_MENTOR
  TECHNIQUE_MASTER
  SPECIES_SPECIALIST
  CONSISTENCY_KING
  ROOKIE_OF_MONTH
  VETERAN_ANGLER
  SOCIAL_BUTTERFLY
}

enum CompetitionType {
  SEASONAL
  MONTHLY
  WEEKLY
  ONGOING
  SPECIAL_EVENT
}

enum CompetitionStatus {
  ACTIVE
  COMPLETED
  UPCOMING
  CANCELLED
}

enum SeasonType {
  WEEKLY
  MONTHLY
  QUARTERLY
  YEARLY
  CUSTOM
}

enum SeasonStatus {
  UPCOMING
  ACTIVE
  COMPLETED
  CANCELLED
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum BookingType {
  PRIVATE
  GROUP
}

enum EquipmentType {
  PROVIDED
  BRING_OWN
  RENTAL_AVAILABLE
  PARTIALLY_PROVIDED
}

enum FishSpecies {
  SEABASS
  DORADO
  SEABREAM
  MACKEREL
  SARDINE
  TUNA
  ALBACORE
  BONITO
  SWORDFISH
  MAHI_MAHI
  BLUE_MARLIN
  WHITE_MARLIN
  SAILFISH
  GROUPER
  RED_SNAPPER
  JOHN_DORY
  SOLE
  TURBOT
  AMBERJACK
  CONGER_EEL
  OCTOPUS
  CUTTLEFISH
  MIXED_SPECIES
}

enum FishingEventType {
  COMMERCIAL
  COMMUNITY
  TOURNAMENT
  LEARNING
}

enum FishingExperience {
  BEGINNER
  INTERMEDIATE
  EXPERT
}

enum FishingSpecialty {
  DEEP_SEA
  SHORE
  FLY_FISHING
  SPORT_FISHING
}

enum FishingTechnique {
  TROLLING
  JIGGING
  BOTTOM_FISHING
  FLY_FISHING
  SPINNING
  SURFCASTING
  DRIFTING
  POPPING
  LIVE_BAIT
  DEEP_DROP
}

enum GroupTripStatus {
  FORMING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum ParticipantApprovalMode {
  AUTO
  MANUAL
  SKILL_BASED
  HYBRID
}

enum SkillCriteriaType {
  MINIMUM_EXPERIENCE
  COMPLETED_TRIPS
  SPECIES_EXPERIENCE
  TECHNIQUE_SKILL
  CERTIFICATION
  EQUIPMENT_OWNERSHIP
  RATING_THRESHOLD
  LANGUAGE_REQUIREMENT
}

enum SkillLevelRequired {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
  ANY
}

enum SocialEventMode {
  COMPETITIVE
  COLLABORATIVE
  EDUCATIONAL
  RECREATIONAL
  FAMILY
}

enum TimeSlot {
  MORNING_9AM
  AFTERNOON_2PM
}

enum UserRole {
  PARTICIPANT
  CAPTAIN
  ADMIN
}

enum AchievementRarity {
  COMMON // –û–±—ã—á–Ω–æ–µ (–ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å)
  UNCOMMON // –ù–µ–æ–±—ã—á–Ω–æ–µ
  RARE // –†–µ–¥–∫–æ–µ
  EPIC // –≠–ø–∏—á–µ—Å–∫–æ–µ
  LEGENDARY // –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ
  MYTHIC // –ú–∏—Ñ–∏—á–µ—Å–∫–æ–µ (—Å–∞–º–æ–µ —Ä–µ–¥–∫–æ–µ)
}

enum AchievementType {
  // –í–∏–¥—ã —Ä—ã–±
  TUNA_MASTER // –ú–∞—Å—Ç–µ—Ä —Ç—É–Ω—Ü–∞ (–ø–æ–π–º–∞–ª 10+ —Ç—É–Ω—Ü–æ–≤)
  DORADO_HUNTER // –û—Ö–æ—Ç–Ω–∏–∫ –Ω–∞ –¥–æ—Ä–∞–¥–æ (–ø–æ–π–º–∞–ª 5+ –¥–æ—Ä–∞–¥–æ)
  SEABASS_EXPERT // –≠–∫—Å–ø–µ—Ä—Ç –º–æ—Ä—Å–∫–æ–≥–æ –æ–∫—É–Ω—è
  MARLIN_LEGEND // –õ–µ–≥–µ–Ω–¥–∞ –º–∞—Ä–ª–∏–Ω–∞
  SPECIES_COLLECTOR // –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä –≤–∏–¥–æ–≤ (–ø–æ–π–º–∞–ª 5+ —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–æ–≤)
  
  // –¢–µ—Ö–Ω–∏–∫–∏
  TROLLING_EXPERT // –¢—Ä–æ–ª–ª–∏–Ω–≥-—ç–∫—Å–ø–µ—Ä—Ç (10+ –ø–æ–µ–∑–¥–æ–∫ —Å —Ç—Ä–æ–ª–ª–∏–Ω–≥–æ–º)
  JIGGING_MASTER // –î–∂–∏–≥-–º–∞—Å—Ç–µ—Ä
  BOTTOM_FISHING_PRO // –ü—Ä–æ—Ñ–∏ –¥–æ–Ω–Ω–æ–π –ª–æ–≤–ª–∏
  FLY_FISHING_ARTIST // –•—É–¥–æ–∂–Ω–∏–∫ –Ω–∞—Ö–ª—ã—Å—Ç–∞
  TECHNIQUE_VERSATILE // –£–Ω–∏–≤–µ—Ä—Å–∞–ª —Ç–µ—Ö–Ω–∏–∫ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª 4+ —Ç–µ—Ö–Ω–∏–∫–∏)
  
  // –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ
  NEWBIE_MENTOR // –ù–∞—Å—Ç–∞–≤–Ω–∏–∫ –Ω–æ–≤–∏—á–∫–æ–≤ (–ø–æ–º–æ–≥ 5+ –Ω–æ–≤–∏—á–∫–∞–º)
  GROUP_ORGANIZER // –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –≥—Ä—É–ø–ø (—Å–æ–∑–¥–∞–ª 10+ —Å–æ–±—ã—Ç–∏–π)
  COMMUNITY_BUILDER // –°—Ç—Ä–æ–∏—Ç–µ–ª—å —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
  REVIEW_MASTER // –ú–∞—Å—Ç–µ—Ä –æ—Ç–∑—ã–≤–æ–≤ (–æ—Å—Ç–∞–≤–∏–ª 20+ –æ—Ç–∑—ã–≤–æ–≤)
  RELIABLE_FISHER // –ù–∞–¥–µ–∂–Ω—ã–π —Ä—ã–±–æ–ª–æ–≤ (100% –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å)
  
  // –ì–µ–æ–≥—Ä–∞—Ñ–∏—è
  REEF_EXPLORER // –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å —Ä–∏—Ñ–æ–≤
  DEEP_SEA_ADVENTURER // –ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç
  COASTAL_SPECIALIST // –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø—Ä–∏–±—Ä–µ–∂–Ω–æ–π –ª–æ–≤–ª–∏
  WORLD_TRAVELER // –ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ (—Ä—ã–±–∞—á–∏–ª –≤ 3+ –º–µ—Å—Ç–∞—Ö)
  LOCAL_EXPERT // –ú–µ—Å—Ç–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç (50+ –ø–æ–µ–∑–¥–æ–∫ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ)
}

// ============================================================================
// –ú–û–ù–ï–¢–ò–ó–ê–¶–ò–Ø –ò –ë–ò–ó–ù–ï–°-–õ–û–ì–ò–ö–ê
// ============================================================================

// –ü–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–æ–≤ (Premium ‚Ç¨50/–º–µ—Å—è—Ü)
model Subscription {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Stripe –¥–∞–Ω–Ω—ã–µ
  stripeCustomerId     String? @unique
  stripeSubscriptionId String? @unique
  stripePriceId        String?
  
  // –ü–æ–¥–ø–∏—Å–∫–∞
  tier   SubscriptionTier   @default(FREE)
  status SubscriptionStatus @default(INACTIVE)
  
  // –î–∞—Ç—ã
  currentPeriodStart DateTime?
  currentPeriodEnd   DateTime?
  cancelAtPeriodEnd  Boolean   @default(false)
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // –°–≤—è–∑–∏
  payments Payment[]
  
  @@map("subscriptions")
}

enum SubscriptionTier {
  FREE
  CAPTAIN_PREMIUM // ‚Ç¨50/–º–µ—Å—è—Ü —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏
}

enum SubscriptionStatus {
  INACTIVE
  ACTIVE
  PAST_DUE
  CANCELED
  UNPAID
}

// –ü–ª–∞—Ç–µ–∂–∏ –∏ –∫–æ–º–∏—Å—Å–∏–∏
model Payment {
  id String @id @default(cuid())
  
  // –°–≤—è–∑–∏
  userId String?
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  subscriptionId String?
  subscription   Subscription? @relation(fields: [subscriptionId], references: [id], onDelete: SetNull)
  
  tripId String?
  trip   GroupTrip? @relation(fields: [tripId], references: [id], onDelete: SetNull)
  
  // Stripe –¥–∞–Ω–Ω—ã–µ
  stripePaymentId String? @unique
  stripeInvoiceId String? @unique
  
  // Payment method used for this payment
  paymentMethodId String?
  paymentMethod   PaymentMethod? @relation(fields: [paymentMethodId], references: [id], onDelete: SetNull)
  
  // –ü–ª–∞—Ç–µ–∂
  type     PaymentType
  amount   Int // –í —Ü–µ–Ω—Ç–∞—Ö
  currency String        @default("EUR")
  status   PaymentStatus @default(PENDING)
  
  // –ö–æ–º–∏—Å—Å–∏–∏ (–¥–ª—è —Ç—É—Ä–æ–≤)
  commissionAmount Int? // –ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –≤ —Ü–µ–Ω—Ç–∞—Ö
  commissionRate   Float? // –ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏ (15-20%)
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  description String?
  metadata    Json?
  
  // –î–∞—Ç—ã
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  paidAt    DateTime?
  
  // –°–≤—è–∑—å —Å –¥–∏—Å–ø—É—Ç–∞–º–∏
  disputes  PaymentDispute[]
  
  @@map("payments")
}

enum PaymentType {
  SUBSCRIPTION // –ü–æ–¥–ø–∏—Å–∫–∞ –∫–∞–ø–∏—Ç–∞–Ω–∞
  TOUR_BOOKING // –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–∞
  COURSE_PURCHASE // –ü–æ–∫—É–ø–∫–∞ –∫—É—Ä—Å–∞
  ADVERTISING // –†–µ–∫–ª–∞–º–∞ –≤ –ª–µ–Ω—Ç–µ
}

enum PaymentStatus {
  PENDING
  SUCCEEDED
  FAILED
  CANCELED
  REFUNDED
  REQUIRES_ACTION
}

// Webhook Event Logs –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –æ—Ç–ª–∞–¥–∫–∏
model WebhookEventLog {
  id            String   @id @default(cuid())
  eventType     String   // –¢–∏–ø Stripe —Å–æ–±—ã—Ç–∏—è
  eventId       String   @unique // ID —Å–æ–±—ã—Ç–∏—è –æ—Ç Stripe
  status        WebhookStatus @default(RECEIVED)
  attempts      Int      @default(0)
  maxAttempts   Int      @default(3)
  lastError     String?  // –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞
  processingTime Int?    // –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –º—Å
  metadata      Json?    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@map("webhook_event_logs")
}

enum WebhookStatus {
  RECEIVED
  PROCESSING
  SUCCESS
  FAILED
  RETRYING
}

// –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–∏—Å–ø—É—Ç–æ–≤ –ø–æ –ø–ª–∞—Ç–µ–∂–∞–º
model PaymentDispute {
  id               String   @id @default(cuid())
  stripeDisputeId  String   @unique
  chargeId         String   // Stripe Charge ID
  paymentId        String?  // –°–≤—è–∑—å —Å –Ω–∞—à–∏–º –ø–ª–∞—Ç–µ–∂–æ–º
  amount           Int      // –°—É–º–º–∞ –¥–∏—Å–ø—É—Ç–∞ –≤ —Ü–µ–Ω—Ç–∞—Ö
  reason           String   // –ü—Ä–∏—á–∏–Ω–∞ –¥–∏—Å–ø—É—Ç–∞
  status           String   // –°—Ç–∞—Ç—É—Å –¥–∏—Å–ø—É—Ç–∞ –≤ Stripe
  evidence         Json?    // –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
  metadata         Json?    // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ—Ç Stripe
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  // –°–≤—è–∑—å —Å –ø–ª–∞—Ç–µ–∂–æ–º (–µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω)
  payment          Payment? @relation(fields: [paymentId], references: [id], onDelete: SetNull)
  
  @@map("payment_disputes")
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø–ª–∞—Ç–µ–∂–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
model PaymentMethod {
  id                 String             @id @default(cuid())
  userId             String             // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  stripePaymentMethodId String          @unique // Stripe Payment Method ID
  
  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  type               PaymentMethodType  @default(CARD)
  isDefault          Boolean            @default(false)
  
  // Card –¥–∞–Ω–Ω—ã–µ (PCI compliant - —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –∏ –±—Ä–µ–Ω–¥)
  cardLast4          String?
  cardBrand          String?            // visa, mastercard, etc.
  cardExpMonth       Int?
  cardExpYear        Int?
  cardFingerprint    String?            // Unique identifier for the card
  
  // Billing address –¥–∞–Ω–Ω—ã–µ
  billingName        String?
  billingEmail       String?
  billingCountry     String?
  billingCity        String?
  billingPostalCode  String?
  
  // Metadata –∏ —Å—Ç–∞—Ç—É—Å
  status             PaymentMethodStatus @default(ACTIVE)
  metadata           Json?               // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç Stripe
  
  // Timestamps
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  lastUsedAt         DateTime?           // –ö–æ–≥–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è
  
  // –°–≤—è–∑–∏
  user               User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  payments           Payment[]           // –ü–ª–∞—Ç–µ–∂–∏ —Å–¥–µ–ª–∞–Ω–Ω—ã–µ —ç—Ç–∏–º –º–µ—Ç–æ–¥–æ–º
  payouts            Payout[]            // –í—ã–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ —ç—Ç–æ—Ç —Å–ø–æ—Å–æ–±
  payoutSchedules    PayoutSchedule[]    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞ –≤—ã–ø–ª–∞—Ç
  
  // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  @@index([userId])
  @@index([userId, isDefault])
  @@map("payment_methods")
}

enum PaymentMethodType {
  CARD
  SEPA_DEBIT
  IDEAL
  BANCONTACT
  GIROPAY
  SOFORT
  PAYPAL
}

enum PaymentMethodStatus {
  ACTIVE
  INACTIVE
  EXPIRED
  FAILED
}

// –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã –æ–Ω–ª–∞–π–Ω
model Course {
  id String @id @default(cuid())
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ
  title       String
  description String?
  category    CourseCategory
  
  // –¶–µ–Ω–∞
  price         Int // –í —Ü–µ–Ω—Ç–∞—Ö
  stripePriceId String? @unique
  
  // –ö–æ–Ω—Ç–µ–Ω—Ç
  content    Json? // –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∫—É—Ä—Å–∞
  duration   Int? // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –º–∏–Ω—É—Ç–∞—Ö
  difficulty CourseDifficulty @default(BEGINNER)
  
  // –°—Ç–∞—Ç—É—Å
  published Boolean @default(false)
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // –°–≤—è–∑–∏
  enrollments CourseEnrollment[]
  
  @@map("courses")
}

enum CourseCategory {
  BASIC_FISHING // –û—Å–Ω–æ–≤—ã —Ä—ã–±–∞–ª–∫–∏
  ADVANCED_TECHNIQUES // –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏  
  CAPTAIN_LICENSE // –õ–∏—Ü–µ–Ω–∑–∏—è –∫–∞–ø–∏—Ç–∞–Ω–∞
  SAFETY // –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
  EQUIPMENT // –°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
}

enum CourseDifficulty {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
}

// –ó–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å—ã
model CourseEnrollment {
  id String @id @default(cuid())
  
  // –°–≤—è–∑–∏
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
  
  // –ü—Ä–æ–≥—Ä–µ—Å—Å
  status   EnrollmentStatus @default(ENROLLED)
  progress Float            @default(0) // 0-100%
  score    Float? // –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
  
  // –î–∞—Ç—ã
  enrolledAt  DateTime  @default(now())
  startedAt   DateTime?
  completedAt DateTime?
  
  // –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
  certificateIssued Boolean @default(false)
  certificateUrl    String?
  
  @@unique([userId, courseId])
  @@map("course_enrollments")
}

enum EnrollmentStatus {
  ENROLLED
  IN_PROGRESS
  COMPLETED
  DROPPED
}

// –†–µ–∫–ª–∞–º–∞ –≤ –ª–µ–Ω—Ç–µ —Å–æ–±—ã—Ç–∏–π
model Advertisement {
  id String @id @default(cuid())
  
  // –†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—å
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // –ö–æ–Ω—Ç–µ–Ω—Ç —Ä–µ–∫–ª–∞–º—ã
  title       String
  description String?
  imageUrl    String?
  targetUrl   String?
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞–∑–∞
  type     AdType     @default(EQUIPMENT_PROMOTION)
  priority AdPriority @default(NORMAL)
  
  // –¢–∞—Ä–≥–µ—Ç–∏–Ω–≥
  targetAudience Json? // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥–∞
  locations      String[] // –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ–±–ª–∞—Å—Ç–∏
  
  // –ë—é–¥–∂–µ—Ç –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  budget       Int // –í —Ü–µ–Ω—Ç–∞—Ö
  costPerClick Int? // –¶–µ–Ω–∞ –∑–∞ –∫–ª–∏–∫ –≤ —Ü–µ–Ω—Ç–∞—Ö
  impressions  Int  @default(0)
  clicks       Int  @default(0)
  conversions  Int  @default(0)
  
  // –°—Ç–∞—Ç—É—Å –∏ –¥–∞—Ç—ã
  status    AdStatus  @default(DRAFT)
  startDate DateTime?
  endDate   DateTime?
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("advertisements")
}

enum AdType {
  EQUIPMENT_PROMOTION // –†–µ–∫–ª–∞–º–∞ —Å–Ω–∞—Å—Ç–µ–π/–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
  FEATURED_LISTING // –í—ã–¥–µ–ª–µ–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
  SPONSOR_MESSAGE // –°–ø–æ–Ω—Å–æ—Ä—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
}

enum AdPriority {
  LOW
  NORMAL
  HIGH
  PREMIUM
}

enum AdStatus {
  DRAFT
  PENDING_REVIEW
  ACTIVE
  PAUSED
  COMPLETED
  REJECTED
}

// ============================================================================
// –ú–û–†–°–ö–û–ô –ö–ê–õ–ï–ù–î–ê–†–¨ –ò –ê–°–¢–†–û–ù–û–ú–ò–ß–ï–°–ö–ò–ï –î–ê–ù–ù–´–ï
// ============================================================================

// –õ—É–Ω–Ω—ã–µ —Ñ–∞–∑—ã –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä—ã–±–∞–ª–∫—É
model LunarPhase {
  id               String         @id @default(cuid())
  date             DateTime // –î–∞—Ç–∞ —Ñ–∞–∑—ã
  type             LunarPhaseType
  angle            Float // –£–≥–æ–ª —Ñ–∞–∑—ã (0-360¬∞)
  illumination     Float // –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏ (0-100)
  distanceKm       Float // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –õ—É–Ω—ã –≤ –∫–º
  apparentDiameter Float // –í–∏–¥–∏–º—ã–π –¥–∏–∞–º–µ—Ç—Ä –≤ –≥—Ä–∞–¥—É—Å–∞—Ö
  
  // –ö–∏—Ç–∞–π—Å–∫–∏–π –ª—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
  chineseLunarData Json? // ChineseLunarDay –¥–∞–Ω–Ω—ã–µ
  
  // –í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä—ã–±–∞–ª–∫—É
  fishingInfluence Json? // LunarInfluence –¥–∞–Ω–Ω—ã–µ
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // –°–≤—è–∑–∏
  fishingConditions FishingConditions[]
  catchRecords      CatchRecord[]
  
  @@unique([date])
  @@map("lunar_phases")
}

enum LunarPhaseType {
  NEW_MOON
  WAXING_CRESCENT
  FIRST_QUARTER
  WAXING_GIBBOUS
  FULL_MOON
  WANING_GIBBOUS
  LAST_QUARTER
  WANING_CRESCENT
}

// –ü—Ä–æ–≥–Ω–æ–∑ —Ä—ã–±–∞–ª–∫–∏ –Ω–∞ –¥–µ–Ω—å
model FishingConditions {
  id       String   @id @default(cuid())
  date     DateTime // –î–∞—Ç–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞
  location Json // FishingLocation –¥–∞–Ω–Ω—ã–µ
  
  // –û–±—â–∏–µ —É—Å–ª–æ–≤–∏—è
  overallRating Int // –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–ª—ë–≤–∞ (1-10)
  lunarPhaseId  String
  lunarPhase    LunarPhase @relation(fields: [lunarPhaseId], references: [id])
  
  // –í–ª–∏—è–Ω–∏—è
  tidalInfluence Json? // TidalInfluence –¥–∞–Ω–Ω—ã–µ
  weatherImpact  Json? // –í–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ –∫–ª—ë–≤
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  bestHours       Json? // TimeWindow[] –ª—É—á—à–∏–µ —á–∞—Å—ã
  recommendations String[] // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  
  // –í–∏–¥—ã —Ä—ã–±
  speciesInfluence Json? // SpeciesFishingInfluence[] –¥–∞–Ω–Ω—ã–µ
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([date, location])
  @@map("fishing_conditions")
}

// –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –æ–± —É–ª–æ–≤–∞—Ö
model CatchRecord {
  id String @id @default(cuid())
  
  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  date     DateTime // –î–∞—Ç–∞ —É–ª–æ–≤–∞
  location Json // FishingLocation –¥–∞–Ω–Ω—ã–µ
  anglerId String? // –†—ã–±–æ–ª–æ–≤ (–º–æ–∂–µ—Ç –±—ã—Ç—å null –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
  angler   User?    @relation(fields: [anglerId], references: [id])
  
  // –õ—É–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
  lunarPhaseId String
  lunarPhase   LunarPhase @relation(fields: [lunarPhaseId], references: [id])
  
  // –£–ª–æ–≤
  catches     Json // CatchDetails[] –ø–æ–π–º–∞–Ω–Ω—ã–µ —Ä—ã–±—ã
  totalWeight Float // –û–±—â–∏–π –≤–µ—Å —É–ª–æ–≤–∞ –≤ –∫–≥
  totalCount  Int // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—ã–±—ã
  
  // –£—Å–ª–æ–≤–∏—è
  weatherData Json? // WeatherConditions –¥–∞–Ω–Ω—ã–µ
  tackleUsed  Json? // TackleUsed[] –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Å–Ω–∞—Å—Ç–∏
  techniques  FishingTechnique[] // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
  duration Int? // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä—ã–±–∞–ª–∫–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö
  success  Boolean @default(true) // –£—Å–ø–µ—à–Ω–∞—è –ª–∏ —Ä—ã–±–∞–ª–∫–∞
  notes    String? // –ó–∞–º–µ—Ç–∫–∏
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö
  verified   Boolean         @default(false) // –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  dataSource CatchDataSource @default(USER_REPORT) // –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
  confidence Float           @default(1.0) // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö (0-1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([date])
  @@index([lunarPhaseId])
  @@index([anglerId])
  @@map("catch_records")
}

enum CatchDataSource {
  USER_REPORT // –û—Ç—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  CAPTAIN_LOG // –ñ—É—Ä–Ω–∞–ª –∫–∞–ø–∏—Ç–∞–Ω–∞  
  AUTOMATED // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (—Å–µ–Ω—Å–æ—Ä—ã)
  HISTORICAL // –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∞—Ä—Ö–∏–≤—ã
  RESEARCH // –ù–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
}

// –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–æ–≤ —Ä—ã–± (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ enum)
model FishSpeciesDetail {
  id      String      @id @default(cuid())
  species FishSpecies @unique // –°–≤—è–∑—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º enum
  
  // –ù–∞–∑–≤–∞–Ω–∏—è
  nameRu         String
  nameEn         String
  scientificName String
  
  // –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
  seasonality      Json // SeasonalAvailability –¥–∞–Ω–Ω—ã–µ
  migrationPattern Json? // MigrationPattern –¥–∞–Ω–Ω—ã–µ
  depthPreferences Json // DepthRange –¥–∞–Ω–Ω—ã–µ
  temperatureRange Json // TemperatureRange –¥–∞–Ω–Ω—ã–µ
  
  // –†—ã–±–∞–ª–∫–∞
  preferredTechniques FishingTechnique[]
  bestLunarPhases     LunarPhaseType[]
  difficulty          Int                @default(5) // –°–ª–æ–∂–Ω–æ—Å—Ç—å –ª–æ–≤–ª–∏ (1-10)
  
  // –ë–∏–æ–ª–æ–≥–∏—è
  averageSize    Json? // –†–∞–∑–º–µ—Ä—ã {min, max, average} –≤ —Å–º
  averageWeight  Json? // –í–µ—Å {min, max, average} –≤ –∫–≥
  spawningPeriod Json? // –ü–µ—Ä–∏–æ–¥ –Ω–µ—Ä–µ—Å—Ç–∞
  feedingHabits  Json? // –ü–∏—Ç–∞–Ω–∏–µ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
  
  // –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å
  marketValue Float? // –†—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–≥
  gameValue   Int? // –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å (1-10)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("fish_species_details")
}

// –ú–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
model MigrationEvent {
  id      String      @id @default(cuid())
  species FishSpecies // –í–∏–¥ —Ä—ã–±—ã
  
  // –°–æ–±—ã—Ç–∏–µ
  eventType   MigrationEventType
  date        DateTime // –î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è
  probability Float // –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è (0-1)
  
  // –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏
  location  Json // –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
  direction String? // –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏
  depth     Float? // –ì–ª—É–±–∏–Ω–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è
  
  // –£—Å–ª–æ–≤–∏—è
  waterTemperature Float? // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã
  currentStrength  Float? // –°–∏–ª–∞ —Ç–µ—á–µ–Ω–∏—è
  
  // –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
  dataSource String // –ò—Å—Ç–æ—á–Ω–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  confidence Float  @default(0.8) // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ–≥–Ω–æ–∑–µ

  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([species])
  @@index([date])
  @@map("migration_events")
}

enum MigrationEventType {
  ARRIVAL // –ü—Ä–∏–±—ã—Ç–∏–µ –≤ —Ä–µ–≥–∏–æ–Ω
  PEAK // –ü–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  DEPARTURE // –û—Ç–±—ã—Ç–∏–µ –∏–∑ —Ä–µ–≥–∏–æ–Ω–∞
}

// –õ—É—á—à–∏–µ –º–µ—Å—Ç–∞ –¥–ª—è —Ä—ã–±–∞–ª–∫–∏
model FishingHotspot {
  id String @id @default(cuid())
  
  // –õ–æ–∫–∞—Ü–∏—è
  name              String
  latitude          Decimal @db.Decimal(10, 8)
  longitude         Decimal @db.Decimal(11, 8)
  depth             Float? // –°—Ä–µ–¥–Ω—è—è –≥–ª—É–±–∏–Ω–∞
  distanceFromShore Float? // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –±–µ—Ä–µ–≥–∞ –≤ –∫–º
  
  // –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
  bottomType    String? // –¢–∏–ø –¥–Ω–∞
  structureType String? // –¢–∏–ø —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (—Ä–∏—Ñ, –∑–∞—Ç–æ–Ω—É–≤—à–∏–π –∫–æ—Ä–∞–±–ª—å –∏ —Ç.–¥.)
  targetSpecies FishSpecies[] // –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥—ã —Ä—ã–±
  
  // –£—Å–ª–æ–≤–∏—è
  bestSeasons     Json? // –õ—É—á—à–∏–µ —Å–µ–∑–æ–Ω—ã
  bestTides       Json? // –õ—É—á—à–∏–µ –ø—Ä–∏–ª–∏–≤—ã
  bestWeather     Json? // –õ—É—á—à–∏–µ –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
  bestLunarPhases LunarPhaseType[] // –õ—É—á—à–∏–µ –ª—É–Ω–Ω—ã–µ —Ñ–∞–∑—ã
  
  // –†–µ–π—Ç–∏–Ω–≥
  rating        Float @default(5.0) // –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ (1-10)
  difficulty    Int   @default(5) // –°–ª–æ–∂–Ω–æ—Å—Ç—å (1-10)
  accessibility Int   @default(5) // –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å (1-10)
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  totalVisits  Int   @default(0)
  successRate  Float @default(0.5) // –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã—Ö —Ä—ã–±–∞–ª–æ–∫
  averageCatch Float @default(0.0) // –°—Ä–µ–¥–Ω–∏–π —É–ª–æ–≤ –≤ –∫–≥
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
  description String?
  tips        String[] // –°–æ–≤–µ—Ç—ã –¥–ª—è —Ä—ã–±–∞–ª–∫–∏
  hazards     String[] // –û–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–∏—è
  
  // –î–∞–Ω–Ω—ã–µ
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([latitude, longitude])
  @@map("fishing_hotspots")
}

// Competition and Leaderboard System Models

// Seasonal competitions and time-based tracking
model Season {
  id          String       @id @default(cuid())
  name        String       @unique
  displayName String
  description String?
  type        SeasonType
  status      SeasonStatus @default(UPCOMING)
  
  // Time period
  startDate             DateTime
  endDate               DateTime
  registrationStartDate DateTime?
  registrationEndDate   DateTime?
  
  // Configuration
  maxParticipants Int?
  minParticipants Int?     @default(1)
  isPublic        Boolean  @default(true)
  autoEnroll      Boolean  @default(false)
  allowLateJoin   Boolean  @default(true)
  
  // Categories included in this season
  includedCategories String[] @default([])
  excludedCategories String[] @default([])
  
  // Rewards and recognition
  rewards           Json?
  trophyTiers       Json?
  specialRecognition Json?
  
  // Metadata
  metadata  Json?
  createdBy String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  creator       User?                  @relation("SeasonCreator", fields: [createdBy], references: [id])
  participants  SeasonParticipant[]
  archives      SeasonArchive[]
  events        CompetitionEvent[]
  announcements SeasonAnnouncement[]
  seasonRewards Reward[]               // –ù–∞–≥—Ä–∞–¥—ã —ç—Ç–æ–≥–æ —Å–µ–∑–æ–Ω–∞
  rewardCalendars RewardCalendar[]     // –ö–∞–ª–µ–Ω–¥–∞—Ä–∏ –Ω–∞–≥—Ä–∞–¥
  
  @@index([type, status, startDate, endDate])
  @@index([status])
  @@map("seasons")
}

// Season participants with detailed tracking
model SeasonParticipant {
  id       String @id @default(cuid())
  seasonId String
  userId   String
  
  // Participation details
  enrolledAt   DateTime @default(now())
  isActive     Boolean  @default(true)
  autoEnrolled Boolean  @default(false)
  
  // Season performance across all categories
  totalScore    Decimal @default(0) @db.Decimal(12, 2)
  overallRank   Int?
  categoryRanks Json    @default("{}")
  categoryScores Json   @default("{}")
  
  // Progress tracking
  weeklyProgress  Json   @default("[]")
  monthlyProgress Json   @default("[]")
  achievementsEarned String[] @default([])
  badgesEarned       String[] @default([])
  
  // Historical data
  progressHistory Json @default("[]")
  rankHistory     Json @default("[]")
  
  // Season-specific stats
  seasonStats   Json?
  personalBests Json?
  
  // Metadata
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  season Season @relation(fields: [seasonId], references: [id], onDelete: Cascade)
  user   User   @relation("SeasonParticipants", fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([seasonId, userId])
  @@index([seasonId, overallRank])
  @@map("season_participants")
}

// Historical season data archive
model SeasonArchive {
  id         String     @id @default(cuid())
  seasonId   String
  seasonName String
  seasonType SeasonType
  startDate  DateTime
  endDate    DateTime
  
  // Final results
  finalRankings    Json
  categoryWinners  Json?
  specialAwards    Json?
  participantCount Int   @default(0)
  
  // Season statistics
  seasonStats Json?
  recordsSet  Json?
  milestones  Json?
  
  // Rewards distributed
  rewardsDistributed Json?
  ceremonyData       Json?
  
  // Archive metadata
  archivedAt     DateTime @default(now())
  archivedBy     String?
  archiveVersion Int      @default(1)
  metadata       Json?
  
  // Relations
  season   Season @relation(fields: [seasonId], references: [id], onDelete: Cascade)
  archiver User?  @relation("SeasonArchivers", fields: [archivedBy], references: [id])
  
  @@index([seasonType, startDate, endDate])
  @@map("season_archives")
}

// Scheduled competition events within seasons
model CompetitionEvent {
  id          String              @id @default(cuid())
  seasonId    String?
  title       String
  description String?
  eventType   CompetitionType     @default(SPECIAL_EVENT)
  category    CompetitionCategory
  
  // Scheduling
  scheduledStart DateTime
  scheduledEnd   DateTime
  actualStart    DateTime?
  actualEnd      DateTime?
  status         CompetitionStatus @default(UPCOMING)
  
  // Event configuration
  maxParticipants   Int?
  entryRequirements Json? // Level, achievements, etc required to join
  scoringRules      Json
  rewards           Json?
  
  // Notifications and announcements
  announcementSent Boolean @default(false)
  reminderSent     Boolean @default(false)
  resultsSent      Boolean @default(false)
  
  // Results
  winners    Json?
  results    Json?
  highlights Json?
  
  // Metadata
  createdBy String?
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  season        Season?              @relation(fields: [seasonId], references: [id])
  creator       User?                @relation("CompetitionEventCreator", fields: [createdBy], references: [id])
  announcements SeasonAnnouncement[]
  
  @@index([seasonId, scheduledStart, scheduledEnd])
  @@index([category, status])
  @@map("competition_events")
}

// Season and event announcements
model SeasonAnnouncement {
  id        String  @id @default(cuid())
  seasonId  String?
  eventId   String?
  title     String
  content   String
  type      String // 'season_start', 'event_reminder', 'results', 'awards', 'general'
  priority  String  @default("normal") // 'low', 'normal', 'high', 'urgent'
  
  // Targeting
  targetAudience String @default("all") // 'all', 'participants', 'category', 'level_range'
  targetFilters  Json?
  
  // Scheduling
  scheduledFor DateTime?
  sentAt       DateTime?
  status       String    @default("draft") // 'draft', 'scheduled', 'sent', 'cancelled'
  
  // Engagement
  recipientCount Int?     @default(0)
  openRate       Decimal? @default(0) @db.Decimal(5, 2)
  clickRate      Decimal? @default(0) @db.Decimal(5, 2)
  
  // Metadata
  createdBy String?
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  season  Season?          @relation(fields: [seasonId], references: [id], onDelete: Cascade)
  event   CompetitionEvent? @relation(fields: [eventId], references: [id], onDelete: Cascade)
  creator User?            @relation("SeasonAnnouncementCreator", fields: [createdBy], references: [id])
  
  @@index([scheduledFor, status])
  @@index([seasonId, type])
  @@map("season_announcements")
}

// Competition categories for leaderboards
model LeaderboardCategory {
  id          String @id @default(cuid())
  name        String @unique
  displayName String
  category    CompetitionCategory
  description String?
  
  // Configuration
  isActive        Boolean @default(true)
  sortOrder       Int     @default(0)
  icon            String?
  color           String?
  
  // Scoring rules
  scoringAlgorithm Json
  updateFrequency  String @default("daily") // 'realtime', 'hourly', 'daily', 'weekly'
  
  // Visibility
  isPublic      Boolean @default(true)
  requiredLevel Int     @default(1)
  
  // Metadata
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  
  @@index([isActive, sortOrder])
  @@map("leaderboard_categories")
}

// Competitions and tournaments
model Competition {
  id          String            @id @default(cuid())
  title       String
  description String?
  category    CompetitionCategory
  type        CompetitionType   @default(MONTHLY)
  status      CompetitionStatus @default(UPCOMING)
  
  // Time period
  startDate DateTime
  endDate   DateTime
  
  // Rules and configuration
  rules            Json?
  scoringAlgorithm Json
  maxParticipants  Int?
  minParticipants  Int? @default(1)
  
  // Rewards
  rewards    Json?
  prizeTiers Json?
  
  // Visibility and privacy
  isPublic       Boolean @default(true)
  allowAnonymous Boolean @default(false)
  
  // Metadata
  metadata  Json?
  createdBy String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  creator      User?                     @relation("CompetitionCreator", fields: [createdBy], references: [id])
  participants CompetitionParticipant[]
  rankings     CompetitionRanking[]
  
  @@index([category, type])
  @@index([status, startDate, endDate])
  @@map("competitions")
}

// Competition participants
model CompetitionParticipant {
  id            String @id @default(cuid())
  competitionId String
  userId        String
  
  // Participation details
  joinedAt    DateTime @default(now())
  isActive    Boolean  @default(true)
  isAnonymous Boolean  @default(false)
  
  // Current standings
  currentScore Decimal  @default(0) @db.Decimal(10, 2)
  currentRank  Int?
  lastUpdated  DateTime @default(now())
  
  // Historical data
  scoreHistory Json @default("[]")
  rankHistory  Json @default("[]")
  
  // Metadata
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  competition Competition @relation(fields: [competitionId], references: [id], onDelete: Cascade)
  user        User        @relation("CompetitionParticipants", fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([competitionId, userId])
  @@index([competitionId, currentRank])
  @@map("competition_participants")
}

// Competition rankings snapshots
model CompetitionRanking {
  id            String @id @default(cuid())
  competitionId String
  userId        String
  rank          Int
  score         Decimal @db.Decimal(10, 2)
  details       Json? // Category-specific details
  
  // Snapshot info
  snapshotDate     DateTime @default(now())
  isCurrentRanking Boolean  @default(true)
  
  // Metadata
  metadata  Json?
  createdAt DateTime @default(now())
  
  // Relations
  competition Competition @relation(fields: [competitionId], references: [id], onDelete: Cascade)
  user        User        @relation("CompetitionRankings", fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([competitionId, isCurrentRanking])
  @@index([competitionId, rank])
  @@map("competition_rankings")
}

// –ü—Ä–∏–ª–∏–≤—ã –∏ –æ—Ç–ª–∏–≤—ã
model TidalData {
  id String @id @default(cuid())
  
  // –í—Ä–µ–º—è –∏ –º–µ—Å—Ç–æ
  datetime DateTime // –í—Ä–µ–º—è –ø—Ä–∏–ª–∏–≤–∞/–æ—Ç–ª–∏–≤–∞
  location Json // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
  
  // –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–ª–∏–≤–µ
  type     TideType // –ü—Ä–∏–ª–∏–≤ –∏–ª–∏ –æ—Ç–ª–∏–≤
  height   Float // –í—ã—Å–æ—Ç–∞ –≤ –º–µ—Ç—Ä–∞—Ö
  strength Int // –°–∏–ª–∞ (1-10)
  
  // –í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä—ã–±–∞–ª–∫—É
  fishingImpact FishingImpact // –í–ª–∏—è–Ω–∏–µ –Ω–∞ –∫–ª—ë–≤
  bestSpecies   FishSpecies[] // –í–∏–¥—ã, –Ω–∞–∏–±–æ–ª–µ–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –≤ —ç—Ç–æ –≤—Ä–µ–º—è
  
  createdAt DateTime @default(now())
  
  @@index([datetime])
  @@index([location])
  @@map("tidal_data")
}

enum TideType {
  HIGH_TIDE // –ü—Ä–∏–ª–∏–≤
  LOW_TIDE // –û—Ç–ª–∏–≤
}

enum FishingImpact {
  VERY_NEGATIVE
  NEGATIVE
  NEUTRAL
  POSITIVE
  VERY_POSITIVE
}

// –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ª—É–Ω–Ω—ã–º —Ñ–∞–∑–∞–º
model LunarFishingStats {
  id String @id @default(cuid())
  
  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
  lunarPhase LunarPhaseType
  species    FishSpecies
  location   Json // –†–µ–≥–∏–æ–Ω/–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
  season     Int // –°–µ–∑–æ–Ω (1-4)
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  totalObservations Int // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π
  averageSuccess    Float // –°—Ä–µ–¥–Ω—è—è —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
  averageCatch      Float // –°—Ä–µ–¥–Ω–∏–π —É–ª–æ–≤ –≤ –∫–≥
  bestHours         Json? // –õ—É—á—à–∏–µ —á–∞—Å—ã –¥–Ω—è
  
  // –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è
  correlationStrength Float // –°–∏–ª–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å –ª—É–Ω–Ω–æ–π —Ñ–∞–∑–æ–π (-1 to 1)
  confidence          Float // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
  lastCalculated DateTime // –ö–æ–≥–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–ª–æ—Å—å
  dataPoints     Int // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([lunarPhase, species, location, season])
  @@map("lunar_fishing_stats")
}

// ==== –¶–ò–§–†–û–í–û–ô –î–ù–ï–í–ù–ò–ö –†–´–ë–û–õ–û–í–ê ====

// –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–ø–∏—Å—å –¥–Ω–µ–≤–Ω–∏–∫–∞ —Ä—ã–±–æ–ª–æ–≤–∞
model FishingDiaryEntry {
  id String @id @default(cuid())

  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  userId      String
  title       String // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–ø–∏—Å–∏
  description String? // –û–ø–∏—Å–∞–Ω–∏–µ —Ä—ã–±–∞–ª–∫–∏
  date        DateTime // –î–∞—Ç–∞ —Ä—ã–±–∞–ª–∫–∏

  // –õ–æ–∫–∞—Ü–∏—è —Å GPS
  locationName String? // –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞
  latitude     Float? // GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
  longitude    Float?
  accuracy     Float? // –¢–æ—á–Ω–æ—Å—Ç—å GPS (–≤ –º–µ—Ç—Ä–∞—Ö)

  // –î–µ—Ç–∞–ª–∏ —Ä—ã–±–∞–ª–∫–∏  
  weather       Json? // –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
  temperature   Float? // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã/–≤–æ–∑–¥—É—Ö–∞
  windSpeed     Float? // –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞
  windDirection WindDirection? // –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞

  // –£–ª–æ–≤
  fishCaught  DiaryFishCatch[] // –ü–æ–π–º–∞–Ω–Ω–∞—è —Ä—ã–±–∞
  totalWeight Float? // –û–±—â–∏–π –≤–µ—Å —É–ª–æ–≤–∞
  totalCount  Int              @default(0) // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—ã–±—ã

  // –°–Ω–∞—Å—Ç–∏ –∏ –ø—Ä–∏–º–∞–Ω–∫–∏
  rodType   String? // –¢–∏–ø —É–¥–∏–ª–∏—â–∞
  reelType  String? // –¢–∏–ø –∫–∞—Ç—É—à–∫–∏
  lineType  String? // –¢–∏–ø –ª–µ—Å–∫–∏
  baitUsed  String[] @default([]) // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–∞–Ω–∫–∏
  lureColor String? // –¶–≤–µ—Ç –ø—Ä–∏–º–∞–Ω–∫–∏

  // –ú–µ–¥–∏–∞
  media DiaryMedia[] // –§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ

  // –ú–µ—Ç–∫–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  tags      String[] @default([]) // –¢–µ–≥–∏
  isPrivate Boolean  @default(false) // –ü—Ä–∏–≤–∞—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å
  rating    Int? // –õ–∏—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ (1-5)

  // –°–≤—è–∑–∏
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, date])
  @@index([latitude, longitude])
  @@map("fishing_diary_entries")
}

// –ü–æ–π–º–∞–Ω–Ω–∞—è —Ä—ã–±–∞ –≤ –∑–∞–ø–∏—Å–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞
model DiaryFishCatch {
  id      String @id @default(cuid())
  entryId String

  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä—ã–±–µ
  species  FishSpecies // –í–∏–¥ —Ä—ã–±—ã
  weight   Float? // –í–µ—Å –≤ –∫–≥
  length   Float? // –î–ª–∏–Ω–∞ –≤ —Å–º
  quantity Int         @default(1) // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ

  // –î–µ—Ç–∞–ª–∏ –ø–æ–∏–º–∫–∏
  timeOfCatch DateTime? // –¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–∏–º–∫–∏
  depth       Float? // –ì–ª—É–±–∏–Ω–∞ –ª–æ–≤–ª–∏
  method      FishingTechnique? // –°–ø–æ—Å–æ–± –ª–æ–≤–ª–∏
  baitUsed    String? // –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –ø—Ä–∏–º–∞–Ω–∫–∞

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
  wasReleased Boolean @default(false) // –ë—ã–ª–∞ –ª–∏ –æ—Ç–ø—É—â–µ–Ω–∞
  notes       String? // –ó–∞–º–µ—Ç–∫–∏ –æ –ø–æ–∏–º–∫–µ

  // –°–≤—è–∑–∏
  entry FishingDiaryEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([entryId])
  @@index([species])
  @@map("diary_fish_catches")
}

// –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã –¥–Ω–µ–≤–Ω–∏–∫–∞ (—Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ)
model DiaryMedia {
  id      String @id @default(cuid())
  entryId String

  // –§–∞–π–ª
  fileName  String // –ò–º—è —Ñ–∞–π–ª–∞
  fileUrl   String // URL —Ñ–∞–π–ª–∞
  fileSize  Int? // –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö
  mimeType  String // MIME —Ç–∏–ø —Ñ–∞–π–ª–∞
  mediaType DiaryMediaType // –¢–∏–ø –º–µ–¥–∏–∞

  // EXIF –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (–∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ç–æ)
  exifData     Json? // –í—Å–µ EXIF –¥–∞–Ω–Ω—ã–µ
  gpsLatitude  Float? // GPS –∏–∑ EXIF
  gpsLongitude Float? // GPS –∏–∑ EXIF
  captureTime  DateTime? // –í—Ä–µ–º—è —Å—ä–µ–º–∫–∏ –∏–∑ EXIF
  cameraModel  String? // –ú–æ–¥–µ–ª—å –∫–∞–º–µ—Ä—ã
  lensModel    String? // –ú–æ–¥–µ–ª—å –æ–±—ä–µ–∫—Ç–∏–≤–∞

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  title       String? // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–¥–∏–∞
  description String? // –û–ø–∏—Å–∞–Ω–∏–µ
  isPublic    Boolean @default(true) // –ü—É–±–ª–∏—á–Ω–æ–µ –ª–∏ —Ñ–æ—Ç–æ

  // –°–≤—è–∑–∏
  entry FishingDiaryEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([entryId])
  @@index([mediaType])
  @@map("diary_media")
}

// ==== –£–ú–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ====

// –û—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–º–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
model SmartRecommendation {
  id String @id @default(cuid())

  // –¢–∏–ø —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  type RecommendationType // –¢–∏–ø: –∏—Å—Ç–æ—Ä–∏—è, –ø–æ–≥–æ–¥–∞, —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è

  // –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è
  targetUserId String? // –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  targetUserRole UserRole[] @default([]) // –ò–ª–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã —Ä–æ–ª–µ–π
  skillLevel SkillLevelRequired[] @default([]) // –£—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–æ–≤

  // –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  title String // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  description String // –û–ø–∏—Å–∞–Ω–∏–µ
  aiGeneratedText String? // –¢–µ–∫—Å—Ç, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI
  
  // –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  triggerContext Json? // –ö–æ–Ω—Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
  weatherConditions Json? // –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
  
  // –°–≤—è–∑–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
  recommendedTripId String? // ID —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–π –ø–æ–µ–∑–¥–∫–∏
  recommendedTrip GroupTrip? @relation(fields: [recommendedTripId], references: [id], onDelete: Cascade)
  
  recommendedSpecies FishSpecies[] @default([]) // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –≤–∏–¥—ã —Ä—ã–±
  recommendedTechniques FishingTechnique[] @default([]) // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏
  recommendedLocation Json? // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç–∞
  
  // –ö–∞–ø–∏—Ç–∞–Ω, –¥–∞–≤—à–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é (–¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö)
  fromCaptainId String?
  fromCaptain User? @relation("CaptainRecommendations", fields: [fromCaptainId], references: [id], onDelete: SetNull)

  // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
  priority Int @default(5) // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç (1-10)
  relevanceScore Float @default(0.5) // –û—Ü–µ–Ω–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ AI (0-1)
  confidenceScore Float @default(0.5) // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (0-1)

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  impressions Int @default(0) // –ü–æ–∫–∞–∑—ã
  clicks Int @default(0) // –ö–ª–∏–∫–∏
  conversions Int @default(0) // –ö–æ–Ω–≤–µ—Ä—Å–∏–∏ (–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
  
  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
  validFrom DateTime @default(now()) // –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ —Å
  validUntil DateTime? // –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –¥–æ
  
  // –°—Ç–∞—Ç—É—Å –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  isActive Boolean @default(true)
  metadata Json? // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  
  // –°–≤—è–∑–∏
  targetUser User? @relation("UserRecommendations", fields: [targetUserId], references: [id], onDelete: Cascade)
  interactions RecommendationInteraction[] // –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([type])
  @@index([targetUserId])
  @@index([isActive, validFrom, validUntil])
  @@map("smart_recommendations")
}

// –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
model RecommendationInteraction {
  id String @id @default(cuid())
  
  userId String
  recommendationId String
  
  // –¢–∏–ø –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
  interactionType RecommendationInteractionType
  
  // –ö–æ–Ω—Ç–µ–∫—Å—Ç
  sessionId String? // ID —Å–µ—Å—Å–∏–∏
  deviceType String? // –¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  userAgent String? // User agent
  
  // –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
  result Json? // –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–µ–∑–¥–∫–∞)
  satisfaction Int? // –û—Ü–µ–Ω–∫–∞ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ (1-5)
  feedback String? // –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
  
  // –°–≤—è–∑–∏
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  recommendation SmartRecommendation @relation(fields: [recommendationId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([recommendationId])
  @@index([interactionType])
  @@map("recommendation_interactions")
}

// –ü–æ–≥–æ–¥–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç AI
model WeatherRecommendation {
  id String @id @default(cuid())
  
  // –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
  weatherConditions Json // –î–µ—Ç–∞–ª—å–Ω—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  windSpeed Float? // –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞
  windDirection WindDirection?
  temperature Float? // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
  pressure Float? // –î–∞–≤–ª–µ–Ω–∏–µ
  humidity Float? // –í–ª–∞–∂–Ω–æ—Å—Ç—å
  cloudCover Float? // –û–±–ª–∞—á–Ω–æ—Å—Ç—å (0-1)
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  recommendedSpecies FishSpecies[] // –ö–∞–∫–∞—è —Ä—ã–±–∞ –ª—É—á—à–µ –∫–ª—é–µ—Ç
  recommendedTechniques FishingTechnique[] // –ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
  recommendedTimeOfDay Json? // –õ—É—á—à–µ–µ –≤—Ä–µ–º—è –¥–Ω—è [start_hour, end_hour]
  recommendedDepth Float? // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –≥–ª—É–±–∏–Ω–∞
  
  // AI –∞–Ω–∞–ª–∏–∑
  aiAnalysis String // –ê–Ω–∞–ª–∏–∑ –æ—Ç OpenAI
  aiReasoning String? // –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏
  confidenceLevel Float @default(0.5) // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å AI (0-1)
  
  // –õ–æ–∫–∞—Ü–∏—è
  location Json? // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
  regionId String? // ID —Ä–µ–≥–∏–æ–Ω–∞
  
  // –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å
  validFor DateTime // –î–æ –∫–∞–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  usageCount Int @default(0) // –°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å
  successRate Float @default(0.0) // –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã—Ö –∏—Å—Ö–æ–¥–æ–≤
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([validFor])
  @@index([location])
  @@map("weather_recommendations")
}

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
model CaptainRecommendation {
  id String @id @default(cuid())
  
  captainId String
  
  // –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  title String
  content String // –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  category CaptainRecommendationCategory
  
  // –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è
  targetSkillLevel SkillLevelRequired[] @default([])
  targetSpecies FishSpecies[] @default([]) // –î–ª—è –∫–∞–∫–∏—Ö –≤–∏–¥–æ–≤ —Ä—ã–±
  targetTechniques FishingTechnique[] @default([]) // –î–ª—è –∫–∞–∫–∏—Ö —Ç–µ—Ö–Ω–∏–∫
  
  // –ö–æ–Ω—Ç–µ–∫—Å—Ç
  seasonalContext Int[] @default([]) // –ú–µ—Å—è—Ü—ã (1-12)
  weatherContext Json? // –ü—Ä–∏ –∫–∞–∫–∏—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö
  locationContext Json? // –î–ª—è –∫–∞–∫–∏—Ö –º–µ—Å—Ç
  
  // –°–≤—è–∑–∞–Ω–Ω—ã–µ –ø–æ–µ–∑–¥–∫–∏
  relatedTripIds String[] @default([]) // ID —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫
  
  // –ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞
  isVerified Boolean @default(false) // –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π
  endorsements Int @default(0) // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–æ–±—Ä–µ–Ω–∏–π
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  views Int @default(0)
  helpfulVotes Int @default(0) // –ì–æ–ª–æ—Å–∞ "–ø–æ–ª–µ–∑–Ω–æ"
  notHelpfulVotes Int @default(0) // –ì–æ–ª–æ—Å–∞ "–Ω–µ –ø–æ–ª–µ–∑–Ω–æ"
  
  // –°—Ç–∞—Ç—É—Å
  isActive Boolean @default(true)
  moderationStatus ModerationStatus @default(PENDING)
  
  // –°–≤—è–∑–∏
  captain User @relation("CaptainRecommendationsAuthored", fields: [captainId], references: [id], onDelete: Cascade)
  votes CaptainRecommendationVote[] // –ì–æ–ª–æ—Å–∞ –∑–∞ —ç—Ç—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([captainId])
  @@index([category])
  @@index([isActive, moderationStatus])
  @@map("captain_recommendations")
}

// –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
model CaptainRecommendationVote {
  id String @id @default(cuid())
  
  userId String
  recommendationId String
  
  isHelpful Boolean // true = helpful, false = not helpful
  
  // –°–≤—è–∑–∏
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  recommendation CaptainRecommendation @relation(fields: [recommendationId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([userId, recommendationId])
  @@index([recommendationId])
  @@map("captain_recommendation_votes")
}

// –ü–æ—Ö–æ–∂–µ—Å—Ç—å –ø–æ–µ–∑–¥–æ–∫ –¥–ª—è collaborative filtering
model TripSimilarity {
  id String @id @default(cuid())
  
  tripId1 String
  tripId2 String
  
  // –ú–µ—Ç—Ä–∏–∫–∏ –ø–æ—Ö–æ–∂–µ—Å—Ç–∏
  overallSimilarity Float // –û–±—â–∞—è –ø–æ—Ö–æ–∂–µ—Å—Ç—å (0-1)
  
  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ—Ö–æ–∂–µ—Å—Ç–∏
  speciesSimilarity Float @default(0) // –ü–æ –≤–∏–¥–∞–º —Ä—ã–±
  techniqueSimilarity Float @default(0) // –ü–æ —Ç–µ—Ö–Ω–∏–∫–∞–º
  locationSimilarity Float @default(0) // –ü–æ –º–µ—Å—Ç–∞–º
  skillSimilarity Float @default(0) // –ü–æ —É—Ä–æ–≤–Ω—é –Ω–∞–≤—ã–∫–æ–≤
  seasonSimilarity Float @default(0) // –ü–æ —Å–µ–∑–æ–Ω—É/–≤—Ä–µ–º–µ–Ω–∏
  participantSimilarity Float @default(0) // –ü–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç–∞
  calculatedAt DateTime @default(now()) // –ö–æ–≥–¥–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ
  calculationMethod String // –ú–µ—Ç–æ–¥ —Ä–∞—Å—á–µ—Ç–∞
  isStale Boolean @default(false) // –£—Å—Ç–∞—Ä–µ–ª –ª–∏ —Ä–∞—Å—á–µ—Ç
  
  // –°–≤—è–∑–∏
  trip1 GroupTrip @relation("Trip1Similarities", fields: [tripId1], references: [id], onDelete: Cascade)
  trip2 GroupTrip @relation("Trip2Similarities", fields: [tripId2], references: [id], onDelete: Cascade)
  
  @@unique([tripId1, tripId2])
  @@index([overallSimilarity])
  @@index([calculatedAt])
  @@map("trip_similarities")
}

// ==== –ù–û–í–´–ï ENUMS ====

enum WindDirection {
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  CALM

  @@map("wind_direction")
}

enum DiaryMediaType {
  PHOTO
  VIDEO
  AUDIO

  @@map("diary_media_type")
}

enum RecommendationType {
  HISTORY_BASED // –ù–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ—Ö–æ–∂–∏—Ö –ø–æ–µ–∑–¥–æ–∫
  WEATHER_AI // –ü–æ–≥–æ–¥–Ω—ã–µ AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  SOCIAL_CAPTAIN // –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
  COLLABORATIVE // –ö–æ–ª–ª–∞–±–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
  CONTENT_BASED // –ù–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  HYBRID // –ì–∏–±—Ä–∏–¥–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  
  @@map("recommendation_type")
}

enum RecommendationInteractionType {
  VIEW // –ü—Ä–æ—Å–º–æ—Ç—Ä
  CLICK // –ö–ª–∏–∫ –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  LIKE // –õ–∞–π–∫
  DISLIKE // –î–∏–∑–ª–∞–π–∫
  SHARE // –ü–æ–¥–µ–ª–∏–ª—Å—è
  BOOK // –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—É—é –ø–æ–µ–∑–¥–∫—É
  DISMISS // –û—Ç–∫–ª–æ–Ω–∏–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
  REPORT // –ü–æ–∂–∞–ª–æ–≤–∞–ª—Å—è –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
  
  @@map("recommendation_interaction_type")
}

enum CaptainRecommendationCategory {
  TECHNIQUE_ADVICE // –°–æ–≤–µ—Ç—ã –ø–æ —Ç–µ—Ö–Ω–∏–∫–∞–º
  SPECIES_TARGETING // –°–æ–≤–µ—Ç—ã –ø–æ –≤–∏–¥–∞–º —Ä—ã–±
  LOCATION_TIPS // –°–æ–≤–µ—Ç—ã –ø–æ –º–µ—Å—Ç–∞–º
  EQUIPMENT_RECOMMENDATION // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
  WEATHER_STRATEGY // –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –ø–æ–≥–æ–¥—ã
  SAFETY_ADVICE // –°–æ–≤–µ—Ç—ã –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  BEGINNER_GUIDE // –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤
  SEASONAL_TIPS // –°–µ–∑–æ–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
  
  @@map("captain_recommendation_category")
}

enum ModerationStatus {
  PENDING // –û–∂–∏–¥–∞–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏
  APPROVED // –û–¥–æ–±—Ä–µ–Ω–æ
  REJECTED // –û—Ç–∫–ª–æ–Ω–µ–Ω–æ
  FLAGGED // –ü–æ–º–µ—á–µ–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  
  @@map("moderation_status")
}

// ============================================================================
// –°–ò–°–¢–ï–ú–ê –í–´–ü–õ–ê–¢ (PAYOUT SYSTEM)
// ============================================================================

// –ì—Ä–∞—Ñ–∏–∫–∏ –≤—ã–ø–ª–∞—Ç –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
model Payout {
  id String @id @default(cuid())
  
  // –°–≤—è–∑—å —Å –∫–∞–ø–∏—Ç–∞–Ω–æ–º
  captainId String
  captain   User   @relation("CaptainPayouts", fields: [captainId], references: [id], onDelete: Cascade)
  
  // –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  amount               Int      // –°—É–º–º–∞ –≤—ã–ø–ª–∞—Ç—ã –≤ —Ü–µ–Ω—Ç–∞—Ö
  currency             String   @default("EUR")
  commissionAmount     Int      // –°—É–º–º–∞ –∫–æ–º–∏—Å—Å–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è
  commissionRate       Float    // –ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏ –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—ã–ø–ª–∞—Ç—ã
  
  // –ü–µ—Ä–∏–æ–¥ –≤—ã–ø–ª–∞—Ç—ã
  periodStart          DateTime // –ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞
  periodEnd            DateTime // –ö–æ–Ω–µ—Ü –ø–µ—Ä–∏–æ–¥–∞
  
  // –°—Ç–∞—Ç—É—Å –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞
  status               PayoutStatus @default(PENDING)
  scheduleType         PayoutScheduleType @default(MONTHLY)
  
  // –ü–ª–∞—Ç–µ–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  paymentMethodId      String?  // ID —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –∫–∞–ø–∏—Ç–∞–Ω–∞
  paymentMethod        PaymentMethod? @relation(fields: [paymentMethodId], references: [id], onDelete: SetNull)
  
  // Stripe –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Stripe Connect)
  stripeTransferId     String?  @unique
  stripeAccountId      String?  // Connected Account ID –∫–∞–ø–∏—Ç–∞–Ω–∞
  
  // –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã (–µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Stripe)
  bankAccountNumber    String?
  bankRoutingNumber    String?
  bankName             String?
  bankAccountHolderName String?
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  processedAt          DateTime? // –ö–æ–≥–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
  processedBy          String?   // –ö—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª (admin user ID)
  approvedAt           DateTime? // –ö–æ–≥–¥–∞ –æ–¥–æ–±—Ä–µ–Ω–∞
  approvedBy           String?   // –ö—Ç–æ –æ–¥–æ–±—Ä–∏–ª
  rejectedAt           DateTime? // –ö–æ–≥–¥–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞
  rejectedBy           String?   // –ö—Ç–æ –æ—Ç–∫–ª–æ–Ω–∏–ª
  rejectionReason      String?   // –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
  
  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  notificationSent     Boolean   @default(false)
  remindersSent        Int       @default(0) // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
  lastReminderAt       DateTime?
  
  // –ù–∞–ª–æ–≥–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å
  taxYear              Int?      // –ù–∞–ª–æ–≥–æ–≤—ã–π –≥–æ–¥
  taxDocumentGenerated Boolean   @default(false)
  taxDocumentUrl       String?   // URL –Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  description          String?   // –û–ø–∏—Å–∞–Ω–∏–µ –≤—ã–ø–ª–∞—Ç—ã
  notes                String?   // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
  metadata             Json?     // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  
  // –°–≤—è–∑–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏
  relatedPaymentIds    String[]  @default([]) // ID –ø–ª–∞—Ç–µ–∂–µ–π, –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö –≤ –≤—ã–ø–ª–∞—Ç—É
  
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  
  @@index([captainId, status])
  @@index([periodStart, periodEnd])
  @@index([status, scheduleType])
  @@map("payouts")
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞ –≤—ã–ø–ª–∞—Ç –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
model PayoutSchedule {
  id String @id @default(cuid())
  
  // –°–≤—è–∑—å —Å –∫–∞–ø–∏—Ç–∞–Ω–æ–º
  captainId String @unique
  captain   User   @relation("CaptainPayoutSchedule", fields: [captainId], references: [id], onDelete: Cascade)
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞
  scheduleType         PayoutScheduleType @default(MONTHLY)
  isActive             Boolean            @default(true)
  
  // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã
  minimumPayoutAmount  Int                @default(5000) // ‚Ç¨50 –º–∏–Ω–∏–º—É–º
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–ø–ª–∞—Ç—ã
  autoPayoutEnabled    Boolean            @default(false)
  
  // –î–µ–Ω—å –≤—ã–ø–ª–∞—Ç—ã
  payoutDay            Int?               // –î–µ–Ω—å –º–µ—Å—è—Ü–∞ (1-31) –¥–ª—è –º–µ—Å—è—á–Ω—ã—Ö, –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (1-7) –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö
  
  // –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  defaultPaymentMethodId String?
  defaultPaymentMethod   PaymentMethod? @relation(fields: [defaultPaymentMethodId], references: [id], onDelete: SetNull)
  
  // –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  defaultBankAccount   Json?              // –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  
  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  notifyBeforePayoutDays Int              @default(3) // –ó–∞ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —É–≤–µ–¥–æ–º–ª—è—Ç—å
  emailNotifications     Boolean          @default(true)
  smsNotifications       Boolean          @default(false)
  
  // –ù–∞–ª–æ–≥–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  taxSettings          Json?              // –ù–∞–ª–æ–≥–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã
  
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  
  @@map("payout_schedules")
}

// –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤—ã–ø–ª–∞—Ç –¥–ª—è –∞—É–¥–∏—Ç–∞
model PayoutHistoryLog {
  id String @id @default(cuid())
  
  payoutId String
  
  // –ò–∑–º–µ–Ω–µ–Ω–∏—è
  action         PayoutAction  // –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è
  previousStatus PayoutStatus? // –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Å—Ç–∞—Ç—É—Å
  newStatus      PayoutStatus? // –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
  
  // –ö—Ç–æ –∏ –∫–æ–≥–¥–∞
  performedBy    String        // User ID
  performedAt    DateTime      @default(now())
  
  // –î–µ—Ç–∞–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  changeDetails  Json?         // –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  reason         String?       // –ü—Ä–∏—á–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  
  // IP –∏ device tracking –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  ipAddress      String?
  userAgent      String?
  
  createdAt      DateTime      @default(now())
  
  @@index([payoutId])
  @@index([performedAt])
  @@map("payout_history_logs")
}

enum PayoutStatus {
  PENDING      // –û–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
  APPROVED     // –û–¥–æ–±—Ä–µ–Ω–∞ –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã
  PROCESSING   // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
  COMPLETED    // –í—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
  FAILED       // –ù–µ—É—Å–ø–µ—à–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞
  CANCELLED    // –û—Ç–º–µ–Ω–µ–Ω–∞
  ON_HOLD      // –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
}

enum PayoutScheduleType {
  WEEKLY       // –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ
  BIWEEKLY     // –†–∞–∑ –≤ –¥–≤–µ –Ω–µ–¥–µ–ª–∏
  MONTHLY      // –ï–∂–µ–º–µ—Å—è—á–Ω–æ
  QUARTERLY    // –ï–∂–µ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ
  MANUAL       // –í—Ä—É—á–Ω—É—é –ø–æ –∑–∞–ø—Ä–æ—Å—É
}

enum PayoutAction {
  CREATED      // –°–æ–∑–¥–∞–Ω–∞
  APPROVED     // –û–¥–æ–±—Ä–µ–Ω–∞
  REJECTED     // –û—Ç–∫–ª–æ–Ω–µ–Ω–∞
  PROCESSED    // –û–±—Ä–∞–±–æ—Ç–∞–Ω–∞
  COMPLETED    // –ó–∞–≤–µ—Ä—à–µ–Ω–∞
  FAILED       // –ù–µ—É–¥–∞—á–Ω–∞—è
  CANCELLED    // –û—Ç–º–µ–Ω–µ–Ω–∞
  UPDATED      // –û–±–Ω–æ–≤–ª–µ–Ω–∞
}

// ============================================================================
// –ù–ê–õ–û–ì–û–í–ê–Ø –û–¢–ß–ï–¢–ù–û–°–¢–¨ (TAX REPORTING SYSTEM)
// ============================================================================

// –û—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å –Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ (–≥–æ–¥–æ–≤–æ–π/–∫–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–π)
model TaxReport {
  id String @id @default(cuid())
  
  // –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞
  taxYear        Int         // –ù–∞–ª–æ–≥–æ–≤—ã–π –≥–æ–¥
  reportType     TaxReportType // –¢–∏–ø –æ—Ç—á–µ—Ç–∞ (–≥–æ–¥–æ–≤–æ–π, –∫–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–π)
  quarterNumber  Int?        // –ù–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∞–ª–∞ (1-4), –µ—Å–ª–∏ –∫–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
  
  // –ü–µ—Ä–∏–æ–¥ –¥–∞–Ω–Ω—ã—Ö
  periodStart    DateTime    // –ù–∞—á–∞–ª–æ –æ—Ç—á–µ—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
  periodEnd      DateTime    // –ö–æ–Ω–µ—Ü –æ—Ç—á–µ—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
  
  // –°—Ç–∞—Ç—É—Å –æ—Ç—á–µ—Ç–∞
  status         TaxReportStatus @default(DRAFT)
  
  // –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏—Ç–æ–≥–∏
  totalGrossCommissions    Int      // –û–±—â–∞—è —Å—É–º–º–∞ –∫–æ–º–∏—Å—Å–∏–π –¥–æ –≤—ã—á–µ—Ç–æ–≤ (—Ü–µ–Ω—Ç—ã)
  totalNetCommissions      Int      // –û–±—â–∞—è —á–∏—Å—Ç–∞—è —Å—É–º–º–∞ –∫–æ–º–∏—Å—Å–∏–π (—Ü–µ–Ω—Ç—ã)
  totalWithholdings        Int      // –û–±—â–∏–µ —É–¥–µ—Ä–∂–∞–Ω–∏—è (—Ü–µ–Ω—Ç—ã)
  totalPayouts             Int      // –û–±—â–∏–µ –≤—ã–ø–ª–∞—Ç—ã (—Ü–µ–Ω—Ç—ã)
  
  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
  totalCaptains            Int      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ø–∏—Ç–∞–Ω–æ–≤
  totalTransactions        Int      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  totalDocumentsGenerated  Int      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
  generatedAt    DateTime?   // –ö–æ–≥–¥–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
  generatedBy    String?     // –ö—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª (admin user ID)
  
  // –§–∞–π–ª—ã –æ—Ç—á–µ—Ç–∞
  reportFileUrl       String?     // URL –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞
  summaryFileUrl      String?     // URL —Å–≤–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
  backupFileUrl       String?     // URL —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
  reportSummary      Json?        // –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç—á–µ—Ç–∞
  complianceChecks   Json?        // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–æ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
  
  // –ê—É–¥–∏—Ç –∏ –ø–æ–¥–ø–∏—Å–∏
  approvedAt         DateTime?    // –ö–æ–≥–¥–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω
  approvedBy         String?      // –ö—Ç–æ —É—Ç–≤–µ—Ä–¥–∏–ª
  digitalSignature   String?      // –¶–∏—Ñ—Ä–æ–≤–∞—è –ø–æ–¥–ø–∏—Å—å
  
  // –°–≤—è–∑–∏
  taxDocuments       TaxDocument[] // –°–≤—è–∑–∞–Ω–Ω—ã–µ –Ω–∞–ª–æ–≥–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
  auditLogs          TaxAuditLog[] // –ê—É–¥–∏—Ç–æ—Ä—Å–∫–∏–µ –∑–∞–ø–∏—Å–∏
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([taxYear, reportType, quarterNumber])
  @@index([taxYear, status])
  @@index([periodStart, periodEnd])
  @@map("tax_reports")
}

// –ù–∞–ª–æ–≥–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã (1099-MISC –∏ –¥—Ä—É–≥–∏–µ)
model TaxDocument {
  id String @id @default(cuid())
  
  // –°–≤—è–∑–∏
  taxReportId    String?     // –°–≤—è–∑—å —Å –æ—Ç—á–µ—Ç–æ–º (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º)
  taxReport      TaxReport?  @relation(fields: [taxReportId], references: [id], onDelete: SetNull)
  
  captainId      String      // –î–ª—è –∫–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç
  captain        User        @relation("CaptainTaxDocuments", fields: [captainId], references: [id], onDelete: Cascade)
  
  // –¢–∏–ø –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  documentType   TaxDocumentType   // –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ (1099-MISC, etc.)
  formType       String            // –§–æ—Ä–º–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ ("1099-MISC", "1099-K", etc.)
  
  // –ù–∞–ª–æ–≥–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥
  taxYear        Int               // –ù–∞–ª–æ–≥–æ–≤—ã–π –≥–æ–¥
  
  // –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  totalAmount    Int               // –û–±—â–∞—è —Å—É–º–º–∞ –≤ —Ü–µ–Ω—Ç–∞—Ö
  
  // –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Å—É–º–º (—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ –¥–ª—è 1099-MISC)
  box1Amount     Int?             // Box 1: Rents
  box2Amount     Int?             // Box 2: Royalties  
  box3Amount     Int?             // Box 3: Other Income
  box4Amount     Int?             // Box 4: Federal Income Tax Withheld
  box5Amount     Int?             // Box 5: Fishing Boat Proceeds
  box6Amount     Int?             // Box 6: Medical and Health Care Payments
  box7Amount     Int?             // Box 7: Nonemployee Compensation (–æ—Å–Ω–æ–≤–Ω–æ–µ –¥–ª—è –Ω–∞—Å)
  box8Amount     Int?             // Box 8: Substitute Payments
  box9Amount     Int?             // Box 9: Direct Sales
  box10Amount    Int?             // Box 10: Crop Insurance Proceeds
  box11Amount    Int?             // Box 11: Foreign Tax Paid
  box12Amount    Int?             // Box 12: Section 409A Deferrals
  box13Amount    Int?             // Box 13: Excess Golden Parachute Payments
  box14Amount    Int?             // Box 14: Gross Proceeds Paid to Attorney
  
  // –°—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞
  status         TaxDocumentStatus @default(DRAFT)
  
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
  generatedAt    DateTime?        // –ö–æ–≥–¥–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
  sentAt         DateTime?        // –ö–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—é
  receivedAt     DateTime?        // –ö–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  
  // –§–∞–π–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞
  documentUrl    String?          // URL PDF —Ñ–∞–π–ª–∞
  xmlDataUrl     String?          // URL XML –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ–¥–∞—á–∏)
  backupUrl      String?          // URL —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
  
  // –ü–æ–ª—É—á–∞—Ç–µ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  recipientTin   String?          // TIN –ø–æ–ª—É—á–∞—Ç–µ–ª—è (Tax Identification Number)
  recipientName  String           // –ü–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
  recipientAddress Json?          // –ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
  
  // –ü–ª–∞—Ç–µ–ª—å—â–∏–∫ (Cascais Fishing)
  payerTin       String?          // TIN –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞  
  payerName      String           // –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
  payerAddress   Json?            // –ê–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏
  
  // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è
  isValidated    Boolean          @default(false) // –ü—Ä–æ—à–µ–ª –ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é
  validationErrors Json?          // –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  complianceFlags  String[]       @default([])    // –§–ª–∞–≥–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
  
  // –ö–æ—Ä—Ä–µ–∫—Ü–∏–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  isCorrection   Boolean          @default(false) // –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
  originalDocId  String?          // ID –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  correctionReason String?        // –ü—Ä–∏—á–∏–Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  
  // –ê—É–¥–∏—Ç –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
  auditLogs      TaxAuditLog[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([captainId, taxYear, documentType])
  @@index([taxYear, status])
  @@index([captainId, taxYear])
  @@index([generatedAt])
  @@map("tax_documents")
}

// –ê—É–¥–∏—Ç–æ—Ä—Å–∫–∏–π –∂—É—Ä–Ω–∞–ª –¥–ª—è –Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
model TaxAuditLog {
  id String @id @default(cuid())
  
  // –°–≤—è–∑–∏ (–æ–¥–Ω–∞ –∏–∑ —Å–≤—è–∑–µ–π –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π)
  taxReportId     String?
  taxReport       TaxReport?   @relation(fields: [taxReportId], references: [id], onDelete: SetNull)
  
  taxDocumentId   String?
  taxDocument     TaxDocument? @relation(fields: [taxDocumentId], references: [id], onDelete: SetNull)
  
  payoutId        String?     // –°–≤—è–∑—å —Å –≤—ã–ø–ª–∞—Ç–æ–π, –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ
  
  // –î–µ–π—Å—Ç–≤–∏–µ –∏ —Å–æ–±—ã—Ç–∏–µ
  action          TaxAuditAction    // –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è
  eventType       TaxEventType      // –¢–∏–ø —Å–æ–±—ã—Ç–∏—è
  
  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç
  performedBy     String            // User ID –∫—Ç–æ –≤—ã–ø–æ–ª–Ω–∏–ª
  performedByName String?           // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞—É–¥–∏—Ç–∞
  
  // –î–µ—Ç–∞–ª–∏ —Å–æ–±—ã—Ç–∏—è
  description     String            // –û–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
  previousData    Json?             // –ü—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
  newData         Json?             // –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  
  // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  ipAddress       String?           // IP –∞–¥—Ä–µ—Å
  userAgent       String?           // User agent
  sessionId       String?           // ID —Å–µ—Å—Å–∏–∏
  
  // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Ä–∏—Å–∫–∏
  complianceLevel TaxComplianceLevel @default(NORMAL)
  riskFlags       String[]           @default([])
  
  // –í—Ä–µ–º—è
  performedAt DateTime @default(now())
  
  @@index([taxReportId])
  @@index([taxDocumentId])
  @@index([performedBy])
  @@index([performedAt])
  @@index([action, eventType])
  @@map("tax_audit_logs")
}

// Enum —Ç–∏–ø—ã –¥–ª—è –Ω–∞–ª–æ–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã

enum TaxReportType {
  ANNUAL     // –ì–æ–¥–æ–≤–æ–π –æ—Ç—á–µ—Ç
  QUARTERLY  // –ö–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
  MONTHLY    // –ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
  CUSTOM     // –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥
}

enum TaxReportStatus {
  DRAFT      // –ß–µ—Ä–Ω–æ–≤–∏–∫
  PROCESSING // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
  COMPLETED  // –ó–∞–≤–µ—Ä—à–µ–Ω
  SUBMITTED  // –û—Ç–ø—Ä–∞–≤–ª–µ–Ω
  APPROVED   // –£—Ç–≤–µ—Ä–∂–¥–µ–Ω
  REJECTED   // –û—Ç–∫–ª–æ–Ω–µ–Ω
  ARCHIVED   // –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω
}

enum TaxDocumentType {
  FORM_1099_MISC    // 1099-MISC —Ñ–æ—Ä–º–∞
  FORM_1099_K       // 1099-K —Ñ–æ—Ä–º–∞
  FORM_1096         // 1096 Summary —Ñ–æ—Ä–º–∞
  ANNUAL_SUMMARY    // –ì–æ–¥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
  QUARTERLY_SUMMARY // –ö–≤–∞—Ä—Ç–∞–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞
  CORRECTION        // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
  CUSTOM            // –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
}

enum TaxDocumentStatus {
  DRAFT         // –ß–µ—Ä–Ω–æ–≤–∏–∫
  GENERATED     // –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
  VALIDATED     // –ü—Ä–æ–≤–µ—Ä–µ–Ω
  APPROVED      // –£—Ç–≤–µ—Ä–∂–¥–µ–Ω
  SENT          // –û—Ç–ø—Ä–∞–≤–ª–µ–Ω
  RECEIVED      // –ü–æ–ª—É—á–µ–Ω
  FILED         // –ü–æ–¥–∞–Ω
  CORRECTED     // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω
  CANCELLED     // –û—Ç–º–µ–Ω–µ–Ω
}

enum TaxAuditAction {
  CREATED       // –°–æ–∑–¥–∞–Ω
  UPDATED       // –û–±–Ω–æ–≤–ª–µ–Ω
  DELETED       // –£–¥–∞–ª–µ–Ω
  GENERATED     // –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
  SENT          // –û—Ç–ø—Ä–∞–≤–ª–µ–Ω
  APPROVED      // –£—Ç–≤–µ—Ä–∂–¥–µ–Ω
  REJECTED      // –û—Ç–∫–ª–æ–Ω–µ–Ω
  VALIDATED     // –ü—Ä–æ–≤–µ—Ä–µ–Ω
  CORRECTED     // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω
  ARCHIVED      // –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω
  ACCESSED      // –î–æ—Å—Ç—É–ø –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω
  DOWNLOADED    // –°–∫–∞—á–∞–Ω
  EXPORTED      // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
}

enum TaxEventType {
  REPORT_MANAGEMENT    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞–º–∏
  DOCUMENT_MANAGEMENT  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
  DATA_EXPORT          // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
  COMPLIANCE_CHECK     // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
  USER_ACCESS          // –î–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  SYSTEM_MAINTENANCE   // –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
  AUDIT_REVIEW         // –ê—É–¥–∏—Ç–æ—Ä—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
  CORRECTION_PROCESS   // –ü—Ä–æ—Ü–µ—Å—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  NOTIFICATION_SENT    // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
}

enum TaxComplianceLevel {
  LOW       // –ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞
  NORMAL    // –û–±—ã—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
  HIGH      // –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞
  CRITICAL  // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
}

// Privacy controls for leaderboards and rankings
enum LeaderboardVisibility {
  PUBLIC      // –í–∏–¥–µ–Ω –≤—Å–µ–º –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞—Ö
  FRIENDS     // –í–∏–¥–µ–Ω —Ç–æ–ª—å–∫–æ –¥—Ä—É–∑—å—è–º
  PRIVATE     // –ù–µ –≤–∏–¥–µ–Ω –Ω–∏–∫–æ–º—É –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞—Ö
  ANONYMOUS   // –í–∏–¥–µ–Ω –∞–Ω–æ–Ω–∏–º–Ω–æ (–±–µ–∑ –∏–º–µ–Ω–∏)
}

enum ProfileVisibility {
  PUBLIC      // –ü—Ä–æ—Ñ–∏–ª—å –≤–∏–¥–µ–Ω –≤—Å–µ–º
  FRIENDS     // –ü—Ä–æ—Ñ–∏–ª—å –≤–∏–¥–µ–Ω —Ç–æ–ª—å–∫–æ –¥—Ä—É–∑—å—è–º  
  PRIVATE     // –ü—Ä–æ—Ñ–∏–ª—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π
  LIMITED     // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å (—Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)
}

// ============================================================================
// –°–ò–°–¢–ï–ú–ê –ù–ê–ì–†–ê–î –ò –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Ø (REWARD DISTRIBUTION SYSTEM)
// ============================================================================

// –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –≤ —Å–∏—Å—Ç–µ–º–µ
model Reward {
  id          String      @id @default(cuid())
  name        String      // –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥—ã
  description String?     // –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥—ã
  type        RewardType  // –¢–∏–ø –Ω–∞–≥—Ä–∞–¥—ã
  tier        RewardTier  // –£—Ä–æ–≤–µ–Ω—å –Ω–∞–≥—Ä–∞–¥—ã (bronze, silver, gold, platinum)
  
  // –í–∏–∑—É–∞–ª—å–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
  icon        String      // –ò–∫–æ–Ω–∫–∞ –Ω–∞–≥—Ä–∞–¥—ã
  color       String?     // –¶–≤–µ—Ç –Ω–∞–≥—Ä–∞–¥—ã
  imageUrl    String?     // URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã
  
  // –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è
  requirements Json?      // –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è
  rarity      AchievementRarity @default(COMMON)
  
  // –°—Ç–∞—Ç—É—Å –∏ –¥–∞—Ç—ã
  isActive    Boolean     @default(true)
  isLimited   Boolean     @default(false) // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
  maxQuantity Int?        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
  
  // –°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å
  seasonId    String?     // –ü—Ä–∏–≤—è–∑–∫–∞ –∫ —Å–µ–∑–æ–Ω—É
  validFrom   DateTime?   // –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ —Å
  validUntil  DateTime?   // –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –¥–æ
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  metadata    Json?       // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  // –°–≤—è–∑–∏
  season          Season?             @relation(fields: [seasonId], references: [id])
  distributions   RewardDistribution[] // –†–∞–∑–¥–∞—á–∏ —ç—Ç–æ–π –Ω–∞–≥—Ä–∞–¥—ã
  inventory       RewardInventory[]   // –í –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  events          RewardEvent[]       // –°–æ–±—ã—Ç–∏—è –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è
  
  @@map("rewards")
}

// –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥ (–∫—Ç–æ, —á—Ç–æ, –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–∏–ª)
model RewardDistribution {
  id          String                @id @default(cuid())
  rewardId    String
  userId      String
  
  // –ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–∞–≥—Ä–∞–¥—ã
  sourceType  RewardSourceType      // –û—Ç–∫—É–¥–∞ –Ω–∞–≥—Ä–∞–¥–∞ (competition, achievement, etc)
  sourceId    String?               // ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (competitionId, achievementId, etc)
  
  // –î–µ—Ç–∞–ª–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
  rank        Int?                  // –ú–µ—Å—Ç–æ –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–∏ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
  score       Decimal?              @db.Decimal(10, 2) // –ë–∞–ª–ª/—Ä–µ–∑—É–ª—å—Ç–∞—Ç
  reason      String?               // –ü—Ä–∏—á–∏–Ω–∞ –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è
  
  // –°—Ç–∞—Ç—É—Å
  status      RewardDistributionStatus @default(PENDING)
  distributedAt DateTime?            // –ö–æ–≥–¥–∞ –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞
  claimedAt   DateTime?             // –ö–æ–≥–¥–∞ –±—ã–ª–∞ –ø–æ–ª—É—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  
  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  notificationSent Boolean          @default(false)
  ceremonyShown   Boolean           @default(false)
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  metadata    Json?
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @updatedAt
  
  // –°–≤—è–∑–∏
  reward      Reward                @relation(fields: [rewardId], references: [id])
  user        User                  @relation(fields: [userId], references: [id])
  
  @@index([userId])
  @@index([sourceType, sourceId])
  @@map("reward_distributions")
}

// –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –Ω–∞–≥—Ä–∞–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
model RewardInventory {
  id          String    @id @default(cuid())
  userId      String
  rewardId    String
  
  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Å—Ç–∞—Ç—É—Å
  quantity    Int       @default(1)     // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
  isActive    Boolean   @default(true)  // –ê–∫—Ç–∏–≤–Ω–∞ –ª–∏ –Ω–∞–≥—Ä–∞–¥–∞
  isDisplayed Boolean   @default(true)  // –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ª–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
  
  // –ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  displayOrder Int?     // –ü–æ—Ä—è–¥–æ–∫ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
  category    String?   // –ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ
  obtainedAt  DateTime  @default(now()) // –ö–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞
  firstObtainedAt DateTime @default(now()) // –ö–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –≤–ø–µ—Ä–≤—ã–µ
  
  // –°–≤—è–∑–∏
  reward      Reward    @relation(fields: [rewardId], references: [id])
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, rewardId])
  @@index([userId, isActive])
  @@map("reward_inventory")
}

// –°–æ–±—ã—Ç–∏—è –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è (–¥–ª—è —Ü–µ—Ä–µ–º–æ–Ω–∏–π –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
model RewardEvent {
  id          String         @id @default(cuid())
  rewardId    String
  
  // –¢–∏–ø –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–±—ã—Ç–∏—è
  eventType   RewardEventType // –¢–∏–ø —Å–æ–±—ã—Ç–∏—è (ceremony, notification, etc)
  title       String         // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–±—ã—Ç–∏—è
  description String?        // –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
  
  // –£—á–∞—Å—Ç–Ω–∏–∫–∏
  participants String[]      // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π-—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
  winnerId    String?        // ID –≥–ª–∞–≤–Ω–æ–≥–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
  
  // –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
  scheduledFor DateTime?     // –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞
  startedAt   DateTime?      // –ö–æ–≥–¥–∞ –Ω–∞—á–∞–ª–æ—Å—å
  completedAt DateTime?      // –ö–æ–≥–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å
  
  // –°—Ç–∞—Ç—É—Å
  status      RewardEventStatus @default(SCHEDULED)
  isPublic    Boolean        @default(true)
  
  // –ö–æ–Ω—Ç–µ–Ω—Ç —Å–æ–±—ã—Ç–∏—è
  bannerUrl   String?        // –ë–∞–Ω–Ω–µ—Ä —Å–æ–±—ã—Ç–∏—è
  messageContent Json?       // –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  
  // –°–≤—è–∑–∏
  reward      Reward         @relation(fields: [rewardId], references: [id])
  winner      User?          @relation("RewardEventWinner", fields: [winnerId], references: [id])
  
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  
  @@index([eventType, scheduledFor])
  @@map("reward_events")
}

// –°–µ–∑–æ–Ω–Ω—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –Ω–∞–≥—Ä–∞–¥
model RewardCalendar {
  id          String    @id @default(cuid())
  name        String    // –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
  description String?   // –û–ø–∏—Å–∞–Ω–∏–µ
  
  // –ü–µ—Ä–∏–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è
  startDate   DateTime  // –ù–∞—á–∞–ª–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
  endDate     DateTime  // –ö–æ–Ω–µ—Ü –∫–∞–ª–µ–Ω–¥–∞—Ä—è
  
  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  rewards     Json      // –ù–∞–≥—Ä–∞–¥—ã –∏ –ø—Ä–∞–≤–∏–ª–∞ –∏—Ö –ø–æ–ª—É—á–µ–Ω–∏—è
  milestones  Json?     // –≠—Ç–∞–ø—ã –∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ü–µ–ª–∏
  
  // –°—Ç–∞—Ç—É—Å
  isActive    Boolean   @default(true)
  isPublic    Boolean   @default(true)
  
  // –°–≤—è–∑—å —Å —Å–µ–∑–æ–Ω–æ–º
  seasonId    String?
  season      Season?   @relation(fields: [seasonId], references: [id])
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  @@map("reward_calendars")
}

// Enums –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≥—Ä–∞–¥
enum RewardType {
  TROPHY      // –¢—Ä–æ—Ñ–µ–π
  BADGE       // –ó–Ω–∞—á–æ–∫
  TITLE       // –¢–∏—Ç—É–ª
  DECORATION  // –£–∫—Ä–∞—à–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
  FEATURE     // –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
  VIRTUAL_ITEM // –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
}

enum RewardTier {
  BRONZE      // –ë—Ä–æ–Ω–∑–∞
  SILVER      // –°–µ—Ä–µ–±—Ä–æ
  GOLD        // –ó–æ–ª–æ—Ç–æ
  PLATINUM    // –ü–ª–∞—Ç–∏–Ω–∞
  DIAMOND     // –ê–ª–º–∞–∑
  LEGENDARY   // –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π
}

enum RewardSourceType {
  COMPETITION       // –°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ
  ACHIEVEMENT       // –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
  MILESTONE        // –í–µ—Ö–∞
  SEASONAL_EVENT   // –°–µ–∑–æ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
  SPECIAL_EVENT    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
  ADMIN_GRANT      // –í—ã–¥–∞–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
  COMMUNITY_VOTE   // –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
}

enum RewardDistributionStatus {
  PENDING     // –û–∂–∏–¥–∞–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
  DISTRIBUTED // –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
  CLAIMED     // –ü–æ–ª—É—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  EXPIRED     // –ò—Å—Ç–µ–∫–ª–∞
  CANCELLED   // –û—Ç–º–µ–Ω–µ–Ω–∞
}

enum RewardEventType {
  CEREMONY    // –¶–µ—Ä–µ–º–æ–Ω–∏—è –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è
  NOTIFICATION // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  ANNOUNCEMENT // –û–±—ä—è–≤–ª–µ–Ω–∏–µ
  MILESTONE   // –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤–µ—Ö–∏
}

enum RewardEventStatus {
  SCHEDULED   // –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ
  ACTIVE      // –ê–∫—Ç–∏–≤–Ω–æ
  COMPLETED   // –ó–∞–≤–µ—Ä—à–µ–Ω–æ
  CANCELLED   // –û—Ç–º–µ–Ω–µ–Ω–æ
}
